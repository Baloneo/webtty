{"version":3,"sources":["../node_modules/core-js/library/modules/_core.js","../node_modules/core-js/library/fn/json/stringify.js","../node_modules/@babel/runtime-corejs2/core-js/json/stringify.js","../node_modules/core-js/library/modules/_to-integer.js","../node_modules/core-js/library/modules/_defined.js","../node_modules/core-js/library/modules/_string-at.js","../node_modules/core-js/library/modules/_library.js","../node_modules/core-js/library/modules/_global.js","../node_modules/core-js/library/modules/_a-function.js","../node_modules/core-js/library/modules/_ctx.js","../node_modules/core-js/library/modules/_is-object.js","../node_modules/core-js/library/modules/_an-object.js","../node_modules/core-js/library/modules/_fails.js","../node_modules/core-js/library/modules/_descriptors.js","../node_modules/core-js/library/modules/_dom-create.js","../node_modules/core-js/library/modules/_ie8-dom-define.js","../node_modules/core-js/library/modules/_to-primitive.js","../node_modules/core-js/library/modules/_object-dp.js","../node_modules/core-js/library/modules/_property-desc.js","../node_modules/core-js/library/modules/_hide.js","../node_modules/core-js/library/modules/_has.js","../node_modules/core-js/library/modules/_export.js","../node_modules/core-js/library/modules/_redefine.js","../node_modules/core-js/library/modules/_iterators.js","../node_modules/core-js/library/modules/_cof.js","../node_modules/core-js/library/modules/_iobject.js","../node_modules/core-js/library/modules/_to-iobject.js","../node_modules/core-js/library/modules/_to-length.js","../node_modules/core-js/library/modules/_to-absolute-index.js","../node_modules/core-js/library/modules/_array-includes.js","../node_modules/core-js/library/modules/_shared.js","../node_modules/core-js/library/modules/_uid.js","../node_modules/core-js/library/modules/_shared-key.js","../node_modules/core-js/library/modules/_object-keys-internal.js","../node_modules/core-js/library/modules/_enum-bug-keys.js","../node_modules/core-js/library/modules/_object-keys.js","../node_modules/core-js/library/modules/_object-dps.js","../node_modules/core-js/library/modules/_html.js","../node_modules/core-js/library/modules/_object-create.js","../node_modules/core-js/library/modules/_wks.js","../node_modules/core-js/library/modules/_set-to-string-tag.js","../node_modules/core-js/library/modules/_iter-create.js","../node_modules/core-js/library/modules/_to-object.js","../node_modules/core-js/library/modules/_object-gpo.js","../node_modules/core-js/library/modules/_iter-define.js","../node_modules/core-js/library/modules/es6.string.iterator.js","../node_modules/core-js/library/modules/_add-to-unscopables.js","../node_modules/core-js/library/modules/_iter-step.js","../node_modules/core-js/library/modules/es6.array.iterator.js","../node_modules/core-js/library/modules/web.dom.iterable.js","../node_modules/core-js/library/modules/_wks-ext.js","../node_modules/core-js/library/fn/symbol/iterator.js","../node_modules/@babel/runtime-corejs2/core-js/symbol/iterator.js","../node_modules/core-js/library/modules/_meta.js","../node_modules/core-js/library/modules/_wks-define.js","../node_modules/core-js/library/modules/_object-gops.js","../node_modules/core-js/library/modules/_object-pie.js","../node_modules/core-js/library/modules/_enum-keys.js","../node_modules/core-js/library/modules/_is-array.js","../node_modules/core-js/library/modules/_object-gopn.js","../node_modules/core-js/library/modules/_object-gopn-ext.js","../node_modules/core-js/library/modules/_object-gopd.js","../node_modules/core-js/library/modules/es6.symbol.js","../node_modules/core-js/library/modules/es7.symbol.async-iterator.js","../node_modules/core-js/library/modules/es7.symbol.observable.js","../node_modules/core-js/library/fn/symbol/index.js","../node_modules/@babel/runtime-corejs2/core-js/symbol.js","../node_modules/core-js/library/modules/_classof.js","../node_modules/core-js/library/modules/_an-instance.js","../node_modules/core-js/library/modules/_iter-call.js","../node_modules/core-js/library/modules/_is-array-iter.js","../node_modules/core-js/library/modules/core.get-iterator-method.js","../node_modules/core-js/library/modules/_for-of.js","../node_modules/core-js/library/modules/_species-constructor.js","../node_modules/core-js/library/modules/_invoke.js","../node_modules/core-js/library/modules/_task.js","../node_modules/core-js/library/modules/_microtask.js","../node_modules/core-js/library/modules/_new-promise-capability.js","../node_modules/core-js/library/modules/_perform.js","../node_modules/core-js/library/modules/_user-agent.js","../node_modules/core-js/library/modules/_promise-resolve.js","../node_modules/core-js/library/modules/_redefine-all.js","../node_modules/core-js/library/modules/_set-species.js","../node_modules/core-js/library/modules/_iter-detect.js","../node_modules/core-js/library/modules/es6.promise.js","../node_modules/core-js/library/modules/es7.promise.finally.js","../node_modules/core-js/library/modules/es7.promise.try.js","../node_modules/core-js/library/fn/promise.js","../node_modules/@babel/runtime-corejs2/core-js/promise.js","../node_modules/xterm/src/common/Lifecycle.ts","../node_modules/xterm/src/common/EventEmitter.ts","../node_modules/xterm/src/common/CircularList.ts","../node_modules/xterm/src/BufferLine.ts","../node_modules/xterm/src/Buffer.ts","../node_modules/xterm/src/BufferSet.ts","../node_modules/xterm/src/CompositionHelper.ts","../node_modules/xterm/src/ui/Lifecycle.ts","../node_modules/xterm/src/Viewport.ts","../node_modules/xterm/src/handlers/Clipboard.ts","../node_modules/xterm/src/common/data/EscapeSequences.ts","../node_modules/xterm/src/core/data/Charsets.ts","../node_modules/xterm/src/renderer/Types.ts","../node_modules/xterm/src/CharWidth.ts","../node_modules/xterm/src/Types.ts","../node_modules/xterm/src/EscapeSequenceParser.ts","../node_modules/xterm/src/InputHandler.ts","../node_modules/xterm/src/renderer/atlas/Types.ts","../node_modules/xterm/src/renderer/GridCache.ts","../node_modules/xterm/src/renderer/atlas/CharAtlasUtils.ts","../node_modules/xterm/src/renderer/atlas/BaseCharAtlas.ts","../node_modules/xterm/src/renderer/ColorManager.ts","../node_modules/xterm/src/shared/atlas/Types.ts","../node_modules/xterm/src/shared/utils/Browser.ts","../node_modules/xterm/src/shared/atlas/CharAtlasGenerator.ts","../node_modules/xterm/src/renderer/atlas/LRUMap.ts","../node_modules/xterm/src/renderer/atlas/DynamicCharAtlas.ts","../node_modules/xterm/src/renderer/atlas/NoneCharAtlas.ts","../node_modules/xterm/src/renderer/atlas/StaticCharAtlas.ts","../node_modules/xterm/src/renderer/atlas/CharAtlasCache.ts","../node_modules/xterm/src/renderer/BaseRenderLayer.ts","../node_modules/xterm/src/renderer/TextRenderLayer.ts","../node_modules/xterm/src/renderer/SelectionRenderLayer.ts","../node_modules/xterm/src/renderer/CursorRenderLayer.ts","../node_modules/xterm/src/renderer/LinkRenderLayer.ts","../node_modules/xterm/src/ui/RenderDebouncer.ts","../node_modules/xterm/src/ui/ScreenDprMonitor.ts","../node_modules/xterm/src/renderer/CharacterJoinerRegistry.ts","../node_modules/xterm/src/renderer/Renderer.ts","../node_modules/xterm/src/ui/MouseZoneManager.ts","../node_modules/xterm/src/Linkifier.ts","../node_modules/xterm/src/utils/MouseHelper.ts","../node_modules/xterm/src/SelectionModel.ts","../node_modules/xterm/src/handlers/AltClickHandler.ts","../node_modules/xterm/src/SelectionManager.ts","../node_modules/xterm/src/ui/CharMeasure.ts","../node_modules/xterm/src/Strings.ts","../node_modules/xterm/src/utils/Clone.ts","../node_modules/xterm/src/SoundManager.ts","../node_modules/xterm/src/AccessibilityManager.ts","../node_modules/xterm/src/renderer/dom/DomRendererRowFactory.ts","../node_modules/xterm/src/renderer/dom/DomRenderer.ts","../node_modules/xterm/src/core/Types.ts","../node_modules/xterm/src/core/input/Keyboard.ts","../node_modules/xterm/src/Terminal.ts","../node_modules/xterm/src/public/Terminal.ts","../node_modules/xterm/src/xterm.ts","../node_modules/@babel/runtime-corejs2/helpers/typeof.js","attach.ts","../node_modules/xterm/src/addons/fullscreen/fullscreen.ts","../node_modules/xterm/src/addons/fit/fit.ts","../node_modules/regenerator-runtime/runtime.js","../node_modules/regenerator-runtime/runtime-module.js","../node_modules/@babel/runtime-corejs2/regenerator/index.js","../node_modules/core-js/library/modules/_object-sap.js","../node_modules/core-js/library/modules/es6.object.keys.js","../node_modules/core-js/library/fn/object/keys.js","../node_modules/@babel/runtime-corejs2/core-js/object/keys.js","../node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js","../node_modules/core-js/library/modules/_string-ws.js","../node_modules/core-js/library/modules/_string-trim.js","../node_modules/core-js/library/modules/_parse-int.js","../node_modules/core-js/library/modules/es6.parse-int.js","../node_modules/core-js/library/fn/parse-int.js","../node_modules/@babel/runtime-corejs2/core-js/parse-int.js","../node_modules/core-js/library/modules/_bind.js","../node_modules/core-js/library/modules/es6.reflect.construct.js","../node_modules/core-js/library/fn/reflect/construct.js","../node_modules/@babel/runtime-corejs2/core-js/reflect/construct.js","../node_modules/core-js/library/modules/es6.reflect.apply.js","../node_modules/core-js/library/fn/reflect/apply.js","../node_modules/@babel/runtime-corejs2/core-js/reflect/apply.js","../node_modules/core-js/library/modules/es6.reflect.set.js","../node_modules/core-js/library/fn/reflect/set.js","../node_modules/@babel/runtime-corejs2/core-js/reflect/set.js","../node_modules/core-js/library/modules/es6.reflect.get.js","../node_modules/core-js/library/fn/reflect/get.js","../node_modules/@babel/runtime-corejs2/core-js/reflect/get.js","../node_modules/core-js/library/modules/es6.date.now.js","../node_modules/core-js/library/fn/date/now.js","../node_modules/@babel/runtime-corejs2/core-js/date/now.js","../node_modules/core-js/library/modules/_validate-collection.js","../node_modules/core-js/library/modules/_collection-strong.js","../node_modules/core-js/library/modules/_array-species-constructor.js","../node_modules/core-js/library/modules/_array-species-create.js","../node_modules/core-js/library/modules/_array-methods.js","../node_modules/core-js/library/modules/_collection.js","../node_modules/core-js/library/modules/es6.map.js","../node_modules/core-js/library/modules/_array-from-iterable.js","../node_modules/core-js/library/modules/_collection-to-json.js","../node_modules/core-js/library/modules/es7.map.to-json.js","../node_modules/core-js/library/modules/_set-collection-of.js","../node_modules/core-js/library/modules/es7.map.of.js","../node_modules/core-js/library/modules/_set-collection-from.js","../node_modules/core-js/library/modules/es7.map.from.js","../node_modules/core-js/library/fn/map.js","../node_modules/@babel/runtime-corejs2/core-js/map.js","../node_modules/@babel/runtime-corejs2/helpers/classCallCheck.js","../node_modules/core-js/library/modules/es6.object.define-property.js","../node_modules/core-js/library/fn/object/define-property.js","../node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","../node_modules/@babel/runtime-corejs2/helpers/createClass.js","wasm_exec.js","app.ts"],"names":["window","global","self","Error","outputBuf","fs","constants","O_WRONLY","O_RDWR","O_CREAT","O_TRUNC","O_APPEND","O_EXCL","writeSync","fd","buf","nl","decoder","decode","lastIndexOf","console","log","substr","length","openSync","path","flags","mode","err","code","encoder","TextEncoder","TextDecoder","Go","argv","env","exit","warn","_callbackTimeouts","_nextCallbackTimeoutID","mem","DataView","_inst","exports","buffer","setInt64","addr","v","setUint32","Math","floor","getInt64","low","getUint32","getInt32","loadValue","f","getFloat64","isNaN","id","_values","storeValue","setFloat64","undefined","ref","_refs","get","push","set","typeFlag","loadSlice","array","len","Uint8Array","loadSliceOfValues","a","Array","i","loadString","saddr","timeOrigin","performance","now","importObject","go","sp","exited","p","n","msec","Date","getTime","setInt32","setTimeout","_resolveCallbackPromise","clearTimeout","delete","crypto","getRandomValues","m","args","setUint8","str","encode","String","debug","value","instance","NaN","_callbackShutdown","offset","strPtr","ptr","argc","argvPtrs","forEach","arg","keys","sort","key","callbackPromise","resolve","run","pendingCallbacks","arguments","preventDefault","stopPropagation","stopImmediatePropagation","fn","event"],"mappings":"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MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,QAEz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","file":"app.e3f15671.map","sourceRoot":"../src","sourcesContent":["var core = module.exports = { version: '2.5.7' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n","module.exports = require(\"core-js/library/fn/json/stringify\");","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","module.exports = true;\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","module.exports = require('./_hide');\n","module.exports = {};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'\n});\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","module.exports = function () { /* empty */ };\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","require('./es6.array.iterator');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar TO_STRING_TAG = require('./_wks')('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n","exports.f = require('./_wks');\n","require('../../modules/es6.string.iterator');\nrequire('../../modules/web.dom.iterable');\nmodule.exports = require('../../modules/_wks-ext').f('iterator');\n","module.exports = require(\"core-js/library/fn/symbol/iterator\");","var META = require('./_uid')('meta');\nvar isObject = require('./_is-object');\nvar has = require('./_has');\nvar setDesc = require('./_object-dp').f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !require('./_fails')(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar LIBRARY = require('./_library');\nvar wksExt = require('./_wks-ext');\nvar defineProperty = require('./_object-dp').f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n","exports.f = Object.getOwnPropertySymbols;\n","exports.f = {}.propertyIsEnumerable;\n","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","'use strict';\n// ECMAScript 6 symbols shim\nvar global = require('./_global');\nvar has = require('./_has');\nvar DESCRIPTORS = require('./_descriptors');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar META = require('./_meta').KEY;\nvar $fails = require('./_fails');\nvar shared = require('./_shared');\nvar setToStringTag = require('./_set-to-string-tag');\nvar uid = require('./_uid');\nvar wks = require('./_wks');\nvar wksExt = require('./_wks-ext');\nvar wksDefine = require('./_wks-define');\nvar enumKeys = require('./_enum-keys');\nvar isArray = require('./_is-array');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar createDesc = require('./_property-desc');\nvar _create = require('./_object-create');\nvar gOPNExt = require('./_object-gopn-ext');\nvar $GOPD = require('./_object-gopd');\nvar $DP = require('./_object-dp');\nvar $keys = require('./_object-keys');\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f = $propertyIsEnumerable;\n  require('./_object-gops').f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !require('./_library')) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n","require('./_wks-define')('asyncIterator');\n","require('./_wks-define')('observable');\n","require('../../modules/es6.symbol');\nrequire('../../modules/es6.object.to-string');\nrequire('../../modules/es7.symbol.async-iterator');\nrequire('../../modules/es7.symbol.observable');\nmodule.exports = require('../../modules/_core').Symbol;\n","module.exports = require(\"core-js/library/fn/symbol\");","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n","var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n","'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n","var global = require('./_global');\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n","var anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","var hide = require('./_hide');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    if (safe && target[key]) target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};\n","'use strict';\nvar global = require('./_global');\nvar core = require('./_core');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar userAgent = require('./_user-agent');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function')\n      && promise.then(empty) instanceof FakePromise\n      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n      // we can't detect it synchronously, so just check versions\n      && v8.indexOf('6.6') !== 0\n      && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n","// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n","'use strict';\n// https://github.com/tc39/proposal-promise-try\nvar $export = require('./_export');\nvar newPromiseCapability = require('./_new-promise-capability');\nvar perform = require('./_perform');\n\n$export($export.S, 'Promise', { 'try': function (callbackfn) {\n  var promiseCapability = newPromiseCapability.f(this);\n  var result = perform(callbackfn);\n  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n  return promiseCapability.promise;\n} });\n","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.promise');\nrequire('../modules/es7.promise.finally');\nrequire('../modules/es7.promise.try');\nmodule.exports = require('../modules/_core').Promise;\n","module.exports = require(\"core-js/library/fn/promise\");","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'xterm';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    this._disposables.forEach(d => d.dispose());\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   */\n  public register<T extends IDisposable>(d: T): void {\n    this._disposables.push(d);\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { XtermListener } from './Types';\nimport { IEventEmitter, IDisposable } from 'xterm';\nimport { Disposable } from './Lifecycle';\n\nexport class EventEmitter extends Disposable implements IEventEmitter, IDisposable {\n  private _events: {[type: string]: XtermListener[]};\n\n  constructor() {\n    super();\n    // Restore the previous events if available, this will happen if the\n    // constructor is called multiple times on the same object (terminal reset).\n    this._events = this._events || {};\n  }\n\n  public on(type: string, listener: XtermListener): void {\n    this._events[type] = this._events[type] || [];\n    this._events[type].push(listener);\n  }\n\n  /**\n   * Adds a disposabe listener to the EventEmitter, returning the disposable.\n   * @param type The event type.\n   * @param handler The handler for the listener.\n   */\n  public addDisposableListener(type: string, handler: XtermListener): IDisposable {\n    // TODO: Rename addDisposableEventListener to more easily disambiguate from Dom listener\n    this.on(type, handler);\n    let disposed = false;\n    return {\n      dispose: () => {\n        if (disposed) {\n          // Already disposed\n          return;\n        }\n        this.off(type, handler);\n        disposed = true;\n      }\n    };\n  }\n\n  public off(type: string, listener: XtermListener): void {\n    if (!this._events[type]) {\n      return;\n    }\n\n    const obj = this._events[type];\n    let i = obj.length;\n\n    while (i--) {\n      if (obj[i] === listener) {\n        obj.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  public removeAllListeners(type: string): void {\n    if (this._events[type]) {\n       delete this._events[type];\n    }\n  }\n\n  public emit(type: string, ...args: any[]): void {\n    if (!this._events[type]) {\n      return;\n    }\n    const obj = this._events[type];\n    for (let i = 0; i < obj.length; i++) {\n      obj[i].apply(this, args);\n    }\n  }\n\n  public listeners(type: string): XtermListener[] {\n    return this._events[type] || [];\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._events = {};\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from './EventEmitter';\nimport { ICircularList } from './Types';\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends EventEmitter implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex++;\n      if (this._startIndex === this._maxLength) {\n        this._startIndex = 0;\n      }\n      this.emit('trim', 1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n    }\n\n    if (items && items.length) {\n      // Add items\n      for (let i = this._length - 1; i >= start; i--) {\n        this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n      }\n      for (let i = 0; i < items.length; i++) {\n        this._array[this._getCyclicIndex(start + i)] = items[i];\n      }\n\n      // Adjust length as needed\n      if (this._length + items.length > this.maxLength) {\n        const countToTrim = (this._length + items.length) - this.maxLength;\n        this._startIndex += countToTrim;\n        this._length = this.maxLength;\n        this.emit('trim', countToTrim);\n      } else {\n        this._length += items.length;\n      }\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.emit('trim', count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this.maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.emit('trim', 1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this.maxLength;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { CharData, IBufferLine } from './Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, NULL_CELL_CHAR } from './Buffer';\n\n/**\n * Class representing a terminal line.\n */\nexport class BufferLine implements IBufferLine {\n  static blankLine(cols: number, attr: number, isWrapped?: boolean): IBufferLine {\n    const ch: CharData = [attr, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE];\n    return new BufferLine(cols, ch, isWrapped);\n  }\n  protected _data: CharData[];\n  public isWrapped = false;\n  public length: number;\n\n  constructor(cols?: number, ch?: CharData, isWrapped?: boolean) {\n    this._data = [];\n    this.length = this._data.length;\n    if (cols) {\n      if (!ch) {\n        ch = [0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE];\n      }\n      for (let i = 0; i < cols; i++) {\n        this.push(ch);  // Note: the ctor ch is not cloned (resembles old behavior)\n      }\n    }\n    if (isWrapped) {\n      this.isWrapped = true;\n    }\n  }\n\n  public get(index: number): CharData {\n    return this._data[index];\n  }\n\n  public set(index: number, data: CharData): void {\n    this._data[index] = data;\n  }\n\n  public pop(): CharData | undefined  {\n    const data = this._data.pop();\n    this.length = this._data.length;\n    return data;\n  }\n\n  public push(data: CharData): void {\n    this._data.push(data);\n    this.length = this._data.length;\n  }\n\n  public splice(start: number, deleteCount: number, ...items: CharData[]): CharData[] {\n    const removed = this._data.splice(start, deleteCount, ...items);\n    this.length = this._data.length;\n    return removed;\n  }\n\n  /** insert n cells ch at pos, right cells are lost (stable length)  */\n  public insertCells(pos: number, n: number, ch: CharData): void {\n    while (n--) {\n      this.splice(pos, 0, ch);\n      this.pop();\n    }\n  }\n\n  /** delete n cells at pos, right side is filled with fill (stable length) */\n  public deleteCells(pos: number, n: number, fill: CharData): void {\n    while (n--) {\n      this.splice(pos, 1);\n      this.push(fill);\n    }\n  }\n\n  /** replace cells from pos to pos + n - 1 with fill */\n  public replaceCells(start: number, end: number, fill: CharData): void {\n    while (start < end  && start < this.length) {\n      this.set(start++, fill);  // Note: fill is not cloned (resembles old behavior)\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList } from './common/CircularList';\nimport { CharData, ITerminal, IBuffer, IBufferLine, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from './Types';\nimport { EventEmitter } from './common/EventEmitter';\nimport { IMarker } from 'xterm';\nimport { BufferLine } from './BufferLine';\n\nexport const DEFAULT_ATTR = (0 << 18) | (257 << 9) | (256 << 0);\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\nexport const NULL_CELL_CHAR = ' ';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 32;\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number;\n  public ybase: number;\n  public y: number;\n  public x: number;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: any;\n  public savedY: number;\n  public savedX: number;\n  public markers: Marker[] = [];\n\n  /**\n   * Create a new Buffer.\n   * @param _terminal The terminal the Buffer will belong to.\n   * @param _hasScrollback Whether the buffer should respect the scrollback of\n   * the terminal.\n   */\n  constructor(\n    private _terminal: ITerminal,\n    private _hasScrollback: boolean\n  ) {\n    this.clear();\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._terminal.rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._terminal.rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._terminal.options.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(): void {\n    if (this.lines.length === 0) {\n      let i = this._terminal.rows;\n      while (i--) {\n        this.lines.push(BufferLine.blankLine(this._terminal.cols, DEFAULT_ATTR));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._terminal.rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._terminal.rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (we don't do anything when columns reduce)\n      if (this._terminal.cols < newCols) {\n        const ch: CharData = [DEFAULT_ATTR, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]; // does xterm use the default attr?\n        for (let i = 0; i < this.lines.length; i++) {\n          while (this.lines.get(i).length < newCols) {\n            this.lines.get(i).push(ch);\n          }\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._terminal.rows < newRows) {\n        for (let y = this._terminal.rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n              // There is room above the buffer and there are no empty elements below the line,\n              // scroll up\n              this.ybase--;\n              addToY++;\n              if (this.ydisp > 0) {\n                // Viewport is at the top of the buffer, must increase downwards\n                this.ydisp--;\n              }\n            } else {\n              // Add a blank line if there is no buffer left at the top to scroll to, or if there\n              // are blank lines after the cursor\n              this.lines.push(BufferLine.blankLine(newCols, DEFAULT_ATTR));\n            }\n          }\n        }\n      } else { // (this._terminal.rows >= newRows)\n        for (let y = this._terminal.rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedY = Math.min(this.savedY, newRows - 1);\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n  }\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        [-1, -1];\n      }\n      for (let i = 0; i < line.length; ++i) {\n        stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length;\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol: number = null): string {\n    // Get full line\n    let lineString = '';\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n\n    // Initialize column and index values. Column values represent the actual\n    // cell column, indexes represent the index in the string. Indexes are\n    // needed here because some chars are 0 characters long (eg. after wide\n    // chars) and some chars are longer than 1 characters long (eg. emojis).\n    let startIndex = startCol;\n    // Only set endCol to the line length when it is null. 0 is a valid column.\n    if (endCol === null) {\n      endCol = line.length;\n    }\n    let endIndex = endCol;\n\n    for (let i = 0; i < line.length; i++) {\n      const char = line.get(i);\n      lineString += char[CHAR_DATA_CHAR_INDEX];\n      // Adjust start and end cols for wide characters if they affect their\n      // column indexes\n      if (char[CHAR_DATA_WIDTH_INDEX] === 0) {\n        if (startCol >= i) {\n          startIndex--;\n        }\n        if (endCol > i) {\n          endIndex--;\n        }\n      } else {\n        // Adjust the columns to take glyphs that are represented by multiple\n        // code points into account.\n        if (char[CHAR_DATA_CHAR_INDEX].length > 1) {\n          if (startCol > i) {\n            startIndex += char[CHAR_DATA_CHAR_INDEX].length - 1;\n          }\n          if (endCol > i) {\n            endIndex += char[CHAR_DATA_CHAR_INDEX].length - 1;\n          }\n        }\n      }\n    }\n\n    // Calculate the final end col by trimming whitespace on the right of the\n    // line if needed.\n    if (trimRight) {\n      const rightWhitespaceIndex = lineString.search(/\\s+$/);\n      if (rightWhitespaceIndex !== -1) {\n        endIndex = Math.min(endIndex, rightWhitespaceIndex);\n      }\n      // Return the empty string if only trimmed whitespace is selected\n      if (endIndex <= startIndex) {\n        return '';\n      }\n    }\n\n    return lineString.substring(startIndex, endIndex);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first).isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1).isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._terminal.cols; i += this._terminal.options.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._terminal.cols ? this._terminal.cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._terminal.cols);\n    return x >= this._terminal.cols ? this._terminal.cols - 1 : x < 0 ? 0 : x;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.addDisposableListener('trim', amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(marker.addDisposableListener('dispose', () => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    // TODO: This could probably be optimized by relying on sort order and trimming the array using .length\n    this.markers.splice(this.markers.indexOf(marker), 1);\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\nexport class Marker extends EventEmitter implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this.emit('dispose');\n    super.dispose();\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor (\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let result = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      // TODO: always apply trimRight after fixing #1685\n      result += this._buffer.translateBufferLineToString(i, (this._trimRight) ? i === range.last : false);\n    }\n    this._current = range.last + 1;\n    return {range: range, content: result};\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal, IBufferSet } from './Types';\nimport { Buffer } from './Buffer';\nimport { EventEmitter } from './common/EventEmitter';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends EventEmitter implements IBufferSet {\n  private _normal: Buffer;\n  private _alt: Buffer;\n  private _activeBuffer: Buffer;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(private _terminal: ITerminal) {\n    super();\n    this._normal = new Buffer(this._terminal, true);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(this._terminal, false);\n    this._activeBuffer = this._normal;\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this.emit('activate', {\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows();\n    this._activeBuffer = this._alt;\n    this.emit('activate', {\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal } from './Types';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Creates a new CompositionHelper.\n   * @param _textarea The textarea that xterm uses for input.\n   * @param _compositionView The element to display the in-progress composition in.\n   * @param _terminal The Terminal to forward the finished composition to.\n   */\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    private _compositionView: HTMLElement,\n    private _terminal: ITerminal\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: null, end: null };\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: CompositionEvent): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      } else if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropogation Whether to wait for events to propogate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is send before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropogation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n    this._clearTextareaPosition();\n\n    if (!waitForPropogation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._terminal.handler(input);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved, this solution was used\n      // because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          this._terminal.handler(input);\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._terminal.handler(diff);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._terminal.buffer.isCursorInViewport) {\n      const cellHeight = Math.ceil(this._terminal.charMeasure.height * this._terminal.options.lineHeight);\n      const cursorTop = this._terminal.buffer.y * cellHeight;\n      const cursorLeft = this._terminal.buffer.x * this._terminal.charMeasure.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      this._textarea.style.width = compositionViewBounds.width + 'px';\n      this._textarea.style.height = compositionViewBounds.height + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n\n  /**\n   * Clears the textarea's position so that the cursor does not blink on IE.\n   * @private\n   */\n  private _clearTextareaPosition(): void {\n    this._textarea.style.left = '';\n    this._textarea.style.top = '';\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'xterm';\n\n/**\n * Adds a disposabe listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  useCapture?: boolean\n): IDisposable {\n  node.addEventListener(type, handler, useCapture);\n  return {\n    dispose: () => {\n      if (!handler) {\n        // Already disposed\n        return;\n      }\n      node.removeEventListener(type, handler, useCapture);\n      node = null;\n      handler = null;\n    }\n  };\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorSet } from './renderer/Types';\nimport { ITerminal, IViewport } from './Types';\nimport { CharMeasure } from './ui/CharMeasure';\nimport { Disposable } from './common/Lifecycle';\nimport { addDisposableDomListener } from './ui/Lifecycle';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number;\n  private _lastScrollTop: number = 0;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  /**\n   * Creates a new Viewport.\n   * @param _terminal The terminal this viewport belongs to.\n   * @param _viewportElement The DOM element acting as the viewport.\n   * @param _scrollArea The DOM element acting as the scroll area.\n   * @param _charMeasure A DOM element used to measure the character size of. the terminal.\n   */\n  constructor(\n    private _terminal: ITerminal,\n    private _viewportElement: HTMLElement,\n    private _scrollArea: HTMLElement,\n    private _charMeasure: CharMeasure\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Perform this async to ensure the CharMeasure is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChanged(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(): void {\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charMeasure.height > 0) {\n      this._currentRowHeight = this._terminal.renderer.dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._terminal.renderer.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._terminal.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._terminal.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._terminal.buffer.lines.length;\n      this._refresh();\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== (<any>this._terminal).renderer.dimensions.canvasHeight) {\n      this._refresh();\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    const newScrollTop = this._terminal.buffer.ydisp * this._currentRowHeight;\n    if (this._lastScrollTop !== newScrollTop) {\n      this._refresh();\n      return;\n    }\n\n    // If element's scroll top changed, this can happen when hiding the element\n    if (this._lastScrollTop !== this._viewportElement.scrollTop) {\n      this._refresh();\n      return;\n    }\n\n    // If row height changed\n    if (this._terminal.renderer.dimensions.scaledCellHeight / window.devicePixelRatio !== this._currentRowHeight) {\n      this._refresh();\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._terminal.buffer.ydisp;\n    this._terminal.scrollLines(diff, true);\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): void {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return;\n    }\n    this._viewportElement.scrollTop += amount;\n    // Prevent the page from scrolling when the terminal scrolls\n    ev.preventDefault();\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = ev.deltaY;\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._terminal.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = ev.deltaY;\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._terminal.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): void {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    ev.preventDefault();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal, ISelectionManager } from '../Types';\n\ninterface IWindow extends Window {\n  clipboardData?: {\n    getData(format: string): string;\n    setData(format: string, data: string): void;\n  };\n}\n\ndeclare var window: IWindow;\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, term: ITerminal, selectionManager: ISelectionManager): void {\n  if (term.browser.isMSIE) {\n    window.clipboardData.setData('Text', selectionManager.selectionText);\n  } else {\n    ev.clipboardData.setData('text/plain', selectionManager.selectionText);\n  }\n\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function pasteHandler(ev: ClipboardEvent, term: ITerminal): void {\n  ev.stopPropagation();\n\n  let text: string;\n\n  const dispatchPaste = function(text: string): void {\n    text = prepareTextForTerminal(text);\n    text = bracketTextForPaste(text, term.bracketedPasteMode);\n    term.handler(text);\n    term.textarea.value = '';\n    term.emit('paste', text);\n    term.cancel(ev);\n  };\n\n  if (term.browser.isMSIE) {\n    if (window.clipboardData) {\n      text = window.clipboardData.getData('Text');\n      dispatchPaste(text);\n    }\n  } else {\n    if (ev.clipboardData) {\n      text = ev.clipboardData.getData('text/plain');\n      dispatchPaste(text);\n    }\n  }\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement): void {\n  // Bring textarea at the cursor position\n  textarea.style.position = 'fixed';\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = (ev.clientX - 10) + 'px';\n  textarea.style.top = (ev.clientY - 10) + 'px';\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n\n  // Reset the terminal textarea's styling\n  // Timeout needs to be long enough for click event to be handled.\n  setTimeout(() => {\n    textarea.style.position = null;\n    textarea.style.width = null;\n    textarea.style.height = null;\n    textarea.style.left = null;\n    textarea.style.top = null;\n    textarea.style.zIndex = null;\n  }, 200);\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionManager The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, selectionManager: ISelectionManager, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea);\n\n  if (shouldSelectWord && !selectionManager.isClickInSelection(ev)) {\n    selectionManager.selectWordAtCursor(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionManager.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from '../Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u0009', // '\\t'\n  'c': '\\u000c', // '\\f'\n  'd': '\\u000d', // '\\r'\n  'e': '\\u000a', // '\\n'\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '\\u2424' (NL)\n  'i': '\\u000b', // '\\v'\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = null;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal, CharacterJoinerHandler } from '../Types';\nimport { IEventEmitter, ITheme, IDisposable } from 'xterm';\nimport { IColorSet } from '../shared/Types';\n\n/**\n * Flags used to render terminal text properly.\n */\nexport const enum FLAGS {\n  BOLD = 1,\n  UNDERLINE = 2,\n  BLINK = 4,\n  INVERSE = 8,\n  INVISIBLE = 16,\n  DIM = 32,\n  ITALIC = 64\n}\n\n/**\n * Note that IRenderer implementations should emit the refresh event after\n * rendering rows to the screen.\n */\nexport interface IRenderer extends IEventEmitter, IDisposable {\n  dimensions: IRenderDimensions;\n  colorManager: IColorManager;\n\n  dispose(): void;\n  setTheme(theme: ITheme): IColorSet;\n  onWindowResize(devicePixelRatio: number): void;\n  onResize(cols: number, rows: number): void;\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  onOptionsChanged(): void;\n  clear(): void;\n  refreshRows(start: number, end: number): void;\n  registerCharacterJoiner(handler: CharacterJoinerHandler): number;\n  deregisterCharacterJoiner(joinerId: number): boolean;\n}\n\nexport interface IColorManager {\n  colors: IColorSet;\n}\n\n// TODO: We should probably rewrite the imports for IColorSet, but there's a lot of them\nexport { IColorSet };\n\nexport interface IRenderDimensions {\n  scaledCharWidth: number;\n  scaledCharHeight: number;\n  scaledCellWidth: number;\n  scaledCellHeight: number;\n  scaledCharLeft: number;\n  scaledCharTop: number;\n  scaledCanvasWidth: number;\n  scaledCanvasHeight: number;\n  canvasWidth: number;\n  canvasHeight: number;\n  actualCellWidth: number;\n  actualCellHeight: number;\n}\n\nexport interface IRenderLayer extends IDisposable {\n  /**\n   * Called when the terminal loses focus.\n   */\n  onBlur(terminal: ITerminal): void;\n\n  /**\n   * * Called when the terminal gets focus.\n   */\n  onFocus(terminal: ITerminal): void;\n\n  /**\n   * Called when the cursor is moved.\n   */\n  onCursorMove(terminal: ITerminal): void;\n\n  /**\n   * Called when options change.\n   */\n  onOptionsChanged(terminal: ITerminal): void;\n\n  /**\n   * Called when the theme changes.\n   */\n  onThemeChanged(terminal: ITerminal, colorSet: IColorSet): void;\n\n  /**\n   * Called when the data in the grid has changed (or needs to be rendered\n   * again).\n   */\n  onGridChanged(terminal: ITerminal, startRow: number, endRow: number): void;\n\n  /**\n   * Calls when the selection changes.\n   */\n  onSelectionChanged(terminal: ITerminal, start: [number, number], end: [number, number], columnSelectMode: boolean): void;\n\n  /**\n   * Registers a handler to join characters to render as a group\n   */\n  registerCharacterJoiner?(joiner: ICharacterJoiner): void;\n\n  /**\n   * Deregisters the specified character joiner handler\n   */\n  deregisterCharacterJoiner?(joinerId: number): void;\n\n  /**\n   * Resize the render layer.\n   */\n  resize(terminal: ITerminal, dim: IRenderDimensions): void;\n\n  /**\n   * Clear the state of the render layer.\n   */\n  reset(terminal: ITerminal): void;\n}\n\nexport interface ICharacterJoiner {\n  id: number;\n  handler: CharacterJoinerHandler;\n}\n\nexport interface ICharacterJoinerRegistry {\n  registerCharacterJoiner(handler: (text: string) => [number, number][]): number;\n  deregisterCharacterJoiner(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const wcwidth = (function(opts: {nul: number, control: number}): (ucs: number) => number {\n    // extracted from https://www.cl.cam.ac.uk/%7Emgk25/ucs/wcwidth.c\n    // combining characters\n    const COMBINING_BMP = [\n      [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n      [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n      [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n      [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n      [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n      [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n      [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n      [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n      [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n      [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n      [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n      [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n      [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n      [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n      [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n      [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n      [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n      [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n      [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n      [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n      [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n      [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n      [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n      [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n      [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n      [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n      [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n      [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n      [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n      [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n      [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n      [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n      [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n      [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n      [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n      [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n      [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n      [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n      [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n      [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n      [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n      [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n      [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n    ];\n    const COMBINING_HIGH = [\n      [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n      [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n      [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n      [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n      [0xE0100, 0xE01EF]\n    ];\n    // binary search\n    function bisearch(ucs: number, data: number[][]): boolean {\n      let min = 0;\n      let max = data.length - 1;\n      let mid;\n      if (ucs < data[0][0] || ucs > data[max][1]) {\n        return false;\n      }\n      while (max >= min) {\n        mid = (min + max) >> 1;\n        if (ucs > data[mid][1]) {\n          min = mid + 1;\n        } else if (ucs < data[mid][0]) {\n          max = mid - 1;\n        } else {\n          return true;\n        }\n      }\n      return false;\n    }\n    function wcwidthBMP(ucs: number): number {\n      // test for 8-bit control characters\n      if (ucs === 0) {\n        return opts.nul;\n      }\n      if (ucs < 32 || (ucs >= 0x7f && ucs < 0xa0)) {\n        return opts.control;\n      }\n      // binary search in table of non-spacing characters\n      if (bisearch(ucs, COMBINING_BMP)) {\n        return 0;\n      }\n      // if we arrive here, ucs is not a combining or C0/C1 control character\n      if (isWideBMP(ucs)) {\n        return 2;\n      }\n      return 1;\n    }\n    function isWideBMP(ucs: number): boolean {\n      return (\n        ucs >= 0x1100 && (\n        ucs <= 0x115f ||                // Hangul Jamo init. consonants\n        ucs === 0x2329 ||\n        ucs === 0x232a ||\n        (ucs >= 0x2e80 && ucs <= 0xa4cf && ucs !== 0x303f) ||  // CJK..Yi\n        (ucs >= 0xac00 && ucs <= 0xd7a3) ||    // Hangul Syllables\n        (ucs >= 0xf900 && ucs <= 0xfaff) ||    // CJK Compat Ideographs\n        (ucs >= 0xfe10 && ucs <= 0xfe19) ||    // Vertical forms\n        (ucs >= 0xfe30 && ucs <= 0xfe6f) ||    // CJK Compat Forms\n        (ucs >= 0xff00 && ucs <= 0xff60) ||    // Fullwidth Forms\n        (ucs >= 0xffe0 && ucs <= 0xffe6)));\n    }\n    function wcwidthHigh(ucs: number): 0 | 1 | 2 {\n      if (bisearch(ucs, COMBINING_HIGH)) {\n        return 0;\n      }\n      if ((ucs >= 0x20000 && ucs <= 0x2fffd) || (ucs >= 0x30000 && ucs <= 0x3fffd)) {\n        return 2;\n      }\n      return 1;\n    }\n    const control = opts.control | 0;\n    let table: number[] | Uint32Array = null;\n    function initTable(): number[] | Uint32Array {\n      // lookup table for BMP\n      const CODEPOINTS = 65536;  // BMP holds 65536 codepoints\n      const BITWIDTH = 2;        // a codepoint can have a width of 0, 1 or 2\n      const ITEMSIZE = 32;       // using uint32_t\n      const CONTAINERSIZE = CODEPOINTS * BITWIDTH / ITEMSIZE;\n      const CODEPOINTS_PER_ITEM = ITEMSIZE / BITWIDTH;\n      table = (typeof Uint32Array === 'undefined')\n        ? new Array(CONTAINERSIZE)\n        : new Uint32Array(CONTAINERSIZE);\n      for (let i = 0; i < CONTAINERSIZE; ++i) {\n        let num = 0;\n        let pos = CODEPOINTS_PER_ITEM;\n        while (pos--) {\n          num = (num << 2) | wcwidthBMP(CODEPOINTS_PER_ITEM * i + pos);\n        }\n        table[i] = num;\n      }\n      return table;\n    }\n    // get width from lookup table\n    //   position in container   : num / CODEPOINTS_PER_ITEM\n    //     ==> n = table[Math.floor(num / 16)]\n    //     ==> n = table[num >> 4]\n    //   16 codepoints per number:       FFEEDDCCBBAA99887766554433221100\n    //   position in number      : (num % CODEPOINTS_PER_ITEM) * BITWIDTH\n    //     ==> m = (n % 16) * 2\n    //     ==> m = (num & 15) << 1\n    //   right shift to position m\n    //     ==> n = n >> m     e.g. m=12  000000000000FFEEDDCCBBAA99887766\n    //   we are only interested in 2 LSBs, cut off higher bits\n    //     ==> n = n & 3      e.g.       000000000000000000000000000000XX\n    return function (num: number): number {\n      num = num | 0;  // get asm.js like optimization under V8\n      if (num < 32) {\n        return control | 0;\n      }\n      if (num < 127) {\n        return 1;\n      }\n      const t = table || initTable();\n      if (num < 65536) {\n        return t[num >> 4] >> ((num & 15) << 1) & 3;\n      }\n      // do a full search for high codepoints\n      return wcwidthHigh(num);\n    };\n})({nul: 0, control: 0});  // configurable options\n\n/**\n * Get the terminal cell width for a string.\n */\nexport function getStringCellWidth(s: string): number {\n  let result = 0;\n  for (let i = 0; i < s.length; ++i) {\n    let code = s.charCodeAt(i);\n    if (0xD800 <= code && code <= 0xDBFF) {\n      const low = s.charCodeAt(i + 1);\n      if (isNaN(low)) {\n        return result;\n      }\n      code = ((code - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000;\n    }\n    if (0xDC00 <= code && code <= 0xDFFF) {\n      continue;\n    }\n    result += wcwidth(code);\n  }\n  return result;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as PublicTerminal, ITerminalOptions as IPublicTerminalOptions, IEventEmitter, IDisposable } from 'xterm';\nimport { IColorSet, IRenderer } from './renderer/Types';\nimport { IMouseZoneManager } from './ui/Types';\nimport { ICharset } from './core/Types';\nimport { ICircularList } from './common/Types';\n\nexport type CustomKeyEventHandler = (event: KeyboardEvent) => boolean;\n\nexport type CharData = [number, string, number, number];\nexport type LineData = CharData[];\n\nexport type LinkMatcherHandler = (event: MouseEvent, uri: string) => void;\nexport type LinkMatcherValidationCallback = (uri: string, callback: (isValid: boolean) => void) => void;\n\nexport type CharacterJoinerHandler = (text: string) => [number, number][];\n\n// BufferIndex denotes a position in the buffer: [rowIndex, colIndex]\nexport type BufferIndex = [number, number];\n\nexport const enum LinkHoverEventTypes {\n  HOVER = 'linkhover',\n  TOOLTIP = 'linktooltip',\n  LEAVE = 'linkleave'\n}\n\n/**\n * This interface encapsulates everything needed from the Terminal by the\n * InputHandler. This cleanly separates the large amount of methods needed by\n * InputHandler cleanly from the ITerminal interface.\n */\nexport interface IInputHandlingTerminal extends IEventEmitter {\n  element: HTMLElement;\n  options: ITerminalOptions;\n  cols: number;\n  rows: number;\n  charset: ICharset;\n  gcharset: number;\n  glevel: number;\n  charsets: ICharset[];\n  applicationKeypad: boolean;\n  applicationCursor: boolean;\n  originMode: boolean;\n  insertMode: boolean;\n  wraparoundMode: boolean;\n  bracketedPasteMode: boolean;\n  curAttr: number;\n  savedCurAttr: number;\n  savedCols: number;\n  x10Mouse: boolean;\n  vt200Mouse: boolean;\n  normalMouse: boolean;\n  mouseEvents: boolean;\n  sendFocus: boolean;\n  utfMouse: boolean;\n  sgrMouse: boolean;\n  urxvtMouse: boolean;\n  cursorHidden: boolean;\n\n  buffers: IBufferSet;\n  buffer: IBuffer;\n  viewport: IViewport;\n  selectionManager: ISelectionManager;\n\n  bell(): void;\n  focus(): void;\n  updateRange(y: number): void;\n  scroll(isWrapped?: boolean): void;\n  setgLevel(g: number): void;\n  eraseAttr(): number;\n  is(term: string): boolean;\n  setgCharset(g: number, charset: ICharset): void;\n  resize(x: number, y: number): void;\n  log(text: string, data?: any): void;\n  reset(): void;\n  showCursor(): void;\n  refresh(start: number, end: number): void;\n  matchColor(r1: number, g1: number, b1: number): number;\n  error(text: string, data?: any): void;\n  setOption(key: string, value: any): void;\n  tabSet(): void;\n  handler(data: string): void;\n  handleTitle(title: string): void;\n  index(): void;\n  reverseIndex(): void;\n}\n\nexport interface IViewport extends IDisposable {\n  scrollBarWidth: number;\n  syncScrollArea(): void;\n  getLinesScrolled(ev: WheelEvent): number;\n  onWheel(ev: WheelEvent): void;\n  onTouchStart(ev: TouchEvent): void;\n  onTouchMove(ev: TouchEvent): void;\n  onThemeChanged(colors: IColorSet): void;\n}\n\nexport interface ICompositionHelper {\n  compositionstart(): void;\n  compositionupdate(ev: CompositionEvent): void;\n  compositionend(): void;\n  updateCompositionElements(dontRecurse?: boolean): void;\n  keydown(ev: KeyboardEvent): boolean;\n}\n\n/**\n * Calls the parser and handles actions generated by the parser.\n */\nexport interface IInputHandler {\n  parse(data: string): void;\n  print(data: string, start: number, end: number): void;\n\n  /** C0 BEL */ bell(): void;\n  /** C0 LF */ lineFeed(): void;\n  /** C0 CR */ carriageReturn(): void;\n  /** C0 BS */ backspace(): void;\n  /** C0 HT */ tab(): void;\n  /** C0 SO */ shiftOut(): void;\n  /** C0 SI */ shiftIn(): void;\n\n  /** CSI @ */ insertChars(params?: number[]): void;\n  /** CSI A */ cursorUp(params?: number[]): void;\n  /** CSI B */ cursorDown(params?: number[]): void;\n  /** CSI C */ cursorForward(params?: number[]): void;\n  /** CSI D */ cursorBackward(params?: number[]): void;\n  /** CSI E */ cursorNextLine(params?: number[]): void;\n  /** CSI F */ cursorPrecedingLine(params?: number[]): void;\n  /** CSI G */ cursorCharAbsolute(params?: number[]): void;\n  /** CSI H */ cursorPosition(params?: number[]): void;\n  /** CSI I */ cursorForwardTab(params?: number[]): void;\n  /** CSI J */ eraseInDisplay(params?: number[]): void;\n  /** CSI K */ eraseInLine(params?: number[]): void;\n  /** CSI L */ insertLines(params?: number[]): void;\n  /** CSI M */ deleteLines(params?: number[]): void;\n  /** CSI P */ deleteChars(params?: number[]): void;\n  /** CSI S */ scrollUp(params?: number[]): void;\n  /** CSI T */ scrollDown(params?: number[], collect?: string): void;\n  /** CSI X */ eraseChars(params?: number[]): void;\n  /** CSI Z */ cursorBackwardTab(params?: number[]): void;\n  /** CSI ` */ charPosAbsolute(params?: number[]): void;\n  /** CSI a */ hPositionRelative(params?: number[]): void;\n  /** CSI b */ repeatPrecedingCharacter(params?: number[]): void;\n  /** CSI c */ sendDeviceAttributes(params?: number[], collect?: string): void;\n  /** CSI d */ linePosAbsolute(params?: number[]): void;\n  /** CSI e */ vPositionRelative(params?: number[]): void;\n  /** CSI f */ hVPosition(params?: number[]): void;\n  /** CSI g */ tabClear(params?: number[]): void;\n  /** CSI h */ setMode(params?: number[], collect?: string): void;\n  /** CSI l */ resetMode(params?: number[], collect?: string): void;\n  /** CSI m */ charAttributes(params?: number[]): void;\n  /** CSI n */ deviceStatus(params?: number[], collect?: string): void;\n  /** CSI p */ softReset(params?: number[], collect?: string): void;\n  /** CSI q */ setCursorStyle(params?: number[], collect?: string): void;\n  /** CSI r */ setScrollRegion(params?: number[], collect?: string): void;\n  /** CSI s */ saveCursor(params?: number[]): void;\n  /** CSI u */ restoreCursor(params?: number[]): void;\n  /** OSC 0\n      OSC 2 */ setTitle(data: string): void;\n  /** ESC E */ nextLine(): void;\n  /** ESC = */ keypadApplicationMode(): void;\n  /** ESC > */ keypadNumericMode(): void;\n  /** ESC % G\n      ESC % @ */ selectDefaultCharset(): void;\n  /** ESC ( C\n      ESC ) C\n      ESC * C\n      ESC + C\n      ESC - C\n      ESC . C\n      ESC / C */ selectCharset(collectAndFlag: string): void;\n  /** ESC D */ index(): void;\n  /** ESC H */ tabSet(): void;\n  /** ESC M */ reverseIndex(): void;\n  /** ESC c */ reset(): void;\n  /** ESC n\n      ESC o\n      ESC |\n      ESC }\n      ESC ~ */ setgLevel(level: number): void;\n}\n\nexport interface ILinkMatcher {\n  id: number;\n  regex: RegExp;\n  handler: LinkMatcherHandler;\n  hoverTooltipCallback?: LinkMatcherHandler;\n  hoverLeaveCallback?: () => void;\n  matchIndex?: number;\n  validationCallback?: LinkMatcherValidationCallback;\n  priority?: number;\n  willLinkActivate?: (event: MouseEvent, uri: string) => boolean;\n}\n\nexport interface ILinkHoverEvent {\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n  cols: number;\n  fg: number;\n}\n\nexport interface ITerminal extends PublicTerminal, IElementAccessor, IBufferAccessor, ILinkifierAccessor {\n  screenElement: HTMLElement;\n  selectionManager: ISelectionManager;\n  charMeasure: ICharMeasure;\n  renderer: IRenderer;\n  browser: IBrowser;\n  writeBuffer: string[];\n  cursorHidden: boolean;\n  cursorState: number;\n  options: ITerminalOptions;\n  buffer: IBuffer;\n  buffers: IBufferSet;\n  isFocused: boolean;\n  mouseHelper: IMouseHelper;\n  viewport: IViewport;\n  bracketedPasteMode: boolean;\n  applicationCursor: boolean;\n\n  /**\n   * Emit the 'data' event and populate the given data.\n   * @param data The data to populate in the event.\n   */\n  handler(data: string): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean): void;\n  cancel(ev: Event, force?: boolean): boolean | void;\n  log(text: string): void;\n  showCursor(): void;\n}\n\nexport interface IBufferAccessor {\n  buffer: IBuffer;\n}\n\nexport interface IElementAccessor {\n  element: HTMLElement;\n}\n\nexport interface ILinkifierAccessor {\n  linkifier: ILinkifier;\n}\n\nexport interface IMouseHelper {\n  getCoords(event: { pageX: number, pageY: number }, element: HTMLElement, charMeasure: ICharMeasure, lineHeight: number, colCount: number, rowCount: number, isSelection?: boolean): [number, number];\n  getRawByteCoords(event: MouseEvent, element: HTMLElement, charMeasure: ICharMeasure, lineHeight: number, colCount: number, rowCount: number): { x: number, y: number };\n}\n\nexport interface ICharMeasure {\n  width: number;\n  height: number;\n  measure(options: ITerminalOptions): void;\n}\n\n// TODO: The options that are not in the public API should be reviewed\nexport interface ITerminalOptions extends IPublicTerminalOptions {\n  [key: string]: any;\n  cancelEvents?: boolean;\n  convertEol?: boolean;\n  debug?: boolean;\n  handler?: (data: string) => void;\n  screenKeys?: boolean;\n  termName?: string;\n  useFlowControl?: boolean;\n}\n\nexport interface IBufferStringIteratorResult {\n  range: {first: number, last: number};\n  content: string;\n}\n\nexport interface IBufferStringIterator {\n  hasNext(): boolean;\n  next(): IBufferStringIteratorResult;\n}\n\nexport interface IBuffer {\n  readonly lines: ICircularList<IBufferLine>;\n  ydisp: number;\n  ybase: number;\n  y: number;\n  x: number;\n  tabs: any;\n  scrollBottom: number;\n  scrollTop: number;\n  hasScrollback: boolean;\n  savedY: number;\n  savedX: number;\n  isCursorInViewport: boolean;\n  translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol?: number, endCol?: number): string;\n  getWrappedRangeForLine(y: number): { first: number, last: number };\n  nextStop(x?: number): number;\n  prevStop(x?: number): number;\n  stringIndexToBufferIndex(lineIndex: number, stringIndex: number): number[];\n  iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator;\n}\n\nexport interface IBufferSet extends IEventEmitter {\n  alt: IBuffer;\n  normal: IBuffer;\n  active: IBuffer;\n\n  activateNormalBuffer(): void;\n  activateAltBuffer(): void;\n}\n\nexport interface ISelectionManager {\n  selectionText: string;\n  selectionStart: [number, number];\n  selectionEnd: [number, number];\n\n  disable(): void;\n  enable(): void;\n  setSelection(row: number, col: number, length: number): void;\n  isClickInSelection(event: MouseEvent): boolean;\n  selectWordAtCursor(event: MouseEvent): void;\n}\n\nexport interface ILinkifier extends IEventEmitter {\n  attachToDom(mouseZoneManager: IMouseZoneManager): void;\n  linkifyRows(start: number, end: number): void;\n  registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number;\n  deregisterLinkMatcher(matcherId: number): boolean;\n}\n\nexport interface ILinkMatcherOptions {\n  /**\n   * The index of the link from the regex.match(text) call. This defaults to 0\n   * (for regular expressions without capture groups).\n   */\n  matchIndex?: number;\n  /**\n   * A callback that validates an individual link, returning true if valid and\n   * false if invalid.\n   */\n  validationCallback?: LinkMatcherValidationCallback;\n  /**\n   * A callback that fires when the mouse hovers over a link.\n   */\n  tooltipCallback?: LinkMatcherHandler;\n  /**\n   * A callback that fires when the mouse leaves a link that was hovered.\n   */\n  leaveCallback?: () => void;\n  /**\n   * The priority of the link matcher, this defines the order in which the link\n   * matcher is evaluated relative to others, from highest to lowest. The\n   * default value is 0.\n   */\n  priority?: number;\n  /**\n   * A callback that fires when the mousedown and click events occur that\n   * determines whether a link will be activated upon click. This enables\n   * only activating a link when a certain modifier is held down, if not the\n   * mouse event will continue propagation (eg. double click to select word).\n   */\n  willLinkActivate?: (event: MouseEvent, uri: string) => boolean;\n}\n\nexport interface IBrowser {\n  isNode: boolean;\n  userAgent: string;\n  platform: string;\n  isFirefox: boolean;\n  isMSIE: boolean;\n  isMac: boolean;\n  isIpad: boolean;\n  isIphone: boolean;\n  isMSWindows: boolean;\n}\n\nexport interface ISoundManager {\n  playBellSound(): void;\n}\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n* Internal actions of EscapeSequenceParser.\n*/\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal state of EscapeSequenceParser.\n * Used as argument of the error handler to allow\n * introspection at runtime on parse errors.\n * Return it with altered values to recover from\n * faulty states (not yet supported).\n * Set `abort` to `true` to abort the current parsing.\n */\nexport interface IParsingState {\n  // position in parse string\n  position: number;\n  // actual character code\n  code: number;\n  // current parser state\n  currentState: ParserState;\n  // print buffer start index (-1 for not set)\n  print: number;\n  // dcs buffer start index (-1 for not set)\n  dcs: number;\n  // osc string buffer\n  osc: string;\n  // collect buffer with intermediate characters\n  collect: string;\n  // params buffer\n  params: number[];\n  // should abort (default: false)\n  abort: boolean;\n}\n\n/**\n* DCS handler signature for EscapeSequenceParser.\n* EscapeSequenceParser handles DCS commands via separate\n* subparsers that get hook/unhooked and can handle\n* arbitrary amount of print data.\n* On entering a DSC sequence `hook` is called by\n* `EscapeSequenceParser`. Use it to initialize or reset\n* states needed to handle the current DCS sequence.\n* EscapeSequenceParser will call `put` several times if the\n* parsed string got splitted, therefore you might have to collect\n* `data` until `unhook` is called. `unhook` marks the end\n* of the current DCS sequence.\n*/\nexport interface IDcsHandler {\n  hook(collect: string, params: number[], flag: number): void;\n  put(data: string, start: number, end: number): void;\n  unhook(): void;\n}\n\n/**\n* EscapeSequenceParser interface.\n*/\nexport interface IEscapeSequenceParser extends IDisposable {\n  /**\n   * Reset the parser to its initial state (handlers are kept).\n   */\n  reset(): void;\n\n  /**\n   * Parse string `data`.\n   * @param data The data to parse.\n   */\n  parse(data: string): void;\n\n  setPrintHandler(callback: (data: string, start: number, end: number) => void): void;\n  clearPrintHandler(): void;\n\n  setExecuteHandler(flag: string, callback: () => void): void;\n  clearExecuteHandler(flag: string): void;\n  setExecuteHandlerFallback(callback: (code: number) => void): void;\n\n  setCsiHandler(flag: string, callback: (params: number[], collect: string) => void): void;\n  clearCsiHandler(flag: string): void;\n  setCsiHandlerFallback(callback: (collect: string, params: number[], flag: number) => void): void;\n\n  setEscHandler(collectAndFlag: string, callback: () => void): void;\n  clearEscHandler(collectAndFlag: string): void;\n  setEscHandlerFallback(callback: (collect: string, flag: number) => void): void;\n\n  setOscHandler(ident: number, callback: (data: string) => void): void;\n  clearOscHandler(ident: number): void;\n  setOscHandlerFallback(callback: (identifier: number, data: string) => void): void;\n\n  setDcsHandler(collectAndFlag: string, handler: IDcsHandler): void;\n  clearDcsHandler(collectAndFlag: string): void;\n  setDcsHandlerFallback(handler: IDcsHandler): void;\n\n  setErrorHandler(callback: (state: IParsingState) => IParsingState): void;\n  clearErrorHandler(): void;\n}\n\n/**\n * Interface for a line in the terminal buffer.\n */\nexport interface IBufferLine {\n  length: number;\n  isWrapped: boolean;\n  get(index: number): CharData;\n  set(index: number, value: CharData): void;\n  pop(): CharData | undefined;\n  push(data: CharData): void;\n  splice(start: number, deleteCount: number, ...items: CharData[]): CharData[];\n  insertCells(pos: number, n: number, ch: CharData): void;\n  deleteCells(pos: number, n: number, fill: CharData): void;\n  replaceCells(start: number, end: number, fill: CharData): void;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ParserState, ParserAction, IParsingState, IDcsHandler, IEscapeSequenceParser } from './Types';\nimport { Disposable } from './common/Lifecycle';\n\n/**\n * Returns an array filled with numbers between the low and high parameters (right exclusive).\n * @param low The low number.\n * @param high The high number.\n */\nfunction r(low: number, high: number): number[] {\n  let c = high - low;\n  const arr = new Array(c);\n  while (c--) {\n    arr[c] = --high;\n  }\n  return arr;\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n * NOTE: data in the underlying table is packed like this:\n *   currentState << 8 | characterCode  -->  action << 4 | nextState\n */\nexport class TransitionTable {\n  public table: Uint8Array | number[];\n\n  constructor(length: number) {\n    this.table = (typeof Uint8Array === 'undefined')\n      ? new Array(length)\n      : new Uint8Array(length);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  add(code: number, state: number, action: number | null, next: number | null): void {\n    this.table[state << 8 | code] = ((action | 0) << 4) | ((next === undefined) ? state : next);\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  addMany(codes: number[], state: number, action: number | null, next: number | null): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.add(codes[i], state, action, next);\n    }\n  }\n}\n\n\n/**\n * Default definitions for the VT500_TRANSITION_TABLE.\n */\nconst PRINTABLES = r(0x20, 0x7f);\nconst EXECUTABLES = r(0x00, 0x18);\nEXECUTABLES.push(0x19);\nEXECUTABLES.concat(r(0x1c, 0x20));\nconst DEFAULT_TRANSITION = ParserAction.ERROR << 4 | ParserState.GROUND;\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // table with default transition [any] --> DEFAULT_TRANSITION\n  for (state in states) {\n    // NOTE: table lookup is capped at 0xa0 in parse to keep the table small\n    for (let code = 0; code < 160; ++code) {\n      table.add(code, state, ParserAction.ERROR, ParserState.GROUND);\n    }\n  }\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3a), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.add(0x3b, ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3a), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.add(0x3b, ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3a, 0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x3a, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.add(0x3a, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x30, 0x3a), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.add(0x3b, ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3a), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.add(0x3b, ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3a, 0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  return table;\n})();\n\n/**\n * Dummy DCS handler as default fallback.\n */\nclass DcsDummy implements IDcsHandler {\n  hook(collect: string, params: number[], flag: number): void { }\n  put(data: string, start: number, end: number): void { }\n  unhook(): void { }\n}\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` contructor argument and\n * reimplement the `parse` method.\n * NOTE: The parameter element notation is currently not supported.\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n\n  // buffers over several parse calls\n  protected _osc: string;\n  protected _params: number[];\n  protected _collect: string;\n\n  // handler lookup containers\n  protected _printHandler: (data: string, start: number, end: number) => void;\n  protected _executeHandlers: any;\n  protected _csiHandlers: any;\n  protected _escHandlers: any;\n  protected _oscHandlers: any;\n  protected _dcsHandlers: any;\n  protected _activeDcsHandler: IDcsHandler | null;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: (data: string, start: number, end: number) => void;\n  protected _executeHandlerFb: (code: number) => void;\n  protected _csiHandlerFb: (collect: string, params: number[], flag: number) => void;\n  protected _escHandlerFb: (collect: string, flag: number) => void;\n  protected _oscHandlerFb: (identifier: number, data: string) => void;\n  protected _dcsHandlerFb: IDcsHandler;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  constructor(readonly TRANSITIONS: TransitionTable = VT500_TRANSITION_TABLE) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._osc = '';\n    this._params = [0];\n    this._collect = '';\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (collect: string, params: number[], flag: number): void => { };\n    this._escHandlerFb = (collect: string, flag: number): void => { };\n    this._oscHandlerFb = (identifier: number, data: string): void => { };\n    this._dcsHandlerFb = new DcsDummy();\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscHandlers = Object.create(null);\n    this._dcsHandlers = Object.create(null);\n    this._activeDcsHandler = null;\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  public dispose(): void {\n    this._printHandlerFb = null;\n    this._executeHandlerFb = null;\n    this._csiHandlerFb = null;\n    this._escHandlerFb = null;\n    this._oscHandlerFb = null;\n    this._dcsHandlerFb = null;\n    this._errorHandlerFb = null;\n    this._printHandler = null;\n    this._executeHandlers = null;\n    this._csiHandlers = null;\n    this._escHandlers = null;\n    this._oscHandlers = null;\n    this._dcsHandlers = null;\n    this._activeDcsHandler = null;\n    this._errorHandler = null;\n  }\n\n  setPrintHandler(callback: (data: string, start: number, end: number) => void): void {\n    this._printHandler = callback;\n  }\n  clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  setExecuteHandler(flag: string, callback: () => void): void {\n    this._executeHandlers[flag.charCodeAt(0)] = callback;\n  }\n  clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  setExecuteHandlerFallback(callback: (code: number) => void): void {\n    this._executeHandlerFb = callback;\n  }\n\n  setCsiHandler(flag: string, callback: (params: number[], collect: string) => void): void {\n    this._csiHandlers[flag.charCodeAt(0)] = callback;\n  }\n  clearCsiHandler(flag: string): void {\n    if (this._csiHandlers[flag.charCodeAt(0)]) delete this._csiHandlers[flag.charCodeAt(0)];\n  }\n  setCsiHandlerFallback(callback: (collect: string, params: number[], flag: number) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  setEscHandler(collectAndFlag: string, callback: () => void): void {\n    this._escHandlers[collectAndFlag] = callback;\n  }\n  clearEscHandler(collectAndFlag: string): void {\n    if (this._escHandlers[collectAndFlag]) delete this._escHandlers[collectAndFlag];\n  }\n  setEscHandlerFallback(callback: (collect: string, flag: number) => void): void {\n    this._escHandlerFb = callback;\n  }\n\n  setOscHandler(ident: number, callback: (data: string) => void): void {\n    this._oscHandlers[ident] = callback;\n  }\n  clearOscHandler(ident: number): void {\n    if (this._oscHandlers[ident]) delete this._oscHandlers[ident];\n  }\n  setOscHandlerFallback(callback: (identifier: number, data: string) => void): void {\n    this._oscHandlerFb = callback;\n  }\n\n  setDcsHandler(collectAndFlag: string, handler: IDcsHandler): void {\n    this._dcsHandlers[collectAndFlag] = handler;\n  }\n  clearDcsHandler(collectAndFlag: string): void {\n    if (this._dcsHandlers[collectAndFlag]) delete this._dcsHandlers[collectAndFlag];\n  }\n  setDcsHandlerFallback(handler: IDcsHandler): void {\n    this._dcsHandlerFb = handler;\n  }\n\n  setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  reset(): void {\n    this.currentState = this.initialState;\n    this._osc = '';\n    this._params = [0];\n    this._collect = '';\n    this._activeDcsHandler = null;\n  }\n\n  parse(data: string): void {\n    let code = 0;\n    let transition = 0;\n    let error = false;\n    let currentState = this.currentState;\n    let print = -1;\n    let dcs = -1;\n    let osc = this._osc;\n    let collect = this._collect;\n    let params = this._params;\n    const table: Uint8Array | number[] = this.TRANSITIONS.table;\n    let dcsHandler: IDcsHandler | null = this._activeDcsHandler;\n    let callback: Function | null = null;\n\n    // process input string\n    const l = data.length;\n    for (let i = 0; i < l; ++i) {\n      code = data.charCodeAt(i);\n\n      // shortcut for most chars (print action)\n      if (currentState === ParserState.GROUND && code > 0x1f && code < 0x80) {\n        print = (~print) ? print : i;\n        do i++;\n        while (i < l && data.charCodeAt(i) > 0x1f && data.charCodeAt(i) < 0x80);\n        i--;\n        continue;\n      }\n\n      // shortcut for CSI params\n      if (currentState === ParserState.CSI_PARAM && (code > 0x2f && code < 0x39)) {\n        params[params.length - 1] = params[params.length - 1] * 10 + code - 48;\n        continue;\n      }\n\n      // normal transition & action lookup\n      transition = (code < 0xa0) ? (table[currentState << 8 | code]) : DEFAULT_TRANSITION;\n      switch (transition >> 4) {\n        case ParserAction.PRINT:\n          print = (~print) ? print : i;\n          break;\n        case ParserAction.EXECUTE:\n          if (~print) {\n            this._printHandler(data, print, i);\n            print = -1;\n          }\n          callback = this._executeHandlers[code];\n          if (callback) callback();\n          else this._executeHandlerFb(code);\n          break;\n        case ParserAction.IGNORE:\n          // handle leftover print or dcs chars\n          if (~print) {\n            this._printHandler(data, print, i);\n            print = -1;\n          } else if (~dcs) {\n            dcsHandler.put(data, dcs, i);\n            dcs = -1;\n          }\n          break;\n        case ParserAction.ERROR:\n          // chars higher than 0x9f are handled by this action\n          // to keep the transition table small\n          if (code > 0x9f) {\n            switch (currentState) {\n              case ParserState.GROUND:\n                print = (~print) ? print : i;\n                break;\n              case ParserState.OSC_STRING:\n                osc += String.fromCharCode(code);\n                transition |= ParserState.OSC_STRING;\n                break;\n              case ParserState.CSI_IGNORE:\n                transition |= ParserState.CSI_IGNORE;\n                break;\n              case ParserState.DCS_IGNORE:\n                transition |= ParserState.DCS_IGNORE;\n                break;\n              case ParserState.DCS_PASSTHROUGH:\n                dcs = (~dcs) ? dcs : i;\n                transition |= ParserState.DCS_PASSTHROUGH;\n                break;\n              default:\n                error = true;\n            }\n          } else {\n            error = true;\n          }\n          // if we end up here a real error happened\n          if (error) {\n            const inject: IParsingState = this._errorHandler(\n              {\n                position: i,\n                code,\n                currentState,\n                print,\n                dcs,\n                osc,\n                collect,\n                params,\n                abort: false\n              });\n            if (inject.abort) return;\n          // TODO: inject return values\n            error = false;\n          }\n          break;\n        case ParserAction.CSI_DISPATCH:\n          callback = this._csiHandlers[code];\n          if (callback) callback(params, collect);\n          else this._csiHandlerFb(collect, params, code);\n          break;\n        case ParserAction.PARAM:\n          if (code === 0x3b) params.push(0);\n          else params[params.length - 1] = params[params.length - 1] * 10 + code - 48;\n          break;\n        case ParserAction.COLLECT:\n          collect += String.fromCharCode(code);\n          break;\n        case ParserAction.ESC_DISPATCH:\n          callback = this._escHandlers[collect + String.fromCharCode(code)];\n          if (callback) callback(collect, code);\n          else this._escHandlerFb(collect, code);\n          break;\n        case ParserAction.CLEAR:\n          if (~print) {\n            this._printHandler(data, print, i);\n            print = -1;\n          }\n          osc = '';\n          params = [0];\n          collect = '';\n          dcs = -1;\n          break;\n        case ParserAction.DCS_HOOK:\n          dcsHandler = this._dcsHandlers[collect + String.fromCharCode(code)];\n          if (!dcsHandler) dcsHandler = this._dcsHandlerFb;\n          dcsHandler.hook(collect, params, code);\n          break;\n        case ParserAction.DCS_PUT:\n          dcs = (~dcs) ? dcs : i;\n          break;\n        case ParserAction.DCS_UNHOOK:\n          if (dcsHandler) {\n            if (~dcs) dcsHandler.put(data, dcs, i);\n            dcsHandler.unhook();\n            dcsHandler = null;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          osc = '';\n          params = [0];\n          collect = '';\n          dcs = -1;\n          break;\n        case ParserAction.OSC_START:\n          if (~print) {\n            this._printHandler(data, print, i);\n            print = -1;\n          }\n          osc = '';\n          break;\n        case ParserAction.OSC_PUT:\n          osc += data.charAt(i);\n          break;\n        case ParserAction.OSC_END:\n          if (osc && code !== 0x18 && code !== 0x1a) {\n            // NOTE: OSC subparsing is not part of the original parser\n            // we do basic identifier parsing here to offer a jump table for OSC as well\n            const idx = osc.indexOf(';');\n            if (idx === -1) {\n              this._oscHandlerFb(-1, osc);  // this is an error (malformed OSC)\n            } else {\n              // Note: NaN is not handled here\n              // either catch it with the fallback handler\n              // or with an explicit NaN OSC handler\n              const identifier = parseInt(osc.substring(0, idx));\n              const content = osc.substring(idx + 1);\n              callback = this._oscHandlers[identifier];\n              if (callback) callback(content);\n              else this._oscHandlerFb(identifier, content);\n            }\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          osc = '';\n          params = [0];\n          collect = '';\n          dcs = -1;\n          break;\n      }\n      currentState = transition & 15;\n    }\n\n    // push leftover pushable buffers to terminal\n    if (currentState === ParserState.GROUND && ~print) {\n      this._printHandler(data, print, data.length);\n    } else if (currentState === ParserState.DCS_PASSTHROUGH && ~dcs && dcsHandler) {\n      dcsHandler.put(data, dcs, data.length);\n    }\n\n    // save non pushable buffers\n    this._osc = osc;\n    this._collect = collect;\n    this._params = params;\n\n    // save active dcs handler reference\n    this._activeDcsHandler = dcsHandler;\n\n    // save state\n    this.currentState = currentState;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IDcsHandler, IEscapeSequenceParser, IBuffer, IInputHandlingTerminal } from './Types';\nimport { C0, C1 } from './common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from './core/data/Charsets';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CODE_INDEX, DEFAULT_ATTR, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE } from './Buffer';\nimport { FLAGS } from './renderer/Types';\nimport { wcwidth } from './CharWidth';\nimport { EscapeSequenceParser } from './EscapeSequenceParser';\nimport { ICharset } from './core/Types';\nimport { Disposable } from './common/Lifecycle';\nimport { BufferLine } from './BufferLine';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: {[key: string]: number} = {'(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2};\n\n\n/**\n * DCS subparser implementations\n */\n\n /**\n  * DCS + q Pt ST (xterm)\n  *   Request Terminfo String\n  *   not supported\n  */\nclass RequestTerminfo implements IDcsHandler {\n  private _data: string;\n  constructor(private _terminal: any) { }\n  hook(collect: string, params: number[], flag: number): void {\n    this._data = '';\n  }\n  put(data: string, start: number, end: number): void {\n    this._data += data.substring(start, end);\n  }\n  unhook(): void {\n    // invalid: DCS 0 + r Pt ST\n    this._terminal.handler(`${C0.ESC}P0+r${this._data}${C0.ESC}\\\\`);\n  }\n}\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: string;\n\n  constructor(private _terminal: any) { }\n\n  hook(collect: string, params: number[], flag: number): void {\n    // reset data\n    this._data = '';\n  }\n\n  put(data: string, start: number, end: number): void {\n    this._data += data.substring(start, end);\n  }\n\n  unhook(): void {\n    switch (this._data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        return this._terminal.handler(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n      case '\"p': // DECSCL\n        return this._terminal.handler(`${C0.ESC}P1$r61\"p${C0.ESC}\\\\`);\n      case 'r': // DECSTBM\n        const pt = '' + (this._terminal.buffer.scrollTop + 1) +\n                ';' + (this._terminal.buffer.scrollBottom + 1) + 'r';\n        return this._terminal.handler(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        return this._terminal.handler(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n      case ' q': // DECSCUSR\n        const STYLES: {[key: string]: number} = {'block': 2, 'underline': 4, 'bar': 6};\n        let style = STYLES[this._terminal.getOption('cursorStyle')];\n        style -= this._terminal.getOption('cursorBlink');\n        return this._terminal.handler(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._terminal.error('Unknown DCS $q %s', this._data);\n        this._terminal.handler(`${C0.ESC}P0$r${this._data}${C0.ESC}\\\\`);\n    }\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n */\n\n /**\n  * DCS + p Pt ST (xterm)\n  *   Set Terminfo Data\n  *   not supported\n  */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _surrogateHigh: string;\n\n  constructor(\n      protected _terminal: IInputHandlingTerminal,\n      private _parser: IEscapeSequenceParser = new EscapeSequenceParser())\n  {\n    super();\n\n    this.register(this._parser);\n\n    this._surrogateHigh = '';\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((collect: string, params: number[], flag: number) => {\n      this._terminal.error('Unknown CSI code: ', { collect, params, flag: String.fromCharCode(flag) });\n    });\n    this._parser.setEscHandlerFallback((collect: string, flag: number) => {\n      this._terminal.error('Unknown ESC code: ', { collect, flag: String.fromCharCode(flag) });\n    });\n    this._parser.setExecuteHandlerFallback((code: number) => {\n      this._terminal.error('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier: number, data: string) => {\n      this._terminal.error('Unknown OSC code: ', { identifier, data });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end): void => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.setCsiHandler('@', (params, collect) => this.insertChars(params));\n    this._parser.setCsiHandler('A', (params, collect) => this.cursorUp(params));\n    this._parser.setCsiHandler('B', (params, collect) => this.cursorDown(params));\n    this._parser.setCsiHandler('C', (params, collect) => this.cursorForward(params));\n    this._parser.setCsiHandler('D', (params, collect) => this.cursorBackward(params));\n    this._parser.setCsiHandler('E', (params, collect) => this.cursorNextLine(params));\n    this._parser.setCsiHandler('F', (params, collect) => this.cursorPrecedingLine(params));\n    this._parser.setCsiHandler('G', (params, collect) => this.cursorCharAbsolute(params));\n    this._parser.setCsiHandler('H', (params, collect) => this.cursorPosition(params));\n    this._parser.setCsiHandler('I', (params, collect) => this.cursorForwardTab(params));\n    this._parser.setCsiHandler('J', (params, collect) => this.eraseInDisplay(params));\n    this._parser.setCsiHandler('K', (params, collect) => this.eraseInLine(params));\n    this._parser.setCsiHandler('L', (params, collect) => this.insertLines(params));\n    this._parser.setCsiHandler('M', (params, collect) => this.deleteLines(params));\n    this._parser.setCsiHandler('P', (params, collect) => this.deleteChars(params));\n    this._parser.setCsiHandler('S', (params, collect) => this.scrollUp(params));\n    this._parser.setCsiHandler('T', (params, collect) => this.scrollDown(params, collect));\n    this._parser.setCsiHandler('X', (params, collect) => this.eraseChars(params));\n    this._parser.setCsiHandler('Z', (params, collect) => this.cursorBackwardTab(params));\n    this._parser.setCsiHandler('`', (params, collect) => this.charPosAbsolute(params));\n    this._parser.setCsiHandler('a', (params, collect) => this.hPositionRelative(params));\n    this._parser.setCsiHandler('b', (params, collect) => this.repeatPrecedingCharacter(params));\n    this._parser.setCsiHandler('c', (params, collect) => this.sendDeviceAttributes(params, collect));\n    this._parser.setCsiHandler('d', (params, collect) => this.linePosAbsolute(params));\n    this._parser.setCsiHandler('e', (params, collect) => this.vPositionRelative(params));\n    this._parser.setCsiHandler('f', (params, collect) => this.hVPosition(params));\n    this._parser.setCsiHandler('g', (params, collect) => this.tabClear(params));\n    this._parser.setCsiHandler('h', (params, collect) => this.setMode(params, collect));\n    this._parser.setCsiHandler('l', (params, collect) => this.resetMode(params, collect));\n    this._parser.setCsiHandler('m', (params, collect) => this.charAttributes(params));\n    this._parser.setCsiHandler('n', (params, collect) => this.deviceStatus(params, collect));\n    this._parser.setCsiHandler('p', (params, collect) => this.softReset(params, collect));\n    this._parser.setCsiHandler('q', (params, collect) => this.setCursorStyle(params, collect));\n    this._parser.setCsiHandler('r', (params, collect) => this.setScrollRegion(params, collect));\n    this._parser.setCsiHandler('s', (params, collect) => this.saveCursor(params));\n    this._parser.setCsiHandler('u', (params, collect) => this.restoreCursor(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    // some C1 control codes - FIXME: should those be enabled by default?\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.setOscHandler(0, (data) => this.setTitle(data));\n    //   1 - icon name\n    //   2 - title\n    this._parser.setOscHandler(2, (data) => this.setTitle(data));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    //  11 - Change VT100 text background color to Pt.\n    //  12 - Change text cursor color to Pt.\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    // 111 - Reset VT100 text background color.\n    // 112 - Reset text cursor color.\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.setEscHandler('7', () => this.saveCursor([]));\n    this._parser.setEscHandler('8', () => this.restoreCursor([]));\n    this._parser.setEscHandler('D', () => this.index());\n    this._parser.setEscHandler('E', () => this.nextLine());\n    this._parser.setEscHandler('H', () => this.tabSet());\n    this._parser.setEscHandler('M', () => this.reverseIndex());\n    this._parser.setEscHandler('=', () => this.keypadApplicationMode());\n    this._parser.setEscHandler('>', () => this.keypadNumericMode());\n    this._parser.setEscHandler('c', () => this.reset());\n    this._parser.setEscHandler('n', () => this.setgLevel(2));\n    this._parser.setEscHandler('o', () => this.setgLevel(3));\n    this._parser.setEscHandler('|', () => this.setgLevel(3));\n    this._parser.setEscHandler('}', () => this.setgLevel(2));\n    this._parser.setEscHandler('~', () => this.setgLevel(1));\n    this._parser.setEscHandler('%@', () => this.selectDefaultCharset());\n    this._parser.setEscHandler('%G', () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.setEscHandler('(' + flag, () => this.selectCharset('(' + flag));\n      this._parser.setEscHandler(')' + flag, () => this.selectCharset(')' + flag));\n      this._parser.setEscHandler('*' + flag, () => this.selectCharset('*' + flag));\n      this._parser.setEscHandler('+' + flag, () => this.selectCharset('+' + flag));\n      this._parser.setEscHandler('-' + flag, () => this.selectCharset('-' + flag));\n      this._parser.setEscHandler('.' + flag, () => this.selectCharset('.' + flag));\n      this._parser.setEscHandler('/' + flag, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state) => {\n      this._terminal.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.setDcsHandler('$q', new DECRQSS(this._terminal));\n    this._parser.setDcsHandler('+q', new RequestTerminfo(this._terminal));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._terminal = null;\n  }\n\n  public parse(data: string): void {\n    // Ensure the terminal is not disposed\n    if (!this._terminal) {\n      return;\n    }\n\n    let buffer = this._terminal.buffer;\n    const cursorStartX = buffer.x;\n    const cursorStartY = buffer.y;\n\n    // TODO: Consolidate debug/logging #1560\n    if ((<any>this._terminal).debug) {\n      this._terminal.log('data: ' + data);\n    }\n\n    // apply leftover surrogate high from last write\n    if (this._surrogateHigh) {\n      data = this._surrogateHigh + data;\n      this._surrogateHigh = '';\n    }\n\n    this._parser.parse(data);\n\n    buffer = this._terminal.buffer;\n    if (buffer.x !== cursorStartX || buffer.y !== cursorStartY) {\n      this._terminal.emit('cursormove');\n    }\n  }\n\n  public print(data: string, start: number, end: number): void {\n    let char: string;\n    let code: number;\n    let low: number;\n    let chWidth: number;\n    const buffer: IBuffer = this._terminal.buffer;\n    const charset: ICharset = this._terminal.charset;\n    const screenReaderMode: boolean = this._terminal.options.screenReaderMode;\n    const cols: number = this._terminal.cols;\n    const wraparoundMode: boolean = this._terminal.wraparoundMode;\n    const insertMode: boolean = this._terminal.insertMode;\n    const curAttr: number = this._terminal.curAttr;\n    let bufferRow = buffer.lines.get(buffer.y + buffer.ybase);\n\n    this._terminal.updateRange(buffer.y);\n    for (let stringPosition = start; stringPosition < end; ++stringPosition) {\n      char = data.charAt(stringPosition);\n      code = data.charCodeAt(stringPosition);\n\n      // surrogate pair handling\n      if (0xD800 <= code && code <= 0xDBFF) {\n        // we got a surrogate high\n        // get surrogate low (next 2 bytes)\n        low = data.charCodeAt(stringPosition + 1);\n        if (isNaN(low)) {\n          // end of data stream, save surrogate high\n          this._surrogateHigh = char;\n          continue;\n        }\n        code = ((code - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000;\n        char += data.charAt(stringPosition + 1);\n      }\n      // surrogate low - already handled above\n      if (0xDC00 <= code && code <= 0xDFFF) {\n        continue;\n      }\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = wcwidth(code);\n\n      // get charset replacement character\n      if (charset) {\n        char = charset[char] || char;\n        code = char.charCodeAt(0);\n      }\n\n      if (screenReaderMode) {\n        this._terminal.emit('a11y.char', char);\n      }\n\n      // insert combining char at last cursor position\n      // FIXME: needs handling after cursor jumps\n      // buffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for buffer.x to avoid overflow left\n      if (!chWidth && buffer.x) {\n        const chMinusOne = bufferRow.get(buffer.x - 1);\n        if (chMinusOne) {\n          if (!chMinusOne[CHAR_DATA_WIDTH_INDEX]) {\n            // found empty cell after fullwidth, need to go 2 cells back\n            // it is save to step 2 cells back here\n            // since an empty cell is only set by fullwidth chars\n            const chMinusTwo = bufferRow.get(buffer.x - 2);\n            if (chMinusTwo) {\n              chMinusTwo[CHAR_DATA_CHAR_INDEX] += char;\n              chMinusTwo[CHAR_DATA_CODE_INDEX] = code;\n            }\n          } else {\n            chMinusOne[CHAR_DATA_CHAR_INDEX] += char;\n            chMinusOne[CHAR_DATA_CODE_INDEX] = code;\n          }\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // TODO: needs a global min terminal width of 2\n      if (buffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          buffer.x = 0;\n          buffer.y++;\n          if (buffer.y > buffer.scrollBottom) {\n            buffer.y--;\n            this._terminal.scroll(true);\n          } else {\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            buffer.lines.get(buffer.y).isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = buffer.lines.get(buffer.y + buffer.ybase);\n        } else {\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n          // FIXME: Do we have to set buffer.x to cols - 1, if not wrapping?\n        }\n      }\n\n      // insert mode: move characters to right\n      // To achieve insert, we remove cells from the right\n      // and insert empty ones at cursor position\n      if (insertMode) {\n        // do this twice for a fullwidth char\n        for (let moves = 0; moves < chWidth; ++moves) {\n          // remove last cell\n          // if it's width is 0, we have to adjust the second last cell as well\n          const removed = bufferRow.pop();\n          const chMinusTwo = bufferRow.get(buffer.x - 2);\n          if (removed[CHAR_DATA_WIDTH_INDEX] === 0\n              && chMinusTwo\n              && chMinusTwo[CHAR_DATA_WIDTH_INDEX] === 2) {\n                bufferRow.set(this._terminal.cols - 2, [curAttr, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n          }\n\n          // insert empty cell at cursor\n          bufferRow.splice(buffer.x, 0, [curAttr, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.set(buffer.x++, [curAttr, char, chWidth, code]);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      if (chWidth === 2) {\n        bufferRow.set(buffer.x++, [curAttr, '', 0, undefined]);\n      }\n    }\n    this._terminal.updateRange(buffer.y);\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   */\n  public bell(): void {\n    this._terminal.bell();\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   */\n  public lineFeed(): void {\n    // make buffer local for faster access\n    const buffer = this._terminal.buffer;\n\n    if (this._terminal.options.convertEol) {\n      buffer.x = 0;\n    }\n    buffer.y++;\n    if (buffer.y > buffer.scrollBottom) {\n      buffer.y--;\n      this._terminal.scroll();\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (buffer.x >= this._terminal.cols) {\n      buffer.x--;\n    }\n    /**\n     * This event is emitted whenever the terminal outputs a LF or NL.\n     *\n     * @event linefeed\n     */\n    this._terminal.emit('linefeed');\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   */\n  public carriageReturn(): void {\n    this._terminal.buffer.x = 0;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   */\n  public backspace(): void {\n    if (this._terminal.buffer.x > 0) {\n      this._terminal.buffer.x--;\n    }\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   */\n  public tab(): void {\n    const originalX = this._terminal.buffer.x;\n    this._terminal.buffer.x = this._terminal.buffer.nextStop();\n    if (this._terminal.options.screenReaderMode) {\n      this._terminal.emit('a11y.tab', this._terminal.buffer.x - originalX);\n    }\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   */\n  public shiftOut(): void {\n    this._terminal.setgLevel(1);\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   */\n  public shiftIn(): void {\n    this._terminal.setgLevel(0);\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   */\n  public insertChars(params: number[]): void {\n    this._terminal.buffer.lines.get(this._terminal.buffer.y + this._terminal.buffer.ybase).insertCells(\n      this._terminal.buffer.x,\n      params[0] || 1,\n      [this._terminal.eraseAttr(), NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]\n    );\n    this._terminal.updateRange(this._terminal.buffer.y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   */\n  public cursorUp(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.y -= param;\n    if (this._terminal.buffer.y < 0) {\n      this._terminal.buffer.y = 0;\n    }\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   */\n  public cursorDown(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.y += param;\n    if (this._terminal.buffer.y >= this._terminal.rows) {\n      this._terminal.buffer.y = this._terminal.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._terminal.buffer.x >= this._terminal.cols) {\n      this._terminal.buffer.x--;\n    }\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   */\n  public cursorForward(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.x += param;\n    if (this._terminal.buffer.x >= this._terminal.cols) {\n      this._terminal.buffer.x = this._terminal.cols - 1;\n    }\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   */\n  public cursorBackward(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._terminal.buffer.x >= this._terminal.cols) {\n      this._terminal.buffer.x--;\n    }\n    this._terminal.buffer.x -= param;\n    if (this._terminal.buffer.x < 0) {\n      this._terminal.buffer.x = 0;\n    }\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * same as CSI Ps B ?\n   */\n  public cursorNextLine(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.y += param;\n    if (this._terminal.buffer.y >= this._terminal.rows) {\n      this._terminal.buffer.y = this._terminal.rows - 1;\n    }\n    this._terminal.buffer.x = 0;\n  }\n\n\n  /**\n   * CSI Ps F\n   * Cursor Preceding Line Ps Times (default = 1) (CNL).\n   * reuse CSI Ps A ?\n   */\n  public cursorPrecedingLine(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.y -= param;\n    if (this._terminal.buffer.y < 0) {\n      this._terminal.buffer.y = 0;\n    }\n    this._terminal.buffer.x = 0;\n  }\n\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   */\n  public cursorCharAbsolute(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.x = param - 1;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   */\n  public cursorPosition(params: number[]): void {\n    let col: number;\n    let row: number = params[0] - 1;\n\n    if (params.length >= 2) {\n      col = params[1] - 1;\n    } else {\n      col = 0;\n    }\n\n    if (row < 0) {\n      row = 0;\n    } else if (row >= this._terminal.rows) {\n      row = this._terminal.rows - 1;\n    }\n\n    if (col < 0) {\n      col = 0;\n    } else if (col >= this._terminal.cols) {\n      col = this._terminal.cols - 1;\n    }\n\n    this._terminal.buffer.x = col;\n    this._terminal.buffer.y = row;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   */\n  public cursorForwardTab(params: number[]): void {\n    let param = params[0] || 1;\n    while (param--) {\n      this._terminal.buffer.x = this._terminal.buffer.nextStop();\n    }\n  }\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number): void {\n    this._terminal.buffer.lines.get(this._terminal.buffer.ybase + y).replaceCells(\n      start,\n      end,\n      [this._terminal.eraseAttr(), NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]\n    );\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   */\n  public eraseInDisplay(params: number[]): void {\n    let j;\n    switch (params[0]) {\n      case 0:\n        j = this._terminal.buffer.y;\n        this._terminal.updateRange(j);\n        this._eraseInBufferLine(j++, this._terminal.buffer.x, this._terminal.cols);\n        for (; j < this._terminal.rows; j++) {\n          this._eraseInBufferLine(j, 0, this._terminal.cols);\n        }\n        this._terminal.updateRange(j);\n        break;\n      case 1:\n        j = this._terminal.buffer.y;\n        this._terminal.updateRange(j);\n        this._eraseInBufferLine(j, 0, this._terminal.buffer.x + 1);\n        while (j--) {\n          this._eraseInBufferLine(j, 0, this._terminal.cols);\n        }\n        this._terminal.updateRange(0);\n        break;\n      case 2:\n        j = this._terminal.rows;\n        this._terminal.updateRange(j - 1);\n        while (j--) {\n          this._eraseInBufferLine(j, 0, this._terminal.cols);\n        }\n        this._terminal.updateRange(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._terminal.buffer.lines.length - this._terminal.rows;\n        if (scrollBackSize > 0) {\n          this._terminal.buffer.lines.trimStart(scrollBackSize);\n          this._terminal.buffer.ybase = Math.max(this._terminal.buffer.ybase - scrollBackSize, 0);\n          this._terminal.buffer.ydisp = Math.max(this._terminal.buffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._terminal.emit('scroll', 0);\n        }\n        break;\n    }\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   */\n  public eraseInLine(params: number[]): void {\n    switch (params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._terminal.buffer.y, this._terminal.buffer.x, this._terminal.cols);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._terminal.buffer.y, 0, this._terminal.buffer.x + 1);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._terminal.buffer.y, 0, this._terminal.cols);\n        break;\n    }\n    this._terminal.updateRange(this._terminal.buffer.y);\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   */\n  public insertLines(params: number[]): void {\n    let param: number = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n\n    // make buffer local for faster access\n    const buffer = this._terminal.buffer;\n\n    const row: number = buffer.y + buffer.ybase;\n\n    const scrollBottomRowsOffset = this._terminal.rows - 1 - buffer.scrollBottom;\n    const scrollBottomAbsolute = this._terminal.rows - 1 + buffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      buffer.lines.splice(row, 0, BufferLine.blankLine(this._terminal.cols, this._terminal.eraseAttr()));\n    }\n\n    // this.maxRange();\n    this._terminal.updateRange(buffer.y);\n    this._terminal.updateRange(buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   */\n  public deleteLines(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n\n    // make buffer local for faster access\n    const buffer = this._terminal.buffer;\n\n    const row: number = buffer.y + buffer.ybase;\n\n    let j: number;\n    j = this._terminal.rows - 1 - buffer.scrollBottom;\n    j = this._terminal.rows - 1 + buffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(row, 1);\n      buffer.lines.splice(j, 0, BufferLine.blankLine(this._terminal.cols, this._terminal.eraseAttr()));\n    }\n\n    // this.maxRange();\n    this._terminal.updateRange(buffer.y);\n    this._terminal.updateRange(buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   */\n  public deleteChars(params: number[]): void {\n    this._terminal.buffer.lines.get(this._terminal.buffer.y + this._terminal.buffer.ybase).deleteCells(\n      this._terminal.buffer.x,\n      params[0] || 1,\n      [this._terminal.eraseAttr(), NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]\n    );\n    this._terminal.updateRange(this._terminal.buffer.y);\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   */\n  public scrollUp(params: number[]): void {\n    let param = params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._terminal.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 0, BufferLine.blankLine(this._terminal.cols, DEFAULT_ATTR));\n    }\n    // this.maxRange();\n    this._terminal.updateRange(buffer.scrollTop);\n    this._terminal.updateRange(buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   */\n  public scrollDown(params: number[], collect?: string): void {\n    if (params.length < 2 && !collect) {\n      let param = params[0] || 1;\n\n      // make buffer local for faster access\n      const buffer = this._terminal.buffer;\n\n      while (param--) {\n        buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 1);\n        buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 0, BufferLine.blankLine(this._terminal.cols, DEFAULT_ATTR));\n      }\n      // this.maxRange();\n      this._terminal.updateRange(buffer.scrollTop);\n      this._terminal.updateRange(buffer.scrollBottom);\n    }\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   */\n  public eraseChars(params: number[]): void {\n    this._terminal.buffer.lines.get(this._terminal.buffer.y + this._terminal.buffer.ybase).replaceCells(\n      this._terminal.buffer.x,\n      this._terminal.buffer.x + (params[0] || 1),\n      [this._terminal.eraseAttr(), NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]\n    );\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   */\n  public cursorBackwardTab(params: number[]): void {\n    let param = params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._terminal.buffer;\n\n    while (param--) {\n      buffer.x = buffer.prevStop();\n    }\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   */\n  public charPosAbsolute(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.x = param - 1;\n    if (this._terminal.buffer.x >= this._terminal.cols) {\n      this._terminal.buffer.x = this._terminal.cols - 1;\n    }\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   * reuse CSI Ps C ?\n   */\n  public hPositionRelative(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.x += param;\n    if (this._terminal.buffer.x >= this._terminal.cols) {\n      this._terminal.buffer.x = this._terminal.cols - 1;\n    }\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   */\n  public repeatPrecedingCharacter(params: number[]): void {\n    // make buffer local for faster access\n    const buffer = this._terminal.buffer;\n    const line = buffer.lines.get(buffer.ybase + buffer.y);\n    line.replaceCells(buffer.x,\n      buffer.x + (params[0] || 1),\n      line.get(buffer.x - 1) || [DEFAULT_ATTR, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]\n    );\n    // FIXME: no updateRange here?\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   */\n  public sendDeviceAttributes(params: number[], collect?: string): void {\n    if (params[0] > 0) {\n      return;\n    }\n\n    if (!collect) {\n      if (this._terminal.is('xterm') || this._terminal.is('rxvt-unicode') || this._terminal.is('screen')) {\n        this._terminal.handler(C0.ESC + '[?1;2c');\n      } else if (this._terminal.is('linux')) {\n        this._terminal.handler(C0.ESC + '[?6c');\n      }\n    } else if (collect === '>') {\n      // xterm and urxvt\n      // seem to spit this\n      // out around ~370 times (?).\n      if (this._terminal.is('xterm')) {\n        this._terminal.handler(C0.ESC + '[>0;276;0c');\n      } else if (this._terminal.is('rxvt-unicode')) {\n        this._terminal.handler(C0.ESC + '[>85;95;0c');\n      } else if (this._terminal.is('linux')) {\n        // not supported by linux console.\n        // linux console echoes parameters.\n        this._terminal.handler(params[0] + 'c');\n      } else if (this._terminal.is('screen')) {\n        this._terminal.handler(C0.ESC + '[>83;40003;0c');\n      }\n    }\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   */\n  public linePosAbsolute(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.y = param - 1;\n    if (this._terminal.buffer.y >= this._terminal.rows) {\n      this._terminal.buffer.y = this._terminal.rows - 1;\n    }\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   */\n  public vPositionRelative(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.y += param;\n    if (this._terminal.buffer.y >= this._terminal.rows) {\n      this._terminal.buffer.y = this._terminal.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._terminal.buffer.x >= this._terminal.cols) {\n      this._terminal.buffer.x--;\n    }\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   */\n  public hVPosition(params: number[]): void {\n    if (params[0] < 1) params[0] = 1;\n    if (params[1] < 1) params[1] = 1;\n\n    this._terminal.buffer.y = params[0] - 1;\n    if (this._terminal.buffer.y >= this._terminal.rows) {\n      this._terminal.buffer.y = this._terminal.rows - 1;\n    }\n\n    this._terminal.buffer.x = params[1] - 1;\n    if (this._terminal.buffer.x >= this._terminal.cols) {\n      this._terminal.buffer.x = this._terminal.cols - 1;\n    }\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   */\n  public tabClear(params: number[]): void {\n    const param = params[0];\n    if (param <= 0) {\n      delete this._terminal.buffer.tabs[this._terminal.buffer.x];\n    } else if (param === 3) {\n      this._terminal.buffer.tabs = {};\n    }\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   */\n  public setMode(params: number[], collect?: string): void {\n    if (params.length > 1) {\n      for (let i = 0; i < params.length; i++) {\n        this.setMode([params[i]]);\n      }\n\n      return;\n    }\n\n    if (!collect) {\n      switch (params[0]) {\n        case 4:\n          this._terminal.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    } else if (collect === '?') {\n      switch (params[0]) {\n        case 1:\n          this._terminal.applicationCursor = true;\n          break;\n        case 2:\n          this._terminal.setgCharset(0, DEFAULT_CHARSET);\n          this._terminal.setgCharset(1, DEFAULT_CHARSET);\n          this._terminal.setgCharset(2, DEFAULT_CHARSET);\n          this._terminal.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3: // 132 col mode\n          this._terminal.savedCols = this._terminal.cols;\n          this._terminal.resize(132, this._terminal.rows);\n          break;\n        case 6:\n          this._terminal.originMode = true;\n          break;\n        case 7:\n          this._terminal.wraparoundMode = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 66:\n          this._terminal.log('Serial port requested application keypad.');\n          this._terminal.applicationKeypad = true;\n          this._terminal.viewport.syncScrollArea();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n        case 1000: // vt200 mouse\n          // no motion.\n          // no modifiers, except control on the wheel.\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n\n          // TODO: Why are params[0] compares nested within a switch for params[0]?\n\n          this._terminal.x10Mouse = params[0] === 9;\n          this._terminal.vt200Mouse = params[0] === 1000;\n          this._terminal.normalMouse = params[0] > 1000;\n          this._terminal.mouseEvents = true;\n          this._terminal.element.classList.add('enable-mouse-events');\n          this._terminal.selectionManager.disable();\n          this._terminal.log('Binding to mouse events.');\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._terminal.sendFocus = true;\n          break;\n        case 1005: // utf8 ext mode mouse\n          this._terminal.utfMouse = true;\n          // for wide terminals\n          // simply encodes large values as utf8 characters\n          break;\n        case 1006: // sgr ext mode mouse\n          this._terminal.sgrMouse = true;\n          // for wide terminals\n          // does not add 32 to fields\n          // press: ^[[<b;x;yM\n          // release: ^[[<b;x;ym\n          break;\n        case 1015: // urxvt ext mode mouse\n          this._terminal.urxvtMouse = true;\n          // for wide terminals\n          // numbers for fields\n          // press: ^[[b;x;yM\n          // motion: ^[[b;x;yT\n          break;\n        case 25: // show cursor\n          this._terminal.cursorHidden = false;\n          break;\n        case 1049: // alt screen buffer cursor\n          // TODO: Not sure if we need to save/restore after switching the buffer\n          // this.saveCursor(params);\n          // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._terminal.buffers.activateAltBuffer();\n          this._terminal.viewport.syncScrollArea();\n          this._terminal.showCursor();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._terminal.bracketedPasteMode = true;\n          break;\n      }\n    }\n  }\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   */\n  public resetMode(params: number[], collect?: string): void {\n    if (params.length > 1) {\n      for (let i = 0; i < params.length; i++) {\n        this.resetMode([params[i]]);\n      }\n\n      return;\n    }\n\n    if (!collect) {\n      switch (params[0]) {\n        case 4:\n          this._terminal.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    } else if (collect === '?') {\n      switch (params[0]) {\n        case 1:\n          this._terminal.applicationCursor = false;\n          break;\n        case 3:\n          if (this._terminal.cols === 132 && this._terminal.savedCols) {\n            this._terminal.resize(this._terminal.savedCols, this._terminal.rows);\n          }\n          delete this._terminal.savedCols;\n          break;\n        case 6:\n          this._terminal.originMode = false;\n          break;\n        case 7:\n          this._terminal.wraparoundMode = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 66:\n          this._terminal.log('Switching back to normal keypad.');\n          this._terminal.applicationKeypad = false;\n          this._terminal.viewport.syncScrollArea();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._terminal.x10Mouse = false;\n          this._terminal.vt200Mouse = false;\n          this._terminal.normalMouse = false;\n          this._terminal.mouseEvents = false;\n          this._terminal.element.classList.remove('enable-mouse-events');\n          this._terminal.selectionManager.enable();\n          break;\n        case 1004: // send focusin/focusout events\n          this._terminal.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse\n          this._terminal.utfMouse = false;\n          break;\n        case 1006: // sgr ext mode mouse\n          this._terminal.sgrMouse = false;\n          break;\n        case 1015: // urxvt ext mode mouse\n          this._terminal.urxvtMouse = false;\n          break;\n        case 25: // hide cursor\n          this._terminal.cursorHidden = true;\n          break;\n        case 1049: // alt screen buffer cursor\n           // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._terminal.buffers.activateNormalBuffer();\n          // TODO: Not sure if we need to save/restore after switching the buffer\n          // if (params[0] === 1049) {\n          //   this.restoreCursor(params);\n          // }\n          this._terminal.refresh(0, this._terminal.rows - 1);\n          this._terminal.viewport.syncScrollArea();\n          this._terminal.showCursor();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._terminal.bracketedPasteMode = false;\n          break;\n      }\n    }\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *     Ps = 0  -> Normal (default).\n   *     Ps = 1  -> Bold.\n   *     Ps = 2  -> Faint, decreased intensity (ISO 6429).\n   *     Ps = 4  -> Underlined.\n   *     Ps = 5  -> Blink (appears as Bold).\n   *     Ps = 7  -> Inverse.\n   *     Ps = 8  -> Invisible, i.e., hidden (VT300).\n   *     Ps = 2 2  -> Normal (neither bold nor faint).\n   *     Ps = 2 4  -> Not underlined.\n   *     Ps = 2 5  -> Steady (not blinking).\n   *     Ps = 2 7  -> Positive (not inverse).\n   *     Ps = 2 8  -> Visible, i.e., not hidden (VT300).\n   *     Ps = 3 0  -> Set foreground color to Black.\n   *     Ps = 3 1  -> Set foreground color to Red.\n   *     Ps = 3 2  -> Set foreground color to Green.\n   *     Ps = 3 3  -> Set foreground color to Yellow.\n   *     Ps = 3 4  -> Set foreground color to Blue.\n   *     Ps = 3 5  -> Set foreground color to Magenta.\n   *     Ps = 3 6  -> Set foreground color to Cyan.\n   *     Ps = 3 7  -> Set foreground color to White.\n   *     Ps = 3 9  -> Set foreground color to default (original).\n   *     Ps = 4 0  -> Set background color to Black.\n   *     Ps = 4 1  -> Set background color to Red.\n   *     Ps = 4 2  -> Set background color to Green.\n   *     Ps = 4 3  -> Set background color to Yellow.\n   *     Ps = 4 4  -> Set background color to Blue.\n   *     Ps = 4 5  -> Set background color to Magenta.\n   *     Ps = 4 6  -> Set background color to Cyan.\n   *     Ps = 4 7  -> Set background color to White.\n   *     Ps = 4 9  -> Set background color to default (original).\n   *\n   *   If 16-color support is compiled, the following apply.  Assume\n   *   that xterm's resources are set so that the ISO color codes are\n   *   the first 8 of a set of 16.  Then the aixterm colors are the\n   *   bright versions of the ISO colors:\n   *     Ps = 9 0  -> Set foreground color to Black.\n   *     Ps = 9 1  -> Set foreground color to Red.\n   *     Ps = 9 2  -> Set foreground color to Green.\n   *     Ps = 9 3  -> Set foreground color to Yellow.\n   *     Ps = 9 4  -> Set foreground color to Blue.\n   *     Ps = 9 5  -> Set foreground color to Magenta.\n   *     Ps = 9 6  -> Set foreground color to Cyan.\n   *     Ps = 9 7  -> Set foreground color to White.\n   *     Ps = 1 0 0  -> Set background color to Black.\n   *     Ps = 1 0 1  -> Set background color to Red.\n   *     Ps = 1 0 2  -> Set background color to Green.\n   *     Ps = 1 0 3  -> Set background color to Yellow.\n   *     Ps = 1 0 4  -> Set background color to Blue.\n   *     Ps = 1 0 5  -> Set background color to Magenta.\n   *     Ps = 1 0 6  -> Set background color to Cyan.\n   *     Ps = 1 0 7  -> Set background color to White.\n   *\n   *   If xterm is compiled with the 16-color support disabled, it\n   *   supports the following, from rxvt:\n   *     Ps = 1 0 0  -> Set foreground and background color to\n   *     default.\n   *\n   *   If 88- or 256-color support is compiled, the following apply.\n   *     Ps = 3 8  ; 5  ; Ps -> Set foreground color to the second\n   *     Ps.\n   *     Ps = 4 8  ; 5  ; Ps -> Set background color to the second\n   *     Ps.\n   */\n  public charAttributes(params: number[]): void {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params[0] === 0) {\n      this._terminal.curAttr = DEFAULT_ATTR;\n      return;\n    }\n\n    const l = params.length;\n    let flags = this._terminal.curAttr >> 18;\n    let fg = (this._terminal.curAttr >> 9) & 0x1ff;\n    let bg = this._terminal.curAttr & 0x1ff;\n    let p;\n\n    for (let i = 0; i < l; i++) {\n      p = params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        fg = p - 30;\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        bg = p - 40;\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        p += 8;\n        fg = p - 90;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        p += 8;\n        bg = p - 100;\n      } else if (p === 0) {\n        // default\n        flags = DEFAULT_ATTR >> 18;\n        fg = (DEFAULT_ATTR >> 9) & 0x1ff;\n        bg = DEFAULT_ATTR & 0x1ff;\n        // flags = 0;\n        // fg = 0x1ff;\n        // bg = 0x1ff;\n      } else if (p === 1) {\n        // bold text\n        flags |= FLAGS.BOLD;\n      } else if (p === 3) {\n        // italic text\n        flags |= FLAGS.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        flags |= FLAGS.UNDERLINE;\n      } else if (p === 5) {\n        // blink\n        flags |= FLAGS.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        flags |= FLAGS.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        flags |= FLAGS.INVISIBLE;\n      } else if (p === 2) {\n        // dimmed text\n        flags |= FLAGS.DIM;\n      } else if (p === 22) {\n        // not bold nor faint\n        flags &= ~FLAGS.BOLD;\n        flags &= ~FLAGS.DIM;\n      } else if (p === 23) {\n        // not italic\n        flags &= ~FLAGS.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        flags &= ~FLAGS.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        flags &= ~FLAGS.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        flags &= ~FLAGS.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        flags &= ~FLAGS.INVISIBLE;\n      } else if (p === 39) {\n        // reset fg\n        fg = (DEFAULT_ATTR >> 9) & 0x1ff;\n      } else if (p === 49) {\n        // reset bg\n        bg = DEFAULT_ATTR & 0x1ff;\n      } else if (p === 38) {\n        // fg color 256\n        if (params[i + 1] === 2) {\n          i += 2;\n          fg = this._terminal.matchColor(\n            params[i] & 0xff,\n            params[i + 1] & 0xff,\n            params[i + 2] & 0xff);\n          if (fg === -1) fg = 0x1ff;\n          i += 2;\n        } else if (params[i + 1] === 5) {\n          i += 2;\n          p = params[i] & 0xff;\n          fg = p;\n        }\n      } else if (p === 48) {\n        // bg color 256\n        if (params[i + 1] === 2) {\n          i += 2;\n          bg = this._terminal.matchColor(\n            params[i] & 0xff,\n            params[i + 1] & 0xff,\n            params[i + 2] & 0xff);\n          if (bg === -1) bg = 0x1ff;\n          i += 2;\n        } else if (params[i + 1] === 5) {\n          i += 2;\n          p = params[i] & 0xff;\n          bg = p;\n        }\n      } else if (p === 100) {\n        // reset fg/bg\n        fg = (DEFAULT_ATTR >> 9) & 0x1ff;\n        bg = DEFAULT_ATTR & 0x1ff;\n      } else {\n        this._terminal.error('Unknown SGR attribute: %d.', p);\n      }\n    }\n\n    this._terminal.curAttr = (flags << 18) | (fg << 9) | bg;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   */\n  public deviceStatus(params: number[], collect?: string): void {\n    if (!collect) {\n      switch (params[0]) {\n        case 5:\n          // status report\n          this._terminal.emit('data', `${C0.ESC}[0n`);\n          break;\n        case 6:\n          // cursor position\n          const y = this._terminal.buffer.y + 1;\n          const x = this._terminal.buffer.x + 1;\n          this._terminal.emit('data', `${C0.ESC}[${y};${x}R`);\n          break;\n      }\n    } else if (collect === '?') {\n      // modern xterm doesnt seem to\n      // respond to any of these except ?6, 6, and 5\n      switch (params[0]) {\n        case 6:\n          // cursor position\n          const y = this._terminal.buffer.y + 1;\n          const x = this._terminal.buffer.x + 1;\n          this._terminal.emit('data', `${C0.ESC}[?${y};${x}R`);\n          break;\n        case 15:\n          // no printer\n          // this.handler(C0.ESC + '[?11n');\n          break;\n        case 25:\n          // dont support user defined keys\n          // this.handler(C0.ESC + '[?21n');\n          break;\n        case 26:\n          // north american keyboard\n          // this.handler(C0.ESC + '[?27;1;0;0n');\n          break;\n        case 53:\n          // no dec locator/mouse\n          // this.handler(C0.ESC + '[?50n');\n          break;\n      }\n    }\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   */\n  public softReset(params: number[], collect?: string): void {\n    if (collect === '!') {\n      this._terminal.cursorHidden = false;\n      this._terminal.insertMode = false;\n      this._terminal.originMode = false;\n      this._terminal.wraparoundMode = true;  // defaults: xterm - true, vt100 - false\n      this._terminal.applicationKeypad = false; // ?\n      this._terminal.viewport.syncScrollArea();\n      this._terminal.applicationCursor = false;\n      this._terminal.buffer.scrollTop = 0;\n      this._terminal.buffer.scrollBottom = this._terminal.rows - 1;\n      this._terminal.curAttr = DEFAULT_ATTR;\n      this._terminal.buffer.x = this._terminal.buffer.y = 0; // ?\n      this._terminal.charset = null;\n      this._terminal.glevel = 0; // ??\n      this._terminal.charsets = [null]; // ??\n    }\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   */\n  public setCursorStyle(params?: number[], collect?: string): void {\n    if (collect === ' ') {\n      const param = params[0] < 1 ? 1 : params[0];\n      switch (param) {\n        case 1:\n        case 2:\n          this._terminal.setOption('cursorStyle', 'block');\n          break;\n        case 3:\n        case 4:\n          this._terminal.setOption('cursorStyle', 'underline');\n          break;\n        case 5:\n        case 6:\n          this._terminal.setOption('cursorStyle', 'bar');\n          break;\n      }\n      const isBlinking = param % 2 === 1;\n      this._terminal.setOption('cursorBlink', isBlinking);\n    }\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   * CSI ? Pm r\n   */\n  public setScrollRegion(params: number[], collect?: string): void {\n    if (collect) return;\n    this._terminal.buffer.scrollTop = (params[0] || 1) - 1;\n    this._terminal.buffer.scrollBottom = (params[1] && params[1] <= this._terminal.rows ? params[1] : this._terminal.rows) - 1;\n    this._terminal.buffer.x = 0;\n    this._terminal.buffer.y = 0;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   */\n  public saveCursor(params: number[]): void {\n    this._terminal.buffer.savedX = this._terminal.buffer.x;\n    this._terminal.buffer.savedY = this._terminal.buffer.y;\n    this._terminal.savedCurAttr = this._terminal.curAttr;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   */\n  public restoreCursor(params: number[]): void {\n    this._terminal.buffer.x = this._terminal.buffer.savedX || 0;\n    this._terminal.buffer.y = this._terminal.buffer.savedY || 0;\n    this._terminal.curAttr = this._terminal.savedCurAttr || DEFAULT_ATTR;\n  }\n\n\n  /**\n   * OSC 0; <data> ST (set icon name + window title)\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title. Icon name is not supported.\n   */\n  public setTitle(data: string): void {\n    this._terminal.handleTitle(data);\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   */\n  public nextLine(): void {\n    this._terminal.buffer.x = 0;\n    this.index();\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): void {\n    this._terminal.log('Serial port requested application keypad.');\n    this._terminal.applicationKeypad = true;\n    if (this._terminal.viewport) {\n      this._terminal.viewport.syncScrollArea();\n    }\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): void {\n    this._terminal.log('Switching back to normal keypad.');\n    this._terminal.applicationKeypad = false;\n    if (this._terminal.viewport) {\n      this._terminal.viewport.syncScrollArea();\n    }\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): void {\n    this._terminal.setgLevel(0);\n    this._terminal.setgCharset(0, DEFAULT_CHARSET); // US (default)\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): void {\n    if (collectAndFlag.length !== 2) return this.selectDefaultCharset();\n    if (collectAndFlag[0] === '/') return;  // TODO: Is this supported?\n    this._terminal.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   */\n  public index(): void {\n    this._terminal.index();  // TODO: save to move from terminal?\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   */\n  public tabSet(): void {\n    this._terminal.tabSet();  // TODO: save to move from terminal?\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   */\n  public reverseIndex(): void {\n    this._terminal.reverseIndex();  // TODO: save to move from terminal?\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public reset(): void {\n    this._parser.reset();\n    this._terminal.reset();  // TODO: save to move from terminal?\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): void {\n    this._terminal.setgLevel(level);  // TODO: save to move from terminal?\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const INVERTED_DEFAULT_COLOR = -1;\nexport const DIM_OPACITY = 0.5;\n\nexport interface IGlyphIdentifier {\n  chars: string;\n  code: number;\n  bg: number;\n  fg: number;\n  bold: boolean;\n  dim: boolean;\n  italic: boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: T[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(null);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = null;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal } from '../../Types';\nimport { IColorSet } from '../Types';\nimport { ICharAtlasConfig } from '../../shared/atlas/Types';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, terminal: ITerminal, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors = <IColorSet>{\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: null,\n    cursorAccent: null,\n    selection: null,\n    // For the static char atlas, we only use the first 16 colors, but we need all 256 for the\n    // dynamic character atlas.\n    ansi: colors.ansi.slice(0, 16)\n  };\n  return {\n    type: terminal.options.experimentalCharAtlas,\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: terminal.options.fontFamily,\n    fontSize: terminal.options.fontSize,\n    fontWeight: terminal.options.fontWeight,\n    fontWeightBold: terminal.options.fontWeightBold,\n    allowTransparency: terminal.options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.type === b.type &&\n      a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from './Types';\nimport { IDisposable } from 'xterm';\n\nexport default abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  protected _doWarmUp(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager } from './Types';\nimport { IColor, IColorSet } from '../shared/Types';\nimport { ITheme } from 'xterm';\n\nconst DEFAULT_FOREGROUND = fromHex('#ffffff');\nconst DEFAULT_BACKGROUND = fromHex('#000000');\nconst DEFAULT_CURSOR = fromHex('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = fromHex('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF77\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS. Do not mutate DEFAULT_ANSI_COLORS, instead make a copy\n// and mutate that.\nexport const DEFAULT_ANSI_COLORS = (() => {\n  const colors = [\n    // dark:\n    fromHex('#2e3436'),\n    fromHex('#cc0000'),\n    fromHex('#4e9a06'),\n    fromHex('#c4a000'),\n    fromHex('#3465a4'),\n    fromHex('#75507b'),\n    fromHex('#06989a'),\n    fromHex('#d3d7cf'),\n    // bright:\n    fromHex('#555753'),\n    fromHex('#ef2929'),\n    fromHex('#8ae234'),\n    fromHex('#fce94f'),\n    fromHex('#729fcf'),\n    fromHex('#ad7fa8'),\n    fromHex('#34e2e2'),\n    fromHex('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`,\n      // Use >>> 0 to force a conversion to an unsigned int\n      rgba: ((r << 24) | (g << 16) | (b << 8) | 0xFF) >>> 0\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    const ch = toPaddedHex(c);\n    colors.push({\n      css: `#${ch}${ch}${ch}`,\n      rgba: ((c << 24) | (c << 16) | (c << 8) | 0xFF) >>> 0\n    });\n  }\n\n  return colors;\n})();\n\nfunction fromHex(css: string): IColor {\n  return {\n    css,\n    rgba: parseInt(css.slice(1), 16) << 8 | 0xFF\n  };\n}\n\nfunction toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    this._ctx = canvas.getContext('2d');\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selection: DEFAULT_SELECTION,\n      ansi: DEFAULT_ANSI_COLORS.slice()\n    };\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selection = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n  }\n\n  private _parseColor(\n    css: string,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (!css) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    if (!allowTransparency && data[3] !== 0xFF) {\n      // Ideally we'd just ignore the alpha channel, but...\n      //\n      // Browsers may not give back exactly the same RGB values we put in, because most/all\n      // convert the color to a pre-multiplied representation. getImageData converts that back to\n      // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n      // on their own.\n      //\n      // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n      // into 0x00000000.\n      //\n      // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n      // pixels that have just been set using putImageData() might be returned to an equivalent\n      // getImageData() as different values.\"\n      // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n      //\n      // So let's just use the fallback color in this case instead.\n      console.warn(\n        `Color: ${css} is using transparency, but allowTransparency is false. ` +\n        `Using fallback ${fallback.css}.`\n      );\n      return fallback;\n    }\n\n    return {\n      css,\n      rgba: (data[0] << 24 | data[1] << 16 | data[2] << 8 | data[3]) >>> 0\n    };\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { FontWeight } from 'xterm';\nimport { IColorSet } from '../Types';\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n\nexport interface ICharAtlasConfig {\n  type: 'none' | 'static' | 'dynamic';\n  devicePixelRatio: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  scaledCharWidth: number;\n  scaledCharHeight: number;\n  allowTransparency: boolean;\n  colors: IColorSet;\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = !!~userAgent.indexOf('Firefox');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport const isMSIE = !!~userAgent.indexOf('MSIE') || !!~userAgent.indexOf('Trident');\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = contains(['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'], platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isMSWindows = contains(['Windows', 'Win16', 'Win32', 'WinCE'], platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n\n/**\n * Return if the given array contains the given element\n * @param arr The array to search for the given element.\n * @param el The element to look for into the array\n */\nfunction contains(arr: any[], el: any): boolean {\n  return arr.indexOf(el) >= 0;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { FontWeight } from 'xterm';\nimport { CHAR_ATLAS_CELL_SPACING, ICharAtlasConfig } from './Types';\nimport { IColor } from '../Types';\nimport { isFirefox, isSafari } from '../utils/Browser';\n\ndeclare const Promise: any;\n\nexport interface IOffscreenCanvas {\n  width: number;\n  height: number;\n  getContext(type: '2d', config?: Canvas2DContextAttributes): CanvasRenderingContext2D;\n  transferToImageBitmap(): ImageBitmap;\n}\n\n/**\n * Generates a char atlas.\n * @param context The window or worker context.\n * @param canvasFactory A function to generate a canvas with a width or height.\n * @param config The config for the new char atlas.\n */\nexport function generateStaticCharAtlasTexture(context: Window, canvasFactory: (width: number, height: number) => HTMLCanvasElement | IOffscreenCanvas, config: ICharAtlasConfig): HTMLCanvasElement | Promise<ImageBitmap> {\n  const cellWidth = config.scaledCharWidth + CHAR_ATLAS_CELL_SPACING;\n  const cellHeight = config.scaledCharHeight + CHAR_ATLAS_CELL_SPACING;\n  const canvas = canvasFactory(\n    /*255 ascii chars*/255 * cellWidth,\n    (/*default+default bold*/2 + /*0-15*/16 + /*0-15 bold*/16) * cellHeight\n  );\n  const ctx = canvas.getContext('2d', {alpha: config.allowTransparency});\n\n  ctx.fillStyle = config.colors.background.css;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n  ctx.save();\n  ctx.fillStyle = config.colors.foreground.css;\n  ctx.font = getFont(config.fontWeight, config);\n  ctx.textBaseline = 'top';\n\n  // Default color\n  for (let i = 0; i < 256; i++) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(i * cellWidth, 0, cellWidth, cellHeight);\n    ctx.clip();\n    ctx.fillText(String.fromCharCode(i), i * cellWidth, 0);\n    ctx.restore();\n  }\n  // Default color bold\n  ctx.save();\n  ctx.font = getFont(config.fontWeightBold, config);\n  for (let i = 0; i < 256; i++) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(i * cellWidth, cellHeight, cellWidth, cellHeight);\n    ctx.clip();\n    ctx.fillText(String.fromCharCode(i), i * cellWidth, cellHeight);\n    ctx.restore();\n  }\n  ctx.restore();\n\n  // Colors 0-15\n  ctx.font = getFont(config.fontWeight, config);\n  for (let colorIndex = 0; colorIndex < 16; colorIndex++) {\n    const y = (colorIndex + 2) * cellHeight;\n    // Draw ascii characters\n    for (let i = 0; i < 256; i++) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(i * cellWidth, y, cellWidth, cellHeight);\n      ctx.clip();\n      ctx.fillStyle = config.colors.ansi[colorIndex].css;\n      ctx.fillText(String.fromCharCode(i), i * cellWidth, y);\n      ctx.restore();\n    }\n  }\n\n  // Colors 0-15 bold\n  ctx.font = getFont(config.fontWeightBold, config);\n  for (let colorIndex = 0; colorIndex < 16; colorIndex++) {\n    const y = (colorIndex + 2 + 16) * cellHeight;\n    // Draw ascii characters\n    for (let i = 0; i < 256; i++) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(i * cellWidth, y, cellWidth, cellHeight);\n      ctx.clip();\n      ctx.fillStyle = config.colors.ansi[colorIndex].css;\n      ctx.fillText(String.fromCharCode(i), i * cellWidth, y);\n      ctx.restore();\n    }\n  }\n  ctx.restore();\n\n  // Support is patchy for createImageBitmap at the moment, pass a canvas back\n  // if support is lacking as drawImage works there too. Firefox is also\n  // included here as ImageBitmap appears both buggy and has horrible\n  // performance (tested on v55).\n  if (!('createImageBitmap' in context) || isFirefox || isSafari) {\n    // Don't attempt to clear background colors if createImageBitmap is not supported\n    if (canvas instanceof HTMLCanvasElement) {\n      // Just return the HTMLCanvas if it's a HTMLCanvasElement\n      return canvas;\n    }\n    // Transfer to an ImageBitmap is this is an OffscreenCanvas\n    return new Promise((r: (bitmap: ImageBitmap) => void) => r(canvas.transferToImageBitmap()));\n  }\n\n  const charAtlasImageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n  // Remove the background color from the image so characters may overlap\n  clearColor(charAtlasImageData, config.colors.background);\n\n  return context.createImageBitmap(charAtlasImageData);\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nexport function clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n\nfunction getFont(fontWeight: FontWeight, config: ICharAtlasConfig): string {\n  return `${fontWeight} ${config.fontSize * config.devicePixelRatio}px ${config.fontFamily}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T>;\n  next: ILinkedListNode<T>;\n  key: number;\n  value: T;\n}\n\nexport default class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> = null;\n  private _tail: ILinkedListNode<T> = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head;\n      this._unlinkNode(node);\n      delete this._map[node.key];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop();\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, IGlyphIdentifier, INVERTED_DEFAULT_COLOR } from './Types';\nimport { ICharAtlasConfig } from '../../shared/atlas/Types';\nimport { IColor } from '../../shared/Types';\nimport BaseCharAtlas from './BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from '../ColorManager';\nimport { clearColor } from '../../shared/atlas/CharAtlasGenerator';\nimport LRUMap from './LRUMap';\nimport { isFirefox, isSafari } from '../../shared/utils/Browser';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nfunction getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport default class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = this._cacheCanvas.getContext('2d', {alpha: true});\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = tmpCanvas.getContext('2d', {alpha: this._config.allowTransparency});\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    } else if (this._canCache(glyph) && this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek().index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    } else if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    } else if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.background;\n    } else if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = 'top';\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, 0);\n    this._tmpCtx.restore();\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    const imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * A dummy CharAtlas implementation that always fails to draw characters.\n */\n\nimport { IGlyphIdentifier } from './Types';\nimport { ICharAtlasConfig } from '../../shared/atlas/Types';\nimport BaseCharAtlas from './BaseCharAtlas';\n\nexport default class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, IGlyphIdentifier } from './Types';\nimport { CHAR_ATLAS_CELL_SPACING, ICharAtlasConfig } from '../../shared/atlas/Types';\nimport { generateStaticCharAtlasTexture } from '../../shared/atlas/CharAtlasGenerator';\nimport BaseCharAtlas from './BaseCharAtlas';\n\nexport default class StaticCharAtlas extends BaseCharAtlas {\n  private _texture: HTMLCanvasElement | ImageBitmap;\n\n  constructor(private _document: Document, private _config: ICharAtlasConfig) {\n    super();\n  }\n\n  private _canvasFactory = (width: number, height: number) => {\n    const canvas = this._document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n\n    // This is useful for debugging\n    // document.body.appendChild(canvas);\n\n    return canvas;\n  }\n\n  protected _doWarmUp(): void {\n    const result = generateStaticCharAtlasTexture(window, this._canvasFactory, this._config);\n    if (result instanceof HTMLCanvasElement) {\n      this._texture = result;\n    } else {\n      result.then(texture => {\n        this._texture = texture;\n      });\n    }\n  }\n\n  private _isCached(glyph: IGlyphIdentifier, colorIndex: number): boolean {\n    const isAscii = glyph.code < 256;\n    // A color is basic if it is one of the 4 bit ANSI colors.\n    const isBasicColor = glyph.fg < 16;\n    const isDefaultColor = glyph.fg >= 256;\n    const isDefaultBackground = glyph.bg >= 256;\n    return isAscii && (isBasicColor || isDefaultColor) && isDefaultBackground && !glyph.italic;\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // we're not warmed up yet\n    if (this._texture === null || this._texture === undefined) {\n      return false;\n    }\n\n    let colorIndex = 0;\n    if (glyph.fg < 256) {\n      colorIndex = 2 + glyph.fg + (glyph.bold ? 16 : 0);\n    } else {\n      // If default color and bold\n      if (glyph.bold) {\n        colorIndex = 1;\n      }\n    }\n    if (!this._isCached(glyph, colorIndex)) {\n      return false;\n    }\n\n    ctx.save();\n\n    // ImageBitmap's draw about twice as fast as from a canvas\n    const charAtlasCellWidth = this._config.scaledCharWidth + CHAR_ATLAS_CELL_SPACING;\n    const charAtlasCellHeight = this._config.scaledCharHeight + CHAR_ATLAS_CELL_SPACING;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      ctx.globalAlpha = DIM_OPACITY;\n    }\n\n    ctx.drawImage(\n      this._texture,\n      glyph.code * charAtlasCellWidth,\n      colorIndex * charAtlasCellHeight,\n      charAtlasCellWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      charAtlasCellWidth,\n      this._config.scaledCharHeight\n    );\n\n    ctx.restore();\n\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal } from '../../Types';\nimport { IColorSet } from '../Types';\nimport { ICharAtlasConfig } from '../../shared/atlas/Types';\nimport { generateConfig, configEquals } from './CharAtlasUtils';\nimport BaseCharAtlas from './BaseCharAtlas';\nimport DynamicCharAtlas from './DynamicCharAtlas';\nimport NoneCharAtlas from './NoneCharAtlas';\nimport StaticCharAtlas from './StaticCharAtlas';\n\nconst charAtlasImplementations = {\n  'none': NoneCharAtlas,\n  'static': StaticCharAtlas,\n  'dynamic': DynamicCharAtlas\n};\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: ITerminal[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n * @param terminal The terminal.\n * @param colors The colors to use.\n */\nexport function acquireCharAtlas(\n  terminal: ITerminal,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, terminal, colors);\n\n  // TODO: Currently if a terminal changes configs it will not free the entry reference (until it's disposed)\n\n  // Check to see if the terminal already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(terminal);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the terminal from the entry\n      if (entry.ownedBy.length === 1) {\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the terminal to the cache entry and return\n      entry.ownedBy.push(terminal);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new charAtlasImplementations[terminal.options.experimentalCharAtlas](\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [terminal]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n * @param terminal The terminal to remove.\n */\nexport function removeTerminalFromCache(terminal: ITerminal): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(terminal);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only terminal\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderLayer, IColorSet, IRenderDimensions } from './Types';\nimport { CharData, ITerminal } from '../Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR, IGlyphIdentifier } from './atlas/Types';\nimport BaseCharAtlas from './atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from './atlas/CharAtlasCache';\nimport { CHAR_DATA_CHAR_INDEX } from '../Buffer';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: BaseCharAtlas;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    this._container.removeChild(this._canvas);\n    if (this._charAtlas) {\n      this._charAtlas.dispose();\n    }\n  }\n\n  private _initCanvas(): void {\n    this._ctx = this._canvas.getContext('2d', {alpha: this._alpha});\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this.clearAll();\n    }\n  }\n\n  public onOptionsChanged(terminal: ITerminal): void {}\n  public onBlur(terminal: ITerminal): void {}\n  public onFocus(terminal: ITerminal): void {}\n  public onCursorMove(terminal: ITerminal): void {}\n  public onGridChanged(terminal: ITerminal, startRow: number, endRow: number): void {}\n  public onSelectionChanged(terminal: ITerminal, start: [number, number], end: [number, number], columnSelectMode: boolean = false): void {}\n\n  public onThemeChanged(terminal: ITerminal, colorSet: IColorSet): void {\n    this._refreshCharAtlas(terminal, colorSet);\n  }\n\n  protected setTransparency(terminal: ITerminal, alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = <HTMLCanvasElement>this._canvas.cloneNode();\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(terminal, this._colors);\n    this.onGridChanged(terminal, 0, terminal.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param terminal The terminal.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(terminal: ITerminal, colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(terminal, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(terminal: ITerminal, dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this.clearAll();\n    }\n\n    this._refreshCharAtlas(terminal, this._colors);\n  }\n\n  public abstract reset(terminal: ITerminal): void;\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n        width * this._scaledCellWidth,\n        window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected fillLeftLineAtCell(x: number, y: number): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        window.devicePixelRatio,\n        this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n        x * this._scaledCellWidth + window.devicePixelRatio / 2,\n        y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n        width * this._scaledCellWidth - window.devicePixelRatio,\n        (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n          x * this._scaledCellWidth,\n          y * this._scaledCellHeight,\n          width * this._scaledCellWidth,\n          height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n          x * this._scaledCellWidth,\n          y * this._scaledCellHeight,\n          width * this._scaledCellWidth,\n          height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param terminal The terminal.\n   * @param charData The char data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected fillCharTrueColor(terminal: ITerminal, charData: CharData, x: number, y: number): void {\n    this._ctx.font = this._getFont(terminal, false, false);\n    this._ctx.textBaseline = 'top';\n    this._clipRow(terminal, y);\n    this._ctx.fillText(\n        charData[CHAR_DATA_CHAR_INDEX],\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop);\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param terminal The terminal.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected drawChars(terminal: ITerminal, chars: string, code: number, width: number, x: number, y: number, fg: number, bg: number, bold: boolean, dim: boolean, italic: boolean): void {\n    const drawInBrightColor = terminal.options.drawBoldTextInBrightColors && bold && fg < 8 && fg !== INVERTED_DEFAULT_COLOR;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = chars;\n    this._currentGlyphIdentifier.code = code;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = bold && terminal.options.enableBold;\n    this._currentGlyphIdentifier.dim = dim;\n    this._currentGlyphIdentifier.italic = italic;\n    const atlasDidDraw = this._charAtlas && this._charAtlas.draw(\n      this._ctx,\n      this._currentGlyphIdentifier,\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop\n    );\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(terminal, chars, width, fg, x, y, bold && terminal.options.enableBold, dim, italic);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param terminal The terminal.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(terminal: ITerminal, chars: string, width: number, fg: number, x: number, y: number, bold: boolean, dim: boolean, italic: boolean): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(terminal, bold, italic);\n    this._ctx.textBaseline = 'top';\n\n    if (fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (fg < 256) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    this._clipRow(terminal, y);\n\n    // Apply alpha to dim the character\n    if (dim) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._ctx.fillText(\n        chars,\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop);\n    this._ctx.restore();\n  }\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param terminal The terminal.\n   * @param y The row to clip.\n   */\n  private _clipRow(terminal: ITerminal, y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n        0,\n        y * this._scaledCellHeight,\n        terminal.cols * this._scaledCellWidth,\n        this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param terminal The terminal.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(terminal: ITerminal, isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? terminal.options.fontWeightBold : terminal.options.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${terminal.options.fontSize * window.devicePixelRatio}px ${terminal.options.fontFamily}`;\n  }\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_ATTR_INDEX, CHAR_DATA_CODE_INDEX, CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, NULL_CELL_CODE } from '../Buffer';\nimport { FLAGS, IColorSet, IRenderDimensions, ICharacterJoinerRegistry } from './Types';\nimport { CharData, ITerminal } from '../Types';\nimport { INVERTED_DEFAULT_COLOR } from './atlas/Types';\nimport { GridCache } from './GridCache';\nimport { BaseRenderLayer } from './BaseRenderLayer';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number;\n  private _characterFont: string;\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n\n  constructor(container: HTMLElement, zIndex: number, colors: IColorSet, characterJoinerRegistry: ICharacterJoinerRegistry, alpha: boolean) {\n    super(container, 'text', zIndex, alpha, colors);\n    this._state = new GridCache<CharData>();\n    this._characterJoinerRegistry = characterJoinerRegistry;\n  }\n\n  public resize(terminal: ITerminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(terminal, false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(terminal.cols, terminal.rows);\n  }\n\n  public reset(terminal: ITerminal): void {\n    this._state.clear();\n    this.clearAll();\n  }\n\n  private _forEachCell(\n    terminal: ITerminal,\n    firstRow: number,\n    lastRow: number,\n    joinerRegistry: ICharacterJoinerRegistry | null,\n    callback: (\n      code: number,\n      chars: string,\n      width: number,\n      x: number,\n      y: number,\n      fg: number,\n      bg: number,\n      flags: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + terminal.buffer.ydisp;\n      const line = terminal.buffer.lines.get(row);\n      const joinedRanges = joinerRegistry ? joinerRegistry.getJoinedCharacters(row) : [];\n      for (let x = 0; x < terminal.cols; x++) {\n        const charData = line.get(x);\n        let code: number = <number>charData[CHAR_DATA_CODE_INDEX];\n\n        // Can either represent character(s) for a single cell or multiple cells\n        // if indicated by a character joiner.\n        let chars: string = charData[CHAR_DATA_CHAR_INDEX];\n        const attr: number = charData[CHAR_DATA_ATTR_INDEX];\n        let width: number = charData[CHAR_DATA_WIDTH_INDEX];\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (width === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift();\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n          chars = terminal.buffer.translateBufferLineToString(\n            row,\n            true,\n            range[0],\n            range[1]\n          );\n          width = range[1] - range[0];\n          code = Infinity;\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(charData)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line.length - 1 && line.get(lastCharX + 1)[CHAR_DATA_CODE_INDEX] === NULL_CELL_CODE) {\n            width = 2;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        const flags = attr >> 18;\n        let bg = attr & 0x1ff;\n        let fg = (attr >> 9) & 0x1ff;\n\n        // If inverse flag is on, the foreground should become the background.\n        if (flags & FLAGS.INVERSE) {\n          const temp = bg;\n          bg = fg;\n          fg = temp;\n          if (fg === 256) {\n            fg = INVERTED_DEFAULT_COLOR;\n          }\n          if (bg === 257) {\n            bg = INVERTED_DEFAULT_COLOR;\n          }\n        }\n\n        callback(\n          code,\n          chars,\n          width,\n          x,\n          y,\n          fg,\n          bg,\n          flags\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(terminal: ITerminal, firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = terminal.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(terminal, firstRow, lastRow, null, (code, chars, width, x, y, fg, bg, flags) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n      if (bg === INVERTED_DEFAULT_COLOR) {\n        nextFillStyle = this._colors.foreground.css;\n      } else if (bg < 256) {\n        nextFillStyle = this._colors.ansi[bg].css;\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      } if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle;\n        this.fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle;\n        this.fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this.fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(terminal: ITerminal, firstRow: number, lastRow: number): void {\n    this._forEachCell(terminal, firstRow, lastRow, this._characterJoinerRegistry, (code, chars, width, x, y, fg, bg, flags) => {\n      if (flags & FLAGS.INVISIBLE) {\n        return;\n      }\n      if (flags & FLAGS.UNDERLINE) {\n        this._ctx.save();\n        if (fg === INVERTED_DEFAULT_COLOR) {\n          this._ctx.fillStyle = this._colors.background.css;\n        } else if (fg < 256) {\n          // 256 color support\n          this._ctx.fillStyle = this._colors.ansi[fg].css;\n        } else {\n          this._ctx.fillStyle = this._colors.foreground.css;\n        }\n        this.fillBottomLineAtCells(x, y, width);\n        this._ctx.restore();\n      }\n      this.drawChars(\n        terminal, chars, code,\n        width, x, y,\n        fg, bg,\n        !!(flags & FLAGS.BOLD), !!(flags & FLAGS.DIM), !!(flags & FLAGS.ITALIC)\n      );\n    });\n  }\n\n  public onGridChanged(terminal: ITerminal, firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this.clearCells(0, firstRow, terminal.cols, lastRow - firstRow + 1);\n    this._drawBackground(terminal, firstRow, lastRow);\n    this._drawForeground(terminal, firstRow, lastRow);\n  }\n\n  public onOptionsChanged(terminal: ITerminal): void {\n    this.setTransparency(terminal, terminal.options.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(charData: CharData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (charData[CHAR_DATA_WIDTH_INDEX] !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    const code = charData[CHAR_DATA_CODE_INDEX];\n    if (code < 256) {\n      return false;\n    }\n\n    // Deliver from cache if available\n    const char = charData[CHAR_DATA_CHAR_INDEX];\n    if (this._characterOverlapCache.hasOwnProperty(char)) {\n      return this._characterOverlapCache[char];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(char).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[char] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal } from '../Types';\nimport { IColorSet, IRenderDimensions } from './Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\n\ninterface ISelectionState {\n  start: [number, number];\n  end: [number, number];\n  columnSelectMode: boolean;\n  ydisp: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state: ISelectionState;\n\n  constructor(container: HTMLElement, zIndex: number, colors: IColorSet) {\n    super(container, 'selection', zIndex, true, colors);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: null,\n      end: null,\n      columnSelectMode: null,\n      ydisp: null\n    };\n  }\n\n  public resize(terminal: ITerminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(terminal: ITerminal): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this.clearAll();\n    }\n  }\n\n  public onSelectionChanged(terminal: ITerminal, start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, terminal.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this.clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - terminal.buffer.ydisp;\n    const viewportEndRow = end[1] - terminal.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, terminal.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= terminal.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selection.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this.fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : terminal.cols;\n      this.fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this.fillCells(0, viewportCappedStartRow + 1, terminal.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : terminal.cols;\n        this.fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = terminal.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number], end: [number, number], columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number], coord2: [number, number]): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_WIDTH_INDEX } from '../Buffer';\nimport { IColorSet, IRenderDimensions } from './Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { CharData, ITerminal } from '../Types';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (terminal: ITerminal, x: number, y: number, charData: CharData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager;\n\n  constructor(container: HTMLElement, zIndex: number, colors: IColorSet) {\n    super(container, 'cursor', zIndex, true, colors);\n    this._state = {\n      x: null,\n      y: null,\n      isFocused: null,\n      style: null,\n      width: null\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n    // TODO: Consider initial options? Maybe onOptionsChanged should be called at the end of open?\n  }\n\n  public resize(terminal: ITerminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: null,\n      y: null,\n      isFocused: null,\n      style: null,\n      width: null\n    };\n  }\n\n  public reset(terminal: ITerminal): void {\n    this._clearCursor();\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = null;\n      this.onOptionsChanged(terminal);\n    }\n  }\n\n  public onBlur(terminal: ITerminal): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.pause();\n    }\n    terminal.refresh(terminal.buffer.y, terminal.buffer.y);\n  }\n\n  public onFocus(terminal: ITerminal): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.resume(terminal);\n    } else {\n      terminal.refresh(terminal.buffer.y, terminal.buffer.y);\n    }\n  }\n\n  public onOptionsChanged(terminal: ITerminal): void {\n    if (terminal.options.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(terminal, () => {\n          this._render(terminal, true);\n        });\n      }\n    } else {\n      if (this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager.dispose();\n        this._cursorBlinkStateManager = null;\n      }\n      // Request a refresh from the terminal as management of rendering is being\n      // moved back to the terminal\n      terminal.refresh(terminal.buffer.y, terminal.buffer.y);\n    }\n  }\n\n  public onCursorMove(terminal: ITerminal): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.restartBlinkAnimation(terminal);\n    }\n  }\n\n  public onGridChanged(terminal: ITerminal, startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(terminal, false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation(terminal);\n    }\n  }\n\n  private _render(terminal: ITerminal, triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!terminal.cursorState || terminal.cursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = terminal.buffer.ybase + terminal.buffer.y;\n    const viewportRelativeCursorY = cursorY - terminal.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= terminal.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    const charData = terminal.buffer.lines.get(cursorY).get(terminal.buffer.x);\n    if (!charData) {\n      return;\n    }\n\n    if (!terminal.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      this._renderBlurCursor(terminal, terminal.buffer.x, viewportRelativeCursorY, charData);\n      this._ctx.restore();\n      this._state.x = terminal.buffer.x;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = terminal.options.cursorStyle;\n      this._state.width = charData[CHAR_DATA_WIDTH_INDEX];\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === terminal.buffer.x &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === terminal.isFocused &&\n          this._state.style === terminal.options.cursorStyle &&\n          this._state.width === charData[CHAR_DATA_WIDTH_INDEX]) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[terminal.options.cursorStyle || 'block'](terminal, terminal.buffer.x, viewportRelativeCursorY, charData);\n    this._ctx.restore();\n\n    this._state.x = terminal.buffer.x;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = terminal.options.cursorStyle;\n    this._state.width = charData[CHAR_DATA_WIDTH_INDEX];\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      this.clearCells(this._state.x, this._state.y, this._state.width, 1);\n      this._state = {\n        x: null,\n        y: null,\n        isFocused: null,\n        style: null,\n        width: null\n      };\n    }\n  }\n\n  private _renderBarCursor(terminal: ITerminal, x: number, y: number, charData: CharData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this.fillLeftLineAtCell(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(terminal: ITerminal, x: number, y: number, charData: CharData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this.fillCells(x, y, charData[CHAR_DATA_WIDTH_INDEX], 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this.fillCharTrueColor(terminal, charData, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(terminal: ITerminal, x: number, y: number, charData: CharData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this.fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(terminal: ITerminal, x: number, y: number, charData: CharData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this.strokeRectAtCell(x, y, charData[CHAR_DATA_WIDTH_INDEX], 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number;\n  private _blinkStartTimeout: number;\n  private _blinkInterval: number;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number;\n\n  constructor(\n    terminal: ITerminal,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (terminal.isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = null;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = null;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = null;\n    }\n  }\n\n  public restartBlinkAnimation(terminal: ITerminal): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = null;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = <number><any>setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = null;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = null;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = <number><any>setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = null;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = null;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = null;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = null;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = null;\n    }\n  }\n\n  public resume(terminal: ITerminal): void {\n    this._animationTimeRestarted = null;\n    this._restartInterval();\n    this.restartBlinkAnimation(terminal);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkHoverEvent, ITerminal, ILinkifierAccessor, LinkHoverEventTypes } from '../Types';\nimport { IColorSet, IRenderDimensions } from './Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from './atlas/Types';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkHoverEvent = null;\n\n  constructor(container: HTMLElement, zIndex: number, colors: IColorSet, terminal: ILinkifierAccessor) {\n    super(container, 'link', zIndex, true, colors);\n    terminal.linkifier.on(LinkHoverEventTypes.HOVER, (e: ILinkHoverEvent) => this._onLinkHover(e));\n    terminal.linkifier.on(LinkHoverEventTypes.LEAVE, (e: ILinkHoverEvent) => this._onLinkLeave(e));\n  }\n\n  public resize(terminal: ITerminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = null;\n  }\n\n  public reset(terminal: ITerminal): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this.clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this.clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this.clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = null;\n    }\n  }\n\n  private _onLinkHover(e: ILinkHoverEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg < 256) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this.fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this.fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this.fillBottomLineAtCells(0, y, e.cols);\n      }\n      this.fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onLinkLeave(e: ILinkHoverEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","import { ITerminal } from '../Types';\nimport { IDisposable } from 'xterm';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IDisposable {\n  private _rowStart: number;\n  private _rowEnd: number;\n  private _animationFrame: number = null;\n\n  constructor(\n    private _terminal: ITerminal,\n    private _callback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = null;\n    }\n  }\n\n  public refresh(rowStart: number, rowEnd: number): void {\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== null && rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== null && rowEnd !== undefined ? rowEnd : this._terminal.rows - 1;\n    // Check whether the row start/end values have already been set\n    const isRowStartSet = this._rowStart !== undefined && this._rowStart !== null;\n    const isRowEndSet = this._rowEnd !== undefined && this._rowEnd !== null;\n    // Set the properties to the updated values\n    this._rowStart = isRowStartSet ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = isRowEndSet ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    // Clamp values\n    this._rowStart = Math.max(this._rowStart, 0);\n    this._rowEnd = Math.min(this._rowEnd, this._terminal.rows - 1);\n\n    // Run render callback\n    this._callback(this._rowStart, this._rowEnd);\n\n    // Reset debouncer\n    this._rowStart = null;\n    this._rowEnd = null;\n    this._animationFrame = null;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from '../common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: MediaQueryListListener;\n  private _listener: ScreenDprListener;\n  private _resolutionMediaMatchList: MediaQueryList;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    // Clear listeners for old DPR\n    if (this._resolutionMediaMatchList) {\n      this._resolutionMediaMatchList.removeListener(this._outerListener);\n    }\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._listener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._listener = null;\n    this._outerListener = null;\n  }\n}\n","import { CHAR_DATA_ATTR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from '../Buffer';\nimport { ITerminal, IBufferLine } from '../Types';\nimport { ICharacterJoinerRegistry, ICharacterJoiner } from './Types';\n\nexport class CharacterJoinerRegistry implements ICharacterJoinerRegistry {\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n\n  constructor(private _terminal: ITerminal) {\n  }\n\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._terminal.buffer.lines.get(row);\n    if (line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = this._terminal.buffer.translateBufferLineToString(row, true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttr = line.get(0)[CHAR_DATA_ATTR_INDEX] >> 9;\n\n    for (let x = 0; x < this._terminal.cols; x++) {\n      const charData = line.get(x);\n      const chars = charData[CHAR_DATA_CHAR_INDEX];\n      const width = charData[CHAR_DATA_WIDTH_INDEX];\n      const attr = charData[CHAR_DATA_ATTR_INDEX] >> 9;\n\n      if (width === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (attr !== rangeAttr) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttr = attr;\n      }\n\n      currentStringIndex += chars.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._terminal.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    const joinedRanges: [number, number][] = this._characterJoiners[0].handler(text);\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      const joinerRanges = this._characterJoiners[i].handler(text);\n      for (let j = 0; j < joinerRanges.length; j++) {\n        CharacterJoinerRegistry._mergeRanges(joinedRanges, joinerRanges[j]);\n      }\n    }\n    this._stringRangesToCellRanges(joinedRanges, lineData, startCol);\n    return joinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._terminal.cols; x++) {\n      const charData = line.get(x);\n      const width = charData[CHAR_DATA_WIDTH_INDEX];\n      const length = charData[CHAR_DATA_CHAR_INDEX].length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._terminal.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          inRange = false;\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from './TextRenderLayer';\nimport { SelectionRenderLayer } from './SelectionRenderLayer';\nimport { CursorRenderLayer } from './CursorRenderLayer';\nimport { ColorManager } from './ColorManager';\nimport { IRenderLayer, IColorSet, IRenderer, IRenderDimensions, ICharacterJoinerRegistry } from './Types';\nimport { ITerminal, CharacterJoinerHandler } from '../Types';\nimport { LinkRenderLayer } from './LinkRenderLayer';\nimport { EventEmitter } from '../common/EventEmitter';\nimport { RenderDebouncer } from '../ui/RenderDebouncer';\nimport { ScreenDprMonitor } from '../ui/ScreenDprMonitor';\nimport { ITheme } from 'xterm';\nimport { CharacterJoinerRegistry } from '../renderer/CharacterJoinerRegistry';\n\nexport class Renderer extends EventEmitter implements IRenderer {\n  private _renderDebouncer: RenderDebouncer;\n\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n  private _screenDprMonitor: ScreenDprMonitor;\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n\n  public colorManager: ColorManager;\n  public dimensions: IRenderDimensions;\n\n  constructor(private _terminal: ITerminal, theme: ITheme) {\n    super();\n    const allowTransparency = this._terminal.options.allowTransparency;\n    this.colorManager = new ColorManager(document, allowTransparency);\n    this._characterJoinerRegistry = new CharacterJoinerRegistry(_terminal);\n    if (theme) {\n      this.colorManager.setTheme(theme);\n    }\n\n    this._renderLayers = [\n      new TextRenderLayer(this._terminal.screenElement, 0, this.colorManager.colors, this._characterJoinerRegistry, allowTransparency),\n      new SelectionRenderLayer(this._terminal.screenElement, 1, this.colorManager.colors),\n      new LinkRenderLayer(this._terminal.screenElement, 2, this.colorManager.colors, this._terminal),\n      new CursorRenderLayer(this._terminal.screenElement, 3, this.colorManager.colors)\n    ];\n    this.dimensions = {\n      scaledCharWidth: null,\n      scaledCharHeight: null,\n      scaledCellWidth: null,\n      scaledCellHeight: null,\n      scaledCharLeft: null,\n      scaledCharTop: null,\n      scaledCanvasWidth: null,\n      scaledCanvasHeight: null,\n      canvasWidth: null,\n      canvasHeight: null,\n      actualCellWidth: null,\n      actualCellHeight: null\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n\n    this._renderDebouncer = new RenderDebouncer(this._terminal, this._renderRows.bind(this));\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onWindowResize(window.devicePixelRatio));\n    this.register(this._screenDprMonitor);\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this.onIntersectionChange(e[0]), { threshold: 0 });\n      observer.observe(this._terminal.element);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._renderLayers.forEach(l => l.dispose());\n  }\n\n  public onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.intersectionRatio === 0;\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._terminal.refresh(0, this._terminal.rows - 1);\n    }\n  }\n\n  public onWindowResize(devicePixelRatio: number): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== devicePixelRatio) {\n      this._devicePixelRatio = devicePixelRatio;\n      this.onResize(this._terminal.cols, this._terminal.rows);\n    }\n  }\n\n  public setTheme(theme: ITheme): IColorSet {\n    this.colorManager.setTheme(theme);\n\n    // Clear layers and force a full render\n    this._renderLayers.forEach(l => {\n      l.onThemeChanged(this._terminal, this.colorManager.colors);\n      l.reset(this._terminal);\n    });\n\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this._terminal.refresh(0, this._terminal.rows - 1);\n    }\n\n    return this.colorManager.colors;\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    this._renderLayers.forEach(l => l.resize(this._terminal, this.dimensions));\n\n    // Force a refresh\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this._terminal.refresh(0, this._terminal.rows - 1);\n    }\n\n    // Resize the screen\n    this._terminal.screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._terminal.screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n\n    this.emit('resize', {\n      width: this.dimensions.canvasWidth,\n      height: this.dimensions.canvasHeight\n    });\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._terminal.cols, this._terminal.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur(this._terminal));\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus(this._terminal));\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(this._terminal, start, end, columnSelectMode));\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove(this._terminal));\n  }\n\n  public onOptionsChanged(): void {\n    this.colorManager.allowTransparency = this._terminal.options.allowTransparency;\n    this._runOperation(l => l.onOptionsChanged(this._terminal));\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset(this._terminal));\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this._renderLayers.forEach(l => operation(l));\n    }\n  }\n\n  /**\n   * Queues a refresh between two rows (inclusive), to be done on next animation\n   * frame.\n   * @param start The start row.\n   * @param end The end row.\n   */\n  public refreshRows(start: number, end: number): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    this._renderDebouncer.refresh(start, end);\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  private _renderRows(start: number, end: number): void {\n    this._renderLayers.forEach(l => l.onGridChanged(this._terminal, start, end));\n    this._terminal.emit('refresh', { start, end });\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    // Perform a new measure if the CharMeasure dimensions are not yet available\n    if (!this._terminal.charMeasure.width || !this._terminal.charMeasure.height) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._terminal.charMeasure.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._terminal.charMeasure.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._terminal.options.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._terminal.options.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._terminal.options.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._terminal.options.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._terminal.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._terminal.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. CharMeasure.width/height by itself is\n    // insufficient when the page is not at 100% zoom level as CharMeasure is\n    // measured in CSS pixels, but the actual char size on the canvas can\n    // differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._terminal.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._terminal.cols;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._characterJoinerRegistry.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._characterJoinerRegistry.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal } from '../Types';\nimport { IMouseZoneManager, IMouseZone } from './Types';\nimport { Disposable } from '../common/Lifecycle';\nimport { addDisposableDomListener } from './Lifecycle';\n\nconst HOVER_DURATION = 500;\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number = null;\n  private _currentZone: IMouseZone = null;\n  private _lastHoverCoords: [number, number] = [null, null];\n\n  constructor(\n    private _terminal: ITerminal\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._terminal.element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!end) {\n      start = 0;\n      end = this._terminal.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = null;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._terminal.element.addEventListener('mousemove', this._mouseMoveListener);\n      this._terminal.element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._terminal.element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._terminal.element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = null;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = <number><any>setTimeout(() => this._onTooltip(e), HOVER_DURATION);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = null;\n    const zone = this._findZoneEventAt(e);\n    if (zone && zone.tooltipCallback) {\n      zone.tooltipCallback(e);\n    }\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone) {\n      if (zone.willLinkActivate(e)) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found\n    const zone = this._findZoneEventAt(e);\n    if (zone) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone {\n    const coords = this._terminal.mouseHelper.getCoords(e, this._terminal.screenElement, this._terminal.charMeasure, this._terminal.options.lineHeight, this._terminal.cols, this._terminal.rows);\n    if (!coords) {\n      return null;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return null;\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IMouseZoneManager } from './ui/Types';\nimport { ILinkHoverEvent, ILinkMatcher, LinkMatcherHandler, LinkHoverEventTypes, ILinkMatcherOptions, ILinkifier, ITerminal, IBufferStringIteratorResult } from './Types';\nimport { MouseZone } from './ui/MouseZoneManager';\nimport { EventEmitter } from './common/EventEmitter';\nimport { CHAR_DATA_ATTR_INDEX } from './Buffer';\nimport { getStringCellWidth } from './CharWidth';\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier extends EventEmitter implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static readonly TIME_BEFORE_LINKIFY = 200;\n\n  /**\n   * Limit of the unwrapping line expansion (overscan) at the top and bottom\n   * of the actual viewport in ASCII characters.\n   * A limit of 2000 should match most sane urls.\n   */\n  protected static readonly OVERSCAN_CHAR_LIMIT = 2000;\n\n  protected _linkMatchers: ILinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager;\n  private _rowsTimeoutId: number;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number, end: number };\n\n  constructor(\n    protected _terminal: ITerminal\n  ) {\n    super();\n    this._rowsToLinkify = {\n      start: null,\n      end: null\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(mouseZoneManager: IMouseZoneManager): void {\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === null) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n    this._rowsTimeoutId = <number><any>setTimeout(() => this._linkifyRows(), Linkifier.TIME_BEFORE_LINKIFY);\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = null;\n    const buffer = this._terminal.buffer;\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._terminal.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(Linkifier.OVERSCAN_CHAR_LIMIT / this._terminal.cols);\n    const iterator = this._terminal.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = null;\n    this._rowsToLinkify.end = null;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: ILinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: ILinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, matcher.regex.flags + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        // DEBUG: print match and throw\n        if ((<any>this._terminal).debug) {\n          console.log({match, matcher});\n          throw new Error('match found without corresponding matchIndex');\n        }\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._terminal.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n\n      const line = this._terminal.buffer.lines.get(bufferIndex[0]);\n      const char = line.get(bufferIndex[1]);\n      let fg: number | undefined;\n      if (char) {\n        const attr: number = char[CHAR_DATA_ATTR_INDEX];\n        fg = (attr >> 9) & 0x1ff;\n      }\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._terminal.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._terminal.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number): void {\n    const width = getStringCellWidth(uri);\n    const x1 = x % this._terminal.cols;\n    const y1 = y + Math.floor(x / this._terminal.cols);\n    let x2 = (x1 + width) % this._terminal.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._terminal.cols);\n    if (x2 === 0) {\n      x2 = this._terminal.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        window.open(uri, '_blank');\n      },\n      e => {\n        this.emit(LinkHoverEventTypes.HOVER, this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._terminal.element.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this.emit(LinkHoverEventTypes.TOOLTIP, this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          matcher.hoverTooltipCallback(e, uri);\n        }\n      },\n      () => {\n        this.emit(LinkHoverEventTypes.LEAVE, this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._terminal.element.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number): ILinkHoverEvent {\n    return { x1, y1, x2, y2, cols: this._terminal.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharMeasure } from '../Types';\nimport { IRenderer } from '../renderer/Types';\n\nexport class MouseHelper {\n  constructor(private _renderer: IRenderer) {}\n\n  public static getCoordsRelativeToElement(event: {pageX: number, pageY: number}, element: HTMLElement): [number, number] {\n    // Ignore browsers that don't support MouseEvent.pageX\n    if (event.pageX === null || event.pageX === undefined) {\n      return null;\n    }\n\n    const originalElement = element;\n    let x = event.pageX;\n    let y = event.pageY;\n\n    // Converts the coordinates from being relative to the document to being\n    // relative to the terminal.\n    while (element) {\n      x -= element.offsetLeft;\n      y -= element.offsetTop;\n      element = <HTMLElement>element.offsetParent;\n    }\n    element = originalElement;\n    while (element && element !== element.ownerDocument.body) {\n      x += element.scrollLeft;\n      y += element.scrollTop;\n      element = <HTMLElement>element.parentElement;\n    }\n    return [x, y];\n  }\n\n  /**\n   * Gets coordinates within the terminal for a particular mouse event. The result\n   * is returned as an array in the form [x, y] instead of an object as it's a\n   * little faster and this function is used in some low level code.\n   * @param event The mouse event.\n   * @param element The terminal's container element.\n   * @param charMeasure The char measure object used to determine character sizes.\n   * @param colCount The number of columns in the terminal.\n   * @param rowCount The number of rows n the terminal.\n   * @param isSelection Whether the request is for the selection or not. This will\n   * apply an offset to the x value such that the left half of the cell will\n   * select that cell and the right half will select the next cell.\n   */\n  public getCoords(event: {pageX: number, pageY: number}, element: HTMLElement, charMeasure: ICharMeasure, lineHeight: number, colCount: number, rowCount: number, isSelection?: boolean): [number, number] {\n    // Coordinates cannot be measured if charMeasure has not been initialized\n    if (!charMeasure.width || !charMeasure.height) {\n      return null;\n    }\n\n    const coords = MouseHelper.getCoordsRelativeToElement(event, element);\n    if (!coords) {\n      return null;\n    }\n\n    coords[0] = Math.ceil((coords[0] + (isSelection ? this._renderer.dimensions.actualCellWidth / 2 : 0)) / this._renderer.dimensions.actualCellWidth);\n    coords[1] = Math.ceil(coords[1] / this._renderer.dimensions.actualCellHeight);\n\n    // Ensure coordinates are within the terminal viewport. Note that selections\n    // need an addition point of precision to cover the end point (as characters\n    // cover half of one char and half of the next).\n    coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n    coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n    return coords;\n  }\n\n  /**\n   * Gets coordinates within the terminal for a particular mouse event, wrapping\n   * them to the bounds of the terminal and adding 32 to both the x and y values\n   * as expected by xterm.\n   * @param event The mouse event.\n   * @param element The terminal's container element.\n   * @param charMeasure The char measure object used to determine character sizes.\n   * @param colCount The number of columns in the terminal.\n   * @param rowCount The number of rows in the terminal.\n   */\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, charMeasure: ICharMeasure, lineHeight: number, colCount: number, rowCount: number): { x: number, y: number } {\n    const coords = this.getCoords(event, element, charMeasure, lineHeight, colCount, rowCount);\n    let x = coords[0];\n    let y = coords[1];\n\n    // xterm sends raw bytes and starts at 32 (SP) for each.\n    x += 32;\n    y += 32;\n\n    return { x, y };\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal } from './Types';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number];\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number];\n\n  constructor(\n    private _terminal: ITerminal\n  ) {\n    this.clearSelection();\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = null;\n    this.selectionEnd = null;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] {\n    if (this.isSelectAllActive) {\n      return [this._terminal.cols, this._terminal.buffer.ybase + this._terminal.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return null;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._terminal.cols) {\n        return [startPlusLength % this._terminal.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._terminal.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        return [Math.max(this.selectionStart[0] + this.selectionStartLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal, IBufferLine } from '../Types';\nimport { ICircularList } from '../common/Types';\nimport { C0 } from '../common/data/EscapeSequences';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\nexport class AltClickHandler {\n  private _startRow: number;\n  private _startCol: number;\n  private _endRow: number;\n  private _endCol: number;\n  private _lines: ICircularList<IBufferLine>;\n\n  constructor(\n    private _mouseEvent: MouseEvent,\n    private _terminal: ITerminal\n  ) {\n    this._lines = this._terminal.buffer.lines;\n    this._startCol = this._terminal.buffer.x;\n    this._startRow = this._terminal.buffer.y;\n\n    const coordinates = this._terminal.mouseHelper.getCoords(\n      this._mouseEvent,\n      this._terminal.element,\n      this._terminal.charMeasure,\n      this._terminal.options.lineHeight,\n      this._terminal.cols,\n      this._terminal.rows,\n      false\n    );\n\n    if (coordinates) {\n      [this._endCol, this._endRow] = coordinates.map((coordinate: number) => {\n        return coordinate - 1;\n      });\n    }\n  }\n\n  /**\n   * Writes the escape sequences of arrows to the terminal\n   */\n  public move(): void {\n    if (this._mouseEvent.altKey && this._endCol !== undefined && this._endRow !== undefined) {\n      this._terminal.handler(this._arrowSequences());\n    }\n  }\n\n  /**\n   * Concatenates all the arrow sequences together.\n   * Resets the starting row to an unwrapped row, moves to the requested row,\n   * then moves to requested col.\n   */\n  private _arrowSequences(): string {\n    // The alt buffer should try to navigate between rows\n    if (!this._terminal.buffer.hasScrollback) {\n      return this._resetStartingRow() + this._moveToRequestedRow() + this._moveToRequestedCol();\n    }\n\n    // Only move horizontally for the normal buffer\n    return this._moveHorizontallyOnly();\n  }\n\n  /**\n   * If the initial position of the cursor is on a row that is wrapped, move the\n   * cursor up to the first row that is not wrapped to have accurate vertical\n   * positioning.\n   */\n  private _resetStartingRow(): string {\n    if (this._moveToRequestedRow().length === 0) {\n      return '';\n    }\n    return repeat(this._bufferLine(\n      this._startCol, this._startRow, this._startCol,\n      this._startRow - this._wrappedRowsForRow(this._startRow), false\n    ).length, this._sequence(Direction.LEFT));\n  }\n\n  /**\n   * Using the reset starting and ending row, move to the requested row,\n   * ignoring wrapped rows\n   */\n  private _moveToRequestedRow(): string {\n    const startRow = this._startRow - this._wrappedRowsForRow(this._startRow);\n    const endRow = this._endRow - this._wrappedRowsForRow(this._endRow);\n\n    const rowsToMove = Math.abs(startRow - endRow) - this._wrappedRowsCount();\n\n    return repeat(rowsToMove, this._sequence(this._verticalDirection()));\n  }\n\n  /**\n   * Move to the requested col on the ending row\n   */\n  private _moveToRequestedCol(): string {\n    let startRow;\n    if (this._moveToRequestedRow().length > 0) {\n      startRow = this._endRow - this._wrappedRowsForRow(this._endRow);\n    } else {\n      startRow = this._startRow;\n    }\n\n    const endRow = this._endRow;\n    const direction = this._horizontalDirection();\n\n    return repeat(this._bufferLine(\n      this._startCol, startRow, this._endCol, endRow,\n      direction === Direction.RIGHT\n    ).length, this._sequence(direction));\n  }\n\n  private _moveHorizontallyOnly(): string {\n    const direction = this._horizontalDirection();\n    return repeat(Math.abs(this._startCol - this._endCol), this._sequence(direction));\n  }\n\n  /**\n   * Utility functions\n   */\n\n  /**\n   * Calculates the number of wrapped rows between the unwrapped starting and\n   * ending rows. These rows need to ignored since the cursor skips over them.\n   */\n  private _wrappedRowsCount(): number {\n    let wrappedRows = 0;\n    const startRow = this._startRow - this._wrappedRowsForRow(this._startRow);\n    const endRow = this._endRow - this._wrappedRowsForRow(this._endRow);\n\n    for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n      const direction = this._verticalDirection() === Direction.UP ? -1 : 1;\n\n      if (this._lines.get(startRow + (direction * i)).isWrapped) {\n        wrappedRows++;\n      }\n    }\n\n    return wrappedRows;\n  }\n\n  /**\n   * Calculates the number of wrapped rows that make up a given row.\n   * @param currentRow The row to determine how many wrapped rows make it up\n   */\n  private _wrappedRowsForRow(currentRow: number): number {\n    let rowCount = 0;\n    let lineWraps = this._lines.get(currentRow).isWrapped;\n\n    while (lineWraps && currentRow >= 0 && currentRow < this._terminal.rows) {\n      rowCount++;\n      currentRow--;\n      lineWraps = this._lines.get(currentRow).isWrapped;\n    }\n\n    return rowCount;\n  }\n\n  /**\n   * Direction determiners\n   */\n\n  /**\n   * Determines if the right or left arrow is needed\n   */\n  private _horizontalDirection(): Direction {\n    let startRow;\n    if (this._moveToRequestedRow().length > 0) {\n      startRow = this._endRow - this._wrappedRowsForRow(this._endRow);\n    } else {\n      startRow = this._startRow;\n    }\n\n    if ((this._startCol < this._endCol &&\n      startRow <= this._endRow) || // down/right or same y/right\n      (this._startCol >= this._endCol &&\n      startRow < this._endRow)) {  // down/left or same y/left\n      return Direction.RIGHT;\n    }\n    return Direction.LEFT;\n  }\n\n  /**\n   * Determines if the up or down arrow is needed\n   */\n  private _verticalDirection(): Direction {\n    if (this._startRow > this._endRow) {\n      return Direction.UP;\n    }\n    return Direction.DOWN;\n  }\n\n  /**\n   * Constructs the string of chars in the buffer from a starting row and col\n   * to an ending row and col\n   * @param startCol The starting column position\n   * @param startRow The starting row position\n   * @param endCol The ending column position\n   * @param endRow The ending row position\n   * @param forward Direction to move\n   */\n  private _bufferLine(\n    startCol: number,\n    startRow: number,\n    endCol: number,\n    endRow: number,\n    forward: boolean\n  ): string {\n    let currentCol = startCol;\n    let currentRow = startRow;\n    let bufferStr = '';\n\n    while (currentCol !== endCol || currentRow !== endRow) {\n      currentCol += forward ? 1 : -1;\n\n      if (forward && currentCol > this._terminal.cols - 1) {\n        bufferStr += this._terminal.buffer.translateBufferLineToString(\n          currentRow, false, startCol, currentCol\n        );\n        currentCol = 0;\n        startCol = 0;\n        currentRow++;\n      } else if (!forward && currentCol < 0) {\n        bufferStr += this._terminal.buffer.translateBufferLineToString(\n          currentRow, false, 0, startCol + 1\n        );\n        currentCol = this._terminal.cols - 1;\n        startCol = currentCol;\n        currentRow--;\n      }\n    }\n\n    return bufferStr + this._terminal.buffer.translateBufferLineToString(\n      currentRow, false, startCol, currentCol\n    );\n  }\n\n  /**\n   * Constructs the escape sequence for clicking an arrow\n   * @param direction The direction to move\n   */\n  private _sequence(direction: Direction): string {\n    const mod = this._terminal.applicationCursor ? 'O' : '[';\n    return C0.ESC + mod + direction;\n  }\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal, ISelectionManager, IBuffer, CharData, IBufferLine } from './Types';\nimport { XtermListener } from './common/Types';\nimport { MouseHelper } from './utils/MouseHelper';\nimport * as Browser from './shared/utils/Browser';\nimport { CharMeasure } from './ui/CharMeasure';\nimport { EventEmitter } from './common/EventEmitter';\nimport { SelectionModel } from './SelectionModel';\nimport { CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX, CHAR_DATA_CODE_INDEX } from './Buffer';\nimport { AltClickHandler } from './handlers/AltClickHandler';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\n/**\n * A string containing all characters that are considered word separated by the\n * double click to select work logic.\n */\nconst WORD_SEPARATORS = ' ()[]{}\\'\"';\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionManager handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionManager but a 'refresh' event is fired when the\n * selection is ready to be redrawn.\n */\nexport class SelectionManager extends EventEmitter implements ISelectionManager {\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: NodeJS.Timer;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: XtermListener;\n\n  private _mouseDownTimeStamp: number;\n\n  constructor(\n    private _terminal: ITerminal,\n    private _charMeasure: CharMeasure\n  ) {\n    super();\n    this._initListeners();\n    this.enable();\n\n    this._model = new SelectionModel(_terminal);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._removeMouseDownListeners();\n  }\n\n  private get _buffer(): IBuffer {\n    return this._terminal.buffers.active;\n  }\n\n  /**\n   * Initializes listener variables.\n   */\n  private _initListeners(): void {\n    this._mouseMoveListener = event => this._onMouseMove(<MouseEvent>event);\n    this._mouseUpListener = event => this._onMouseUp(<MouseEvent>event);\n    this._trimListener = (amount: number) => this._onTrim(amount);\n\n    this.initBuffersListeners();\n  }\n\n  public initBuffersListeners(): void {\n    this._terminal.buffer.lines.on('trim', this._trimListener);\n    this._terminal.buffers.on('activate', e => this._onBufferActivate(e));\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = this._buffer.translateBufferLineToString(i, true, start[0], end[0]);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : null;\n      result.push(this._buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = this._buffer.lines.get(i);\n        const lineText = this._buffer.translateBufferLineToString(i, true);\n        if (bufferLine.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = this._buffer.lines.get(end[1]);\n        const lineText = this._buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isMSWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isNewSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isNewSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isNewSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this.emit('newselection', this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = null;\n    this.emit('refresh', {\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  public isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end) {\n      return false;\n    }\n\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] > start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  public selectWordAtCursor(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, false);\n      this._model.selectionEnd = null;\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._terminal.emit('selection');\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._terminal.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._terminal.cols, end];\n    this.refresh();\n    this._terminal.emit('selection');\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] {\n    const coords = this._terminal.mouseHelper.getCoords(event, this._terminal.screenElement, this._charMeasure, this._terminal.options.lineHeight, this._terminal.cols, this._terminal.rows, true);\n    if (!coords) {\n      return null;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._terminal.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = MouseHelper.getCoordsRelativeToElement(event, this._terminal.screenElement)[1];\n    const terminalHeight = this._terminal.rows * Math.ceil(this._charMeasure.height * this._terminal.options.lineHeight);\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._terminal.options.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    this._terminal.element.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n    this._terminal.element.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    this._dragScrollIntervalTimer = setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._terminal.element.ownerDocument) {\n      this._terminal.element.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._terminal.element.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = null;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = null;\n\n    // Ensure the line exists\n    const line = this._buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length >= this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    const char = line.get(this._model.selectionStart[0]);\n    if (char[CHAR_DATA_WIDTH_INDEX] === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current work.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.WORD;\n      this._selectWordAt(coords, true);\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._terminal.options.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propogation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._terminal.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._terminal.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    if (this._model.selectionEnd[1] < this._buffer.lines.length) {\n      const char = this._buffer.lines.get(this._model.selectionEnd[1]).get(this._model.selectionEnd[0]);\n      if (char && char[CHAR_DATA_WIDTH_INDEX] === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (this._dragScrollAmount) {\n      this._terminal.scrollLines(this._dragScrollAmount, false);\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._terminal.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(this._terminal.buffer.ydisp + this._terminal.rows, this._terminal.buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = this._terminal.buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME) {\n      (new AltClickHandler(event, this._terminal)).move();\n    } else if (this.hasSelection) {\n      this._terminal.emit('selection');\n    }\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    e.inactiveBuffer.lines.off('trim', this._trimListener);\n    e.activeBuffer.lines.on('trim', this._trimListener);\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const char = bufferLine.get(i);\n      if (char[CHAR_DATA_WIDTH_INDEX] === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (char[CHAR_DATA_CHAR_INDEX].length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += char[CHAR_DATA_CHAR_INDEX].length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._terminal.cols) {\n      return null;\n    }\n\n    const bufferLine = this._buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return null;\n    }\n\n    const line = this._buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.get(startCol)[CHAR_DATA_WIDTH_INDEX] === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.get(endCol)[CHAR_DATA_WIDTH_INDEX] === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      if (bufferLine.get(endCol)[CHAR_DATA_CHAR_INDEX].length > 1) {\n        rightLongCharOffset += bufferLine.get(endCol)[CHAR_DATA_CHAR_INDEX].length - 1;\n        endIndex += bufferLine.get(endCol)[CHAR_DATA_CHAR_INDEX].length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.get(startCol - 1))) {\n        const char = bufferLine.get(startCol - 1);\n        if (char[CHAR_DATA_WIDTH_INDEX] === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (char[CHAR_DATA_CHAR_INDEX].length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += char[CHAR_DATA_CHAR_INDEX].length - 1;\n          startIndex -= char[CHAR_DATA_CHAR_INDEX].length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.get(endCol + 1))) {\n        const char = bufferLine.get(endCol + 1);\n        if (char[CHAR_DATA_WIDTH_INDEX] === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (char[CHAR_DATA_CHAR_INDEX].length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += char[CHAR_DATA_CHAR_INDEX].length - 1;\n          endIndex += char[CHAR_DATA_CHAR_INDEX].length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._terminal.cols, // Disallow lengths larger than the terminal cols\n        endIndex // The index of the selection's end char in the line string\n        - startIndex // The index of the selection's start char in the line string\n        + leftWideCharCount // The number of wide chars left of the initial char\n        + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n        - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n        - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return null;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.get(0)[CHAR_DATA_CODE_INDEX] !== 32 /*' '*/) {\n        const previousBufferLine = this._buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.get(this._terminal.cols - 1)[CHAR_DATA_CODE_INDEX] !== 32 /*' '*/) {\n          const previousLineWordPosition = this._getWordAt([this._terminal.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._terminal.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._terminal.cols && bufferLine.get(this._terminal.cols - 1)[CHAR_DATA_CODE_INDEX] !== 32 /*' '*/) {\n        const nextBufferLine = this._buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine && nextBufferLine.isWrapped && nextBufferLine.get(0)[CHAR_DATA_CODE_INDEX] !== 32 /*' '*/) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._terminal.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._terminal.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._terminal.cols) {\n          wordPosition.length -= this._terminal.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(charData: CharData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (charData[CHAR_DATA_WIDTH_INDEX] === 0) {\n      return false;\n    }\n    return WORD_SEPARATORS.indexOf(charData[CHAR_DATA_CHAR_INDEX]) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._buffer.getWrappedRangeForLine(line);\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = [this._terminal.cols, wrappedRange.last];\n    this._model.selectionStartLength = 0;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharMeasure, ITerminalOptions } from '../Types';\nimport { EventEmitter } from '../common/EventEmitter';\n\n/**\n * Utility class that measures the size of a character. Measurements are done in\n * the DOM rather than with a canvas context because support for extracting the\n * height of characters is patchy across browsers.\n */\nexport class CharMeasure extends EventEmitter implements ICharMeasure {\n  private _document: Document;\n  private _parentElement: HTMLElement;\n  private _measureElement: HTMLElement;\n  private _width: number;\n  private _height: number;\n\n  constructor(document: Document, parentElement: HTMLElement) {\n    super();\n    this._document = document;\n    this._parentElement = parentElement;\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public get width(): number {\n    return this._width;\n  }\n\n  public get height(): number {\n    return this._height;\n  }\n\n  public measure(options: ITerminalOptions): void {\n  this._measureElement.style.fontFamily = options.fontFamily;\n    this._measureElement.style.fontSize = `${options.fontSize}px`;\n    const geometry = this._measureElement.getBoundingClientRect();\n    // The element is likely currently display:none, we should retain the\n    // previous value.\n    if (geometry.width === 0 || geometry.height === 0) {\n      return;\n    }\n    if (this._width !== geometry.width || this._height !== geometry.height) {\n      this._width = geometry.width;\n      this._height = Math.ceil(geometry.height);\n      this.emit('charsizechanged');\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport let blankLine = 'Blank line';\nexport let promptLabel = 'Terminal input';\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport const clone = <T>(val: T, depth: number = 5): T => {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // cloning null always returns null\n  if (val === null) {\n    return null;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : clone(val[key], depth - 1);\n  }\n\n  return clonedObject as T;\n};\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal, ISoundManager } from './Types';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/wav;base64,UklGRigBAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YQQBAADpAFgCwAMlBZoG/wdmCcoKRAypDQ8PbRDBEQQTOxRtFYcWlBePGIUZXhoiG88bcBz7HHIdzh0WHlMeZx51HmkeUx4WHs8dah0AHXwc3hs9G4saxRnyGBIYGBcQFv8U4RPAEoYRQBACD70NWwwHC6gJOwjWBloF7gOBAhABkf8b/qv8R/ve+Xf4Ife79W/0JfPZ8Z/wde9N7ijtE+wU6xvqM+lb6H7nw+YX5mrlxuQz5Mzje+Ma49fioeKD4nXiYeJy4pHitOL04j/jn+MN5IPkFOWs5U3mDefM55/ogOl36m7rdOyE7abuyu8D8Unyj/Pg9D/2qfcb+Yn6/vuK/Qj/lAAlAg==';\n\nexport class SoundManager implements ISoundManager {\n  private _audioContext: AudioContext;\n\n  constructor(\n    private _terminal: ITerminal\n  ) {\n  }\n\n  public playBellSound(): void {\n    const audioContextCtor: typeof AudioContext = (<any>window).AudioContext || (<any>window).webkitAudioContext;\n    if (!this._audioContext && audioContextCtor) {\n      this._audioContext = new audioContextCtor();\n    }\n\n    if (this._audioContext) {\n      const bellAudioSource = this._audioContext.createBufferSource();\n      const context = this._audioContext;\n      this._audioContext.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._terminal.options.bellSound)), (buffer) => {\n        bellAudioSource.buffer = buffer;\n        bellAudioSource.connect(context.destination);\n        bellAudioSource.start(0);\n      });\n    } else {\n      console.warn('Sorry, but the Web Audio API is not supported by your browser. Please, consider upgrading to the latest version');\n    }\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from './Strings';\nimport { ITerminal, IBuffer } from './Types';\nimport { isMac } from './shared/utils/Browser';\nimport { RenderDebouncer } from './ui/RenderDebouncer';\nimport { addDisposableDomListener } from './ui/Lifecycle';\nimport { Disposable } from './common/Lifecycle';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: RenderDebouncer;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  constructor(private _terminal: ITerminal) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new RenderDebouncer(this._terminal, this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.addDisposableListener('resize', data => this._onResize(data.rows)));\n    this.register(this._terminal.addDisposableListener('refresh', data => this._refreshRows(data.start, data.end)));\n    this.register(this._terminal.addDisposableListener('scroll', data => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.addDisposableListener('a11y.char', (char) => this._onChar(char)));\n    this.register(this._terminal.addDisposableListener('linefeed', () => this._onChar('\\n')));\n    this.register(this._terminal.addDisposableListener('a11y.tab', spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.addDisposableListener('key', keyChar => this._onKey(keyChar)));\n    this.register(this._terminal.addDisposableListener('blur', () => this._clearLiveRegion()));\n    // TODO: Maybe renderer should fire an event on terminal when the characters change and that\n    //       should be listened to instead? That would mean that the order of events are always\n    //       guarenteed\n    this.register(this._terminal.addDisposableListener('dprchange', () => this._refreshRowsDimensions()));\n    this.register(this._terminal.renderer.addDisposableListener('resize', () => this._refreshRowsDimensions()));\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the dprchange event isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._terminal.element.removeChild(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = <HTMLElement>e.target;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._announceCharacter(char);\n        }\n      } else {\n        this._announceCharacter(char);\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      if (this._liveRegion.parentNode) {\n        this._accessibilityTreeRoot.removeChild(this._liveRegion);\n      }\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      element.textContent = lineData.length === 0 ? Strings.blankLine : lineData;\n      element.setAttribute('aria-posinset', posInSet);\n      element.setAttribute('aria-setsize', setSize);\n    }\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._terminal.renderer.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._terminal.renderer.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacter(char: string): void {\n    if (char === ' ') {\n      // Always use nbsp for spaces in order to preserve the space between characters in\n      // voiceover's caption window\n      this._liveRegion.innerHTML += '&nbsp;';\n    } else {\n      this._liveRegion.textContent += char;\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_ATTR_INDEX, CHAR_DATA_WIDTH_INDEX } from '../../Buffer';\nimport { FLAGS } from '../Types';\nimport { IBufferLine } from '../../Types';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  constructor(\n    private _document: Document\n  ) {\n  }\n\n  public createRow(lineData: IBufferLine, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n    let colCount = 0;\n\n    for (let x = 0; x < lineData.length; x++) {\n      // Don't allow any buffer to the right to be displayed\n      if (colCount >= cols) {\n        continue;\n      }\n\n      const charData = lineData.get(x);\n      const char: string = charData[CHAR_DATA_CHAR_INDEX];\n      const attr: number = charData[CHAR_DATA_ATTR_INDEX];\n      const width: number = charData[CHAR_DATA_WIDTH_INDEX];\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      const flags = attr >> 18;\n      let bg = attr & 0x1ff;\n      let fg = (attr >> 9) & 0x1ff;\n\n      if (isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      // If inverse flag is on, the foreground should become the background.\n      if (flags & FLAGS.INVERSE) {\n        const temp = bg;\n        bg = fg;\n        fg = temp;\n        if (fg === 256) {\n          fg = 0;\n        }\n        if (bg === 257) {\n          bg = 15;\n        }\n      }\n\n      if (flags & FLAGS.BOLD) {\n        // Convert the FG color to the bold variant\n        if (fg < 8) {\n          fg += 8;\n        }\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (flags & FLAGS.ITALIC) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      charElement.textContent = char;\n      if (fg !== 257) {\n        charElement.classList.add(`xterm-fg-${fg}`);\n      }\n      if (bg !== 256) {\n        charElement.classList.add(`xterm-bg-${bg}`);\n      }\n      fragment.appendChild(charElement);\n      colCount += width;\n    }\n    return fragment;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, IColorSet } from '../Types';\nimport { ILinkHoverEvent, ITerminal, CharacterJoinerHandler, LinkHoverEventTypes } from '../../Types';\nimport { ITheme } from 'xterm';\nimport { EventEmitter } from '../../common/EventEmitter';\nimport { ColorManager } from '../ColorManager';\nimport { RenderDebouncer } from '../../ui/RenderDebouncer';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from './DomRendererRowFactory';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n// TODO: Pull into an addon when TS composite projects allow easier sharing of code (not just\n// interfaces) between core and addons\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends EventEmitter implements IRenderer {\n  private _renderDebouncer: RenderDebouncer;\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement: HTMLStyleElement;\n  private _dimensionsStyleElement: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n  public colorManager: ColorManager;\n\n  constructor(private _terminal: ITerminal, theme: ITheme | undefined) {\n    super();\n    const allowTransparency = this._terminal.options.allowTransparency;\n    this.colorManager = new ColorManager(document, allowTransparency);\n    this.setTheme(theme);\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._terminal.cols, this._terminal.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: null,\n      scaledCharHeight: null,\n      scaledCellWidth: null,\n      scaledCellHeight: null,\n      scaledCharLeft: null,\n      scaledCharTop: null,\n      scaledCanvasWidth: null,\n      scaledCanvasHeight: null,\n      canvasWidth: null,\n      canvasHeight: null,\n      actualCellWidth: null,\n      actualCellHeight: null\n    };\n    this._updateDimensions();\n\n    this._renderDebouncer = new RenderDebouncer(this._terminal, this._renderRows.bind(this));\n    this._rowFactory = new DomRendererRowFactory(document);\n\n    this._terminal.element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._terminal.screenElement.appendChild(this._rowContainer);\n    this._terminal.screenElement.appendChild(this._selectionContainer);\n\n    this._terminal.linkifier.on(LinkHoverEventTypes.HOVER, (e: ILinkHoverEvent) => this._onLinkHover(e));\n    this._terminal.linkifier.on(LinkHoverEventTypes.LEAVE, (e: ILinkHoverEvent) => this._onLinkLeave(e));\n  }\n\n  public dispose(): void {\n    this._terminal.element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._terminal.screenElement.removeChild(this._rowContainer);\n    this._terminal.screenElement.removeChild(this._selectionContainer);\n    this._terminal.screenElement.removeChild(this._themeStyleElement);\n    this._terminal.screenElement.removeChild(this._dimensionsStyleElement);\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._terminal.charMeasure.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = this._terminal.charMeasure.height * window.devicePixelRatio;\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth;\n    this.dimensions.scaledCellHeight = this.dimensions.scaledCharHeight;\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._terminal.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._terminal.rows;\n    this.dimensions.canvasWidth = this._terminal.charMeasure.width * this._terminal.cols;\n    this.dimensions.canvasHeight = this._terminal.charMeasure.height * this._terminal.rows;\n    this.dimensions.actualCellWidth = this._terminal.charMeasure.width;\n    this.dimensions.actualCellHeight = this._terminal.charMeasure.height;\n\n    this._rowElements.forEach(element => {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this._terminal.charMeasure.height}px`;\n    });\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._terminal.screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n        ` display: inline-block;` +\n        ` height: 100%;` +\n        ` vertical-align: top;` +\n        ` width: ${this._terminal.charMeasure.width}px` +\n        `}`;\n\n    this._dimensionsStyleElement.innerHTML = styles;\n\n    this._selectionContainer.style.height = (<any>this._terminal)._viewportElement.style.height;\n    this._rowContainer.style.width = `${this.dimensions.canvasWidth}px`;\n    this._rowContainer.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setTheme(theme: ITheme | undefined): IColorSet {\n    if (theme) {\n      this.colorManager.setTheme(theme);\n    }\n\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._terminal.screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n        ` color: ${this.colorManager.colors.foreground.css};` +\n        ` background-color: ${this.colorManager.colors.background.css};` +\n        ` font-family: ${this._terminal.getOption('fontFamily')};` +\n        ` font-size: ${this._terminal.getOption('fontSize')}px;` +\n        `}`;\n    // Text styles\n    styles +=\n        `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n        ` font-weight: ${this._terminal.options.fontWeight};` +\n        `}` +\n        `${this._terminalSelector} span.${BOLD_CLASS} {` +\n        ` font-weight: ${this._terminal.options.fontWeightBold};` +\n        `}` +\n        `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n        ` font-style: italic;` +\n        `}`;\n    // Cursor\n    styles +=\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS} {` +\n        ` outline: 1px solid ${this.colorManager.colors.cursor.css};` +\n        ` outline-offset: -1px;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n        ` background-color: ${this.colorManager.colors.cursor.css};` +\n        ` color: ${this.colorManager.colors.cursorAccent.css};` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n        ` box-shadow: 1px 0 0 ${this.colorManager.colors.cursor.css} inset;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n        ` box-shadow: 0 -1px 0 ${this.colorManager.colors.cursor.css} inset;` +\n        `}`;\n    // Selection\n    styles +=\n        `${this._terminalSelector} .${SELECTION_CLASS} {` +\n        ` position: absolute;` +\n        ` top: 0;` +\n        ` left: 0;` +\n        ` z-index: 1;` +\n        ` pointer-events: none;` +\n        `}` +\n        `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n        ` position: absolute;` +\n        ` background-color: ${this.colorManager.colors.selection.css};` +\n        `}`;\n    // Colors\n    this.colorManager.colors.ansi.forEach((c, i) => {\n      styles +=\n          `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n          `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n\n    this._themeStyleElement.innerHTML = styles;\n    return this.colorManager.colors;\n  }\n\n  public onWindowResize(devicePixelRatio: number): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop());\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._terminal.buffer.ydisp;\n    const viewportEndRow = end[1] - this._terminal.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._terminal.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._terminal.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, start[0], end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : this._terminal.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._terminal.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._terminal.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this._terminal.charMeasure.height}px`;\n    element.style.top = `${row * this._terminal.charMeasure.height}px`;\n    element.style.left = `${colStart * this._terminal.charMeasure.width}px`;\n    element.style.width = `${this._terminal.charMeasure.width * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this.setTheme(undefined);\n    this._terminal.refresh(0, this._terminal.rows - 1);\n  }\n\n  public clear(): void {\n    this._rowElements.forEach(e => e.innerHTML = '');\n  }\n\n  public refreshRows(start: number, end: number): void {\n    this._renderDebouncer.refresh(start, end);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const terminal = this._terminal;\n\n    const cursorAbsoluteY = terminal.buffer.ybase + terminal.buffer.y;\n    const cursorX = this._terminal.buffer.x;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerHTML = '';\n\n      const row = y + terminal.buffer.ydisp;\n      const lineData = terminal.buffer.lines.get(row);\n      const cursorStyle = terminal.options.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData, row === cursorAbsoluteY, cursorStyle, cursorX, terminal.charMeasure.width, terminal.cols));\n    }\n\n    this._terminal.emit('refresh', {start, end});\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number { return -1; }\n  public deregisterCharacterJoiner(joinerId: number): boolean { return false; }\n\n  private _onLinkHover(e: ILinkHoverEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkHoverEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const span = <HTMLElement>this._rowElements[y].children[x];\n      span.style.textDecoration = enabled ? 'underline' : 'none';\n      x = (x + 1) % cols;\n      if (x === 0) {\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const enum KeyboardResultType {\n  SEND_KEY,\n  SELECT_ALL,\n  PAGE_UP,\n  PAGE_DOWN\n}\n\nexport interface IKeyboardResult {\n  type: KeyboardResultType;\n  cancel: boolean;\n  key: string | undefined;\n}\n\nexport interface ICharset {\n  [key: string]: string;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent } from '../../common/Types';\nimport { IKeyboardResult, KeyboardResultType } from '../Types';\nimport { C0 } from '../../common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propogation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = isMac ? C0.ESC + 'b' : C0.ESC + '[1;5D';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = isMac ? C0.ESC + 'f' : C0.ESC + '[1;5C';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        if (result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        if (result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          // NUL\n          result.key = String.fromCharCode(0);\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          // delete\n          result.key = String.fromCharCode(127);\n        } else if (ev.keyCode === 219) {\n          // ^[ - Control Sequence Introducer (CSI)\n          result.key = String.fromCharCode(27);\n        } else if (ev.keyCode === 220) {\n          // ^\\ - String Terminator (ST)\n          result.key = String.fromCharCode(28);\n        } else if (ev.keyCode === 221) {\n          // ^] - Operating System Command (OSC)\n          result.key = String.fromCharCode(29);\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping && keyMapping[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          result.key = C0.ESC + String.fromCharCode(keyCode);\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { IInputHandlingTerminal, IViewport, ICompositionHelper, ITerminalOptions, ITerminal, IBrowser, ILinkifier, ILinkMatcherOptions, CustomKeyEventHandler, LinkMatcherHandler, CharData, CharacterJoinerHandler } from './Types';\nimport { IMouseZoneManager } from './ui/Types';\nimport { IRenderer } from './renderer/Types';\nimport { BufferSet } from './BufferSet';\nimport { Buffer, MAX_BUFFER_SIZE, DEFAULT_ATTR, NULL_CELL_CODE, NULL_CELL_WIDTH, NULL_CELL_CHAR } from './Buffer';\nimport { CompositionHelper } from './CompositionHelper';\nimport { EventEmitter } from './common/EventEmitter';\nimport { Viewport } from './Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, pasteHandler, copyHandler } from './handlers/Clipboard';\nimport { C0 } from './common/data/EscapeSequences';\nimport { InputHandler } from './InputHandler';\nimport { Renderer } from './renderer/Renderer';\nimport { Linkifier } from './Linkifier';\nimport { SelectionManager } from './SelectionManager';\nimport { CharMeasure } from './ui/CharMeasure';\nimport * as Browser from './shared/utils/Browser';\nimport { addDisposableDomListener } from './ui/Lifecycle';\nimport * as Strings from './Strings';\nimport { MouseHelper } from './utils/MouseHelper';\nimport { clone } from './utils/Clone';\nimport { DEFAULT_BELL_SOUND, SoundManager } from './SoundManager';\nimport { DEFAULT_ANSI_COLORS } from './renderer/ColorManager';\nimport { MouseZoneManager } from './ui/MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ScreenDprMonitor } from './ui/ScreenDprMonitor';\nimport { ITheme, IMarker, IDisposable } from 'xterm';\nimport { removeTerminalFromCache } from './renderer/atlas/CharAtlasCache';\nimport { DomRenderer } from './renderer/dom/DomRenderer';\nimport { IKeyboardEvent } from './common/Types';\nimport { evaluateKeyboardEvent } from './core/input/Keyboard';\nimport { KeyboardResultType, ICharset } from './core/Types';\nimport { BufferLine } from './BufferLine';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document = (typeof window !== 'undefined') ? window.document : null;\n\n/**\n * The amount of write requests to queue before sending an XOFF signal to the\n * pty process. This number must be small in order for ^C and similar sequences\n * to be responsive.\n */\nconst WRITE_BUFFER_PAUSE_THRESHOLD = 5;\n\n/**\n * The number of writes to perform in a single batch before allowing the\n * renderer to catch up with a 0ms setTimeout.\n */\nconst WRITE_BATCH_SIZE = 300;\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nconst DEFAULT_OPTIONS: ITerminalOptions = {\n  cols: 80,\n  rows: 24,\n  convertEol: false,\n  termName: 'xterm',\n  cursorBlink: false,\n  cursorStyle: 'block',\n  bellSound: DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  enableBold: true,\n  experimentalCharAtlas: 'static',\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  scrollback: 1000,\n  screenKeys: false,\n  screenReaderMode: false,\n  debug: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  cancelEvents: false,\n  disableStdin: false,\n  useFlowControl: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: null,\n  rightClickSelectsWord: Browser.isMac,\n  rendererType: 'canvas'\n};\n\nexport class Terminal extends EventEmitter implements ITerminal, IDisposable, IInputHandlingTerminal {\n  public textarea: HTMLTextAreaElement;\n  public element: HTMLElement;\n  public screenElement: HTMLElement;\n\n  /**\n   * The HTMLElement that the terminal is created in, set by Terminal.open.\n   */\n  private _parent: HTMLElement;\n  private _context: Window;\n  private _document: Document;\n  private _viewportScrollArea: HTMLElement;\n  private _viewportElement: HTMLElement;\n  private _helperContainer: HTMLElement;\n  private _compositionView: HTMLElement;\n\n  private _visualBellTimer: number;\n\n  public browser: IBrowser = <any>Browser;\n\n  public options: ITerminalOptions;\n\n  // TODO: This can be changed to an enum or boolean, 0 and 1 seem to be the only options\n  public cursorState: number;\n  public cursorHidden: boolean;\n\n  private _customKeyEventHandler: CustomKeyEventHandler;\n\n  // modes\n  public applicationKeypad: boolean;\n  public applicationCursor: boolean;\n  public originMode: boolean;\n  public insertMode: boolean;\n  public wraparoundMode: boolean; // defaults: xterm - true, vt100 - false\n  public bracketedPasteMode: boolean;\n\n  // charset\n  // The current charset\n  public charset: ICharset;\n  public gcharset: number;\n  public glevel: number;\n  public charsets: ICharset[];\n\n  // mouse properties\n  private _decLocator: boolean; // This is unstable and never set\n  public x10Mouse: boolean;\n  public vt200Mouse: boolean;\n  private _vt300Mouse: boolean; // This is unstable and never set\n  public normalMouse: boolean;\n  public mouseEvents: boolean;\n  public sendFocus: boolean;\n  public utfMouse: boolean;\n  public sgrMouse: boolean;\n  public urxvtMouse: boolean;\n\n  // misc\n  private _refreshStart: number;\n  private _refreshEnd: number;\n  public savedCols: number;\n\n  public curAttr: number;\n  public savedCurAttr: number;\n\n  public params: (string | number)[];\n  public currentParam: string | number;\n\n  // user input states\n  public writeBuffer: string[];\n  private _writeInProgress: boolean;\n\n  /**\n   * Whether _xterm.js_ sent XOFF in order to catch up with the pty process.\n   * This is a distinct state from writeStopped so that if the user requested\n   * XOFF via ^S that it will not automatically resume when the writeBuffer goes\n   * below threshold.\n   */\n  private _xoffSentToCatchUp: boolean;\n\n  /** Whether writing has been stopped as a result of XOFF */\n  // private _writeStopped: boolean;\n\n  // Store if user went browsing history in scrollback\n  private _userScrolling: boolean;\n\n  private _inputHandler: InputHandler;\n  public soundManager: SoundManager;\n  public renderer: IRenderer;\n  public selectionManager: SelectionManager;\n  public linkifier: ILinkifier;\n  public buffers: BufferSet;\n  public viewport: IViewport;\n  private _compositionHelper: ICompositionHelper;\n  public charMeasure: CharMeasure;\n  private _mouseZoneManager: IMouseZoneManager;\n  public mouseHelper: MouseHelper;\n  private _accessibilityManager: AccessibilityManager;\n  private _screenDprMonitor: ScreenDprMonitor;\n  private _theme: ITheme;\n\n  public cols: number;\n  public rows: number;\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: ITerminalOptions = {}\n  ) {\n    super();\n    this.options = clone(options);\n    this._setup();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._customKeyEventHandler = null;\n    removeTerminalFromCache(this);\n    this.handler = () => {};\n    this.write = () => {};\n    if (this.element && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n  }\n\n  /**\n   * @deprecated Use dispose instead.\n   */\n  public destroy(): void {\n    this.dispose();\n  }\n\n  private _setup(): void {\n    Object.keys(DEFAULT_OPTIONS).forEach((key) => {\n      if (this.options[key] === null || this.options[key] === undefined) {\n        this.options[key] = DEFAULT_OPTIONS[key];\n      }\n    });\n\n    // this.context = options.context || window;\n    // this.document = options.document || document;\n    // TODO: WHy not document.body?\n    this._parent = document ? document.body : null;\n\n    this.cols = this.options.cols;\n    this.rows = this.options.rows;\n\n    if (this.options.handler) {\n      this.on('data', this.options.handler);\n    }\n\n    this.cursorState = 0;\n    this.cursorHidden = false;\n    this._customKeyEventHandler = null;\n\n    // modes\n    this.applicationKeypad = false;\n    this.applicationCursor = false;\n    this.originMode = false;\n    this.insertMode = false;\n    this.wraparoundMode = true; // defaults: xterm - true, vt100 - false\n    this.bracketedPasteMode = false;\n\n    // charset\n    this.charset = null;\n    this.gcharset = null;\n    this.glevel = 0;\n    // TODO: Can this be just []?\n    this.charsets = [null];\n\n    this.curAttr = DEFAULT_ATTR;\n\n    this.params = [];\n    this.currentParam = 0;\n\n    // user input states\n    this.writeBuffer = [];\n    this._writeInProgress = false;\n\n    this._xoffSentToCatchUp = false;\n    // this._writeStopped = false;\n    this._userScrolling = false;\n\n    this._inputHandler = new InputHandler(this);\n    this.register(this._inputHandler);\n    // Reuse renderer if the Terminal is being recreated via a reset call.\n    this.renderer = this.renderer || null;\n    this.selectionManager = this.selectionManager || null;\n    this.linkifier = this.linkifier || new Linkifier(this);\n    this._mouseZoneManager = this._mouseZoneManager || null;\n    this.soundManager = this.soundManager || new SoundManager(this);\n\n    // Create the terminal's buffers and set the current buffer\n    this.buffers = new BufferSet(this);\n    if (this.selectionManager) {\n      this.selectionManager.clearSelection();\n      this.selectionManager.initBuffersListeners();\n    }\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): Buffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  public eraseAttr(): number {\n    // if (this.is('screen')) return DEFAULT_ATTR;\n    return (DEFAULT_ATTR & ~0x1ff) | (this.curAttr & 0x1ff);\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus();\n    }\n  }\n\n  public get isFocused(): boolean {\n    return document.activeElement === this.textarea;\n  }\n\n  /**\n   * Retrieves an option's value from the terminal.\n   * @param key The option key.\n   */\n  public getOption(key: string): any {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error('No option with key \"' + key + '\"');\n    }\n\n    return this.options[key];\n  }\n\n  /**\n   * Sets an option on the terminal.\n   * @param key The option key.\n   * @param value The option value.\n   */\n  public setOption(key: string, value: any): void {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error('No option with key \"' + key + '\"');\n    }\n    if (CONSTRUCTOR_ONLY_OPTIONS.indexOf(key) !== -1) {\n      console.error(`Option \"${key}\" can only be set in the constructor`);\n    }\n    if (this.options[key] === value) {\n      return;\n    }\n    switch (key) {\n      case 'bellStyle':\n        if (!value) {\n          value = 'none';\n        }\n        break;\n      case 'cursorStyle':\n        if (!value) {\n          value = 'block';\n        }\n        break;\n      case 'fontWeight':\n        if (!value) {\n          value = 'normal';\n        }\n        break;\n      case 'fontWeightBold':\n        if (!value) {\n          value = 'bold';\n        }\n        break;\n      case 'lineHeight':\n        if (value < 1) {\n          console.warn(`${key} cannot be less than 1, value: ${value}`);\n          return;\n        }\n      case 'rendererType':\n        if (!value) {\n          value = 'canvas';\n        }\n        break;\n      case 'tabStopWidth':\n        if (value < 1) {\n          console.warn(`${key} cannot be less than 1, value: ${value}`);\n          return;\n        }\n        break;\n      case 'theme':\n        // If open has been called we do not want to set options.theme as the\n        // source of truth is owned by the renderer.\n        if (this.renderer) {\n          this._setTheme(<ITheme>value);\n          return;\n        }\n        break;\n      case 'scrollback':\n        value = Math.min(value, MAX_BUFFER_SIZE);\n\n        if (value < 0) {\n          console.warn(`${key} cannot be less than 0, value: ${value}`);\n          return;\n        }\n        if (this.options[key] !== value) {\n          const newBufferLength = this.rows + value;\n          if (this.buffer.lines.length > newBufferLength) {\n            const amountToTrim = this.buffer.lines.length - newBufferLength;\n            const needsRefresh = (this.buffer.ydisp - amountToTrim < 0);\n            this.buffer.lines.trimStart(amountToTrim);\n            this.buffer.ybase = Math.max(this.buffer.ybase - amountToTrim, 0);\n            this.buffer.ydisp = Math.max(this.buffer.ydisp - amountToTrim, 0);\n            if (needsRefresh) {\n              this.refresh(0, this.rows - 1);\n            }\n          }\n        }\n        break;\n    }\n    this.options[key] = value;\n    switch (key) {\n      case 'fontFamily':\n      case 'fontSize':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        if (this.renderer) {\n          this.renderer.clear();\n          this.charMeasure.measure(this.options);\n        }\n        break;\n      case 'drawBoldTextInBrightColors':\n      case 'experimentalCharAtlas':\n      case 'enableBold':\n      case 'letterSpacing':\n      case 'lineHeight':\n      case 'fontWeight':\n      case 'fontWeightBold':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        if (this.renderer) {\n          this.renderer.clear();\n          this.renderer.onResize(this.cols, this.rows);\n          this.refresh(0, this.rows - 1);\n        }\n      case 'rendererType':\n        if (this.renderer) {\n          this.unregister(this.renderer);\n          this.renderer.dispose();\n          this.renderer = null;\n        }\n        this._setupRenderer();\n        this.renderer.onCharSizeChanged();\n        if (this._theme) {\n          this.renderer.setTheme(this._theme);\n        }\n        break;\n      case 'scrollback':\n        this.buffers.resize(this.cols, this.rows);\n        if (this.viewport) {\n          this.viewport.syncScrollArea();\n        }\n        break;\n      case 'screenReaderMode':\n        if (value) {\n          if (!this._accessibilityManager) {\n            this._accessibilityManager = new AccessibilityManager(this);\n          }\n        } else {\n          if (this._accessibilityManager) {\n            this._accessibilityManager.dispose();\n            this._accessibilityManager = null;\n          }\n        }\n        break;\n      case 'tabStopWidth': this.buffers.setupTabStops(); break;\n    }\n    // Inform renderer of changes\n    if (this.renderer) {\n      this.renderer.onOptionsChanged();\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.sendFocus) {\n      this.handler(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element.classList.add('focus');\n    this.showCursor();\n    this.emit('focus');\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.sendFocus) {\n      this.handler(C0.ESC + '[O');\n    }\n    this.element.classList.remove('focus');\n    this.emit('blur');\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this, this.selectionManager);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent) => pasteHandler(event, this);\n    this.register(addDisposableDomListener(this.textarea, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea, this.selectionManager, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea, this.selectionManager, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    const self = this;\n    this.register(addDisposableDomListener(this.element, 'keydown', function (ev: KeyboardEvent): void {\n      if (document.activeElement !== this) {\n        return;\n      }\n      self._keyDown(ev);\n    }, true));\n\n    this.register(addDisposableDomListener(this.element, 'keypress', function (ev: KeyboardEvent): void {\n      if (document.activeElement !== this) {\n        return;\n      }\n      self._keyPress(ev);\n    }, true));\n\n    this.register(addDisposableDomListener(this.element, 'keyup', (ev: KeyboardEvent) => {\n      if (!wasModifierKeyOnlyEvent(ev)) {\n        this.focus();\n      }\n\n      self._keyUp(ev);\n    }, true));\n\n    this.register(addDisposableDomListener(this.textarea, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'compositionstart', () => this._compositionHelper.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea, 'compositionend', () => this._compositionHelper.compositionend()));\n    this.register(this.addDisposableListener('refresh', () => this._compositionHelper.updateCompositionElements()));\n    this.register(this.addDisposableListener('refresh', (data) => this._queueLinkification(data.start, data.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    this._parent = parent || this._parent;\n\n    if (!this._parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    // Grab global elements\n    this._context = this._parent.ownerDocument.defaultView;\n    this._document = this._parent.ownerDocument;\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.emit('dprchange', window.devicePixelRatio));\n    this.register(this._screenDprMonitor);\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    this._parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this._mouseZoneManager = new MouseZoneManager(this);\n    this.register(this._mouseZoneManager);\n    this.register(this.addDisposableListener('scroll', () => this._mouseZoneManager.clearAll()));\n    this.linkifier.attachToDom(this._mouseZoneManager);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    // TODO: New API to set title? This could say \"Terminal bash input\", etc.\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = new CompositionHelper(this.textarea, this._compositionView, this);\n    this._helperContainer.appendChild(this._compositionView);\n\n    this.charMeasure = new CharMeasure(document, this._helperContainer);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._setupRenderer();\n    this._theme = this.options.theme;\n    this.options.theme = null;\n    this.viewport = new Viewport(this, this._viewportElement, this._viewportScrollArea, this.charMeasure);\n    this.viewport.onThemeChanged(this.renderer.colorManager.colors);\n    this.register(this.viewport);\n\n    this.register(this.addDisposableListener('cursormove', () => this.renderer.onCursorMove()));\n    this.register(this.addDisposableListener('resize', () => this.renderer.onResize(this.cols, this.rows)));\n    this.register(this.addDisposableListener('blur', () => this.renderer.onBlur()));\n    this.register(this.addDisposableListener('focus', () => this.renderer.onFocus()));\n    this.register(this.addDisposableListener('dprchange', () => this.renderer.onWindowResize(window.devicePixelRatio)));\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.renderer.onWindowResize(window.devicePixelRatio)));\n    this.register(this.charMeasure.addDisposableListener('charsizechanged', () => this.renderer.onCharSizeChanged()));\n    this.register(this.renderer.addDisposableListener('resize', (dimensions) => this.viewport.syncScrollArea()));\n\n    this.selectionManager = new SelectionManager(this, this.charMeasure);\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this.selectionManager.onMouseDown(e)));\n    this.register(this.selectionManager.addDisposableListener('refresh', data => this.renderer.onSelectionChanged(data.start, data.end, data.columnSelectMode)));\n    this.register(this.selectionManager.addDisposableListener('newselection', text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea.value = text;\n      this.textarea.focus();\n      this.textarea.select();\n    }));\n    this.register(this.addDisposableListener('scroll', () => {\n      this.viewport.syncScrollArea();\n      this.selectionManager.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this.selectionManager.refresh()));\n\n    this.mouseHelper = new MouseHelper(this.renderer);\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this);\n    }\n\n    // Measure the character size\n    this.charMeasure.measure(this.options);\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n\n  }\n\n  private _setupRenderer(): void {\n    switch (this.options.rendererType) {\n      case 'canvas': this.renderer = new Renderer(this, this.options.theme); break;\n      case 'dom': this.renderer = new DomRenderer(this, this.options.theme); break;\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n    this.register(this.renderer);\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    const colors = this.renderer.setTheme(theme);\n    if (this.viewport) {\n      this.viewport.onThemeChanged(colors);\n    }\n  }\n\n  /**\n   * XTerm mouse events\n   * http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#Mouse%20Tracking\n   * To better understand these\n   * the xterm code is very helpful:\n   * Relevant files:\n   *   button.c, charproc.c, misc.c\n   * Relevant functions in xterm/button.c:\n   *   BtnCode, EmitButtonCode, EditorButton, SendMousePosition\n   */\n  public bindMouse(): void {\n    const el = this.element;\n    const self = this;\n    let pressed = 32;\n\n    // mouseup, mousedown, wheel\n    // left click: ^[[M 3<^[[M#3<\n    // wheel up: ^[[M`3>\n    function sendButton(ev: MouseEvent | WheelEvent): void {\n      let button;\n      let pos;\n\n      // get the xterm-style button\n      button = getButton(ev);\n\n      // get mouse coordinates\n      pos = self.mouseHelper.getRawByteCoords(ev, self.screenElement, self.charMeasure, self.options.lineHeight, self.cols, self.rows);\n      if (!pos) return;\n\n      sendEvent(button, pos);\n\n      switch ((<any>ev).overrideType || ev.type) {\n        case 'mousedown':\n          pressed = button;\n          break;\n        case 'mouseup':\n          // keep it at the left\n          // button, just in case.\n          pressed = 32;\n          break;\n        case 'wheel':\n          // nothing. don't\n          // interfere with\n          // `pressed`.\n          break;\n      }\n    }\n\n    // motion example of a left click:\n    // ^[[M 3<^[[M@4<^[[M@5<^[[M@6<^[[M@7<^[[M#7<\n    function sendMove(ev: MouseEvent): void {\n      let button = pressed;\n      const pos = self.mouseHelper.getRawByteCoords(ev, self.screenElement, self.charMeasure, self.options.lineHeight, self.cols, self.rows);\n      if (!pos) return;\n\n      // buttons marked as motions\n      // are incremented by 32\n      button += 32;\n\n      sendEvent(button, pos);\n    }\n\n    // encode button and\n    // position to characters\n    function encode(data: number[], ch: number): void {\n      if (!self.utfMouse) {\n        if (ch === 255) {\n          data.push(0);\n          return;\n        }\n        if (ch > 127) ch = 127;\n        data.push(ch);\n      } else {\n        if (ch === 2047) {\n          data.push(0);\n          return;\n        }\n        if (ch < 127) {\n          data.push(ch);\n        } else {\n          if (ch > 2047) ch = 2047;\n          data.push(0xC0 | (ch >> 6));\n          data.push(0x80 | (ch & 0x3F));\n        }\n      }\n    }\n\n    // send a mouse event:\n    // regular/utf8: ^[[M Cb Cx Cy\n    // urxvt: ^[[ Cb ; Cx ; Cy M\n    // sgr: ^[[ Cb ; Cx ; Cy M/m\n    // vt300: ^[[ 24(1/3/5)~ [ Cx , Cy ] \\r\n    // locator: CSI P e ; P b ; P r ; P c ; P p & w\n    function sendEvent(button: number, pos: {x: number, y: number}): void {\n      // self.emit('mouse', {\n      //   x: pos.x - 32,\n      //   y: pos.x - 32,\n      //   button: button\n      // });\n\n      if (self._vt300Mouse) {\n        // NOTE: Unstable.\n        // http://www.vt100.net/docs/vt3xx-gp/chapter15.html\n        button &= 3;\n        pos.x -= 32;\n        pos.y -= 32;\n        let data = C0.ESC + '[24';\n        if (button === 0) data += '1';\n        else if (button === 1) data += '3';\n        else if (button === 2) data += '5';\n        else if (button === 3) return;\n        else data += '0';\n        data += '~[' + pos.x + ',' + pos.y + ']\\r';\n        self.handler(data);\n        return;\n      }\n\n      if (self._decLocator) {\n        // NOTE: Unstable.\n        button &= 3;\n        pos.x -= 32;\n        pos.y -= 32;\n        if (button === 0) button = 2;\n        else if (button === 1) button = 4;\n        else if (button === 2) button = 6;\n        else if (button === 3) button = 3;\n        self.handler(C0.ESC + '['\n                  + button\n                  + ';'\n                  + (button === 3 ? 4 : 0)\n                  + ';'\n                  + pos.y\n                  + ';'\n                  + pos.x\n                  + ';'\n                  // Not sure what page is meant to be\n                  + (<any>pos).page || 0\n                  + '&w');\n        return;\n      }\n\n      if (self.urxvtMouse) {\n        pos.x -= 32;\n        pos.y -= 32;\n        pos.x++;\n        pos.y++;\n        self.handler(C0.ESC + '[' + button + ';' + pos.x + ';' + pos.y + 'M');\n        return;\n      }\n\n      if (self.sgrMouse) {\n        pos.x -= 32;\n        pos.y -= 32;\n        self.handler(C0.ESC + '[<'\n                  + (((button & 3) === 3 ? button & ~3 : button) - 32)\n                  + ';'\n                  + pos.x\n                  + ';'\n                  + pos.y\n                  + ((button & 3) === 3 ? 'm' : 'M'));\n        return;\n      }\n\n      const data: number[] = [];\n\n      encode(data, button);\n      encode(data, pos.x);\n      encode(data, pos.y);\n\n      self.handler(C0.ESC + '[M' + String.fromCharCode.apply(String, data));\n    }\n\n    function getButton(ev: MouseEvent): number {\n      let button;\n      let shift;\n      let meta;\n      let ctrl;\n      let mod;\n\n      // two low bits:\n      // 0 = left\n      // 1 = middle\n      // 2 = right\n      // 3 = release\n      // wheel up/down:\n      // 1, and 2 - with 64 added\n      switch ((<any>ev).overrideType || ev.type) {\n        case 'mousedown':\n          button = ev.button !== null && ev.button !== undefined\n            ? +ev.button\n          : ev.which !== null && ev.which !== undefined\n            ? ev.which - 1\n          : null;\n\n          if (Browser.isMSIE) {\n            button = button === 1 ? 0 : button === 4 ? 1 : button;\n          }\n          break;\n        case 'mouseup':\n          button = 3;\n          break;\n        case 'DOMMouseScroll':\n          button = ev.detail < 0\n            ? 64\n          : 65;\n          break;\n        case 'wheel':\n          button = (<WheelEvent>ev).wheelDeltaY > 0\n            ? 64\n          : 65;\n          break;\n      }\n\n      // next three bits are the modifiers:\n      // 4 = shift, 8 = meta, 16 = control\n      shift = ev.shiftKey ? 4 : 0;\n      meta = ev.metaKey ? 8 : 0;\n      ctrl = ev.ctrlKey ? 16 : 0;\n      mod = shift | meta | ctrl;\n\n      // no mods\n      if (self.vt200Mouse) {\n        // ctrl only\n        mod &= ctrl;\n      } else if (!self.normalMouse) {\n        mod = 0;\n      }\n\n      // increment to SP\n      button = (32 + (mod << 2)) + button;\n\n      return button;\n    }\n\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n\n      // Prevent the focus on the textarea from getting lost\n      // and make sure we get focused on mousedown\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.mouseEvents || this.selectionManager.shouldForceSelection(ev)) {\n        return;\n      }\n\n      // send the button\n      sendButton(ev);\n\n      // fix for odd bug\n      // if (this.vt200Mouse && !this.normalMouse) {\n      if (this.vt200Mouse) {\n        (<any>ev).overrideType = 'mouseup';\n        sendButton(ev);\n        return this.cancel(ev);\n      }\n\n      // TODO: All mouse handling should be pulled into its own file.\n\n      // bind events\n      let moveHandler: (event: MouseEvent) => void;\n      if (this.normalMouse) {\n        moveHandler = (event: MouseEvent) => {\n          // Do nothing if normal mouse mode is on. This can happen if the mouse is held down when the\n          // terminal exits normalMouse mode.\n          if (!this.normalMouse) {\n            return;\n          }\n          sendMove(event);\n        };\n        // TODO: these event listeners should be managed by the disposable, the Terminal reference may\n        // be kept aroud if Terminal.dispose is fired when the mouse is down\n        this._document.addEventListener('mousemove', moveHandler);\n      }\n\n      // x10 compatibility mode can't send button releases\n      const handler = (ev: MouseEvent) => {\n        if (this.normalMouse && !this.x10Mouse) {\n          sendButton(ev);\n        }\n        if (moveHandler) {\n          // Even though this should only be attached when this.normalMouse is true, holding the\n          // mouse button down when normalMouse changes can happen. Just always try to remove it.\n          this._document.removeEventListener('mousemove', moveHandler);\n          moveHandler = null;\n        }\n        this._document.removeEventListener('mouseup', handler);\n        return this.cancel(ev);\n      };\n      this._document.addEventListener('mouseup', handler);\n\n      return this.cancel(ev);\n    }));\n\n    // if (this.normalMouse) {\n    //  on(this.document, 'mousemove', sendMove);\n    // }\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (!this.mouseEvents) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        if (!this.buffer.hasScrollback) {\n          const amount = this.viewport.getLinesScrolled(ev);\n\n          // Do nothing if there's no vertical scroll\n          if (amount === 0) {\n            return;\n          }\n\n          // Construct and send sequences\n          const sequence = C0.ESC + (this.applicationCursor ? 'O' : '[') + ( ev.deltaY < 0 ? 'A' : 'B');\n          let data = '';\n          for (let i = 0; i < Math.abs(amount); i++) {\n            data += sequence;\n          }\n          this.handler(data);\n        }\n        return;\n      }\n      if (this.x10Mouse || this._vt300Mouse || this._decLocator) return;\n      sendButton(ev);\n      ev.preventDefault();\n    }));\n\n    // allow wheel scrolling in\n    // the shell for example\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (this.mouseEvents) return;\n      this.viewport.onWheel(ev);\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.mouseEvents) return;\n      this.viewport.onTouchStart(ev);\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.mouseEvents) return;\n      this.viewport.onTouchMove(ev);\n      return this.cancel(ev);\n    }));\n  }\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    if (this.renderer) {\n      this.renderer.refreshRows(start, end);\n    }\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    if (this.linkifier) {\n      this.linkifier.linkifyRows(start, end);\n    }\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this.selectionManager && this.selectionManager.shouldColumnSelect(ev)) {\n      this.element.classList.add('xterm-cursor-crosshair');\n    } else {\n      this.element.classList.remove('xterm-cursor-crosshair');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  public showCursor(): void {\n    if (!this.cursorState) {\n      this.cursorState = 1;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(isWrapped?: boolean): void {\n    const newLine = BufferLine.blankLine(this.cols, DEFAULT_ATTR, isWrapped);\n    const topRow = this.buffer.ybase + this.buffer.scrollTop;\n    const bottomRow = this.buffer.ybase + this.buffer.scrollBottom;\n\n    if (this.buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = this.buffer.lines.length === this.buffer.lines.maxLength;\n\n      // Insert the line using the fastest method\n      if (bottomRow === this.buffer.lines.length - 1) {\n        this.buffer.lines.push(newLine);\n      } else {\n        this.buffer.lines.splice(bottomRow + 1, 0, newLine);\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        this.buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this._userScrolling) {\n          this.buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this._userScrolling) {\n          this.buffer.ydisp = Math.max(this.buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1/*as it's zero-based*/;\n      this.buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      this.buffer.lines.set(bottomRow, newLine);\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this._userScrolling) {\n      this.buffer.ydisp = this.buffer.ybase;\n    }\n\n    // Flag rows that need updating\n    this.updateRange(this.buffer.scrollTop);\n    this.updateRange(this.buffer.scrollBottom);\n\n    /**\n     * This event is emitted whenever the terminal is scrolled.\n     * The one parameter passed is the new y display position.\n     *\n     * @event scroll\n     */\n    this.emit('scroll', this.buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean): void {\n    if (disp < 0) {\n      if (this.buffer.ydisp === 0) {\n        return;\n      }\n      this._userScrolling = true;\n    } else if (disp + this.buffer.ydisp >= this.buffer.ybase) {\n      this._userScrolling = false;\n    }\n\n    const oldYdisp = this.buffer.ydisp;\n    this.buffer.ydisp = Math.max(Math.min(this.buffer.ydisp + disp, this.buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === this.buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this.emit('scroll', this.buffer.ydisp);\n    }\n\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /**\n   * Writes text to the terminal.\n   * @param data The text to write to the terminal.\n   */\n  public write(data: string): void {\n    // Ensure the terminal isn't disposed\n    if (this._isDisposed) {\n      return;\n    }\n\n    // Ignore falsy data values (including the empty string)\n    if (!data) {\n      return;\n    }\n\n    this.writeBuffer.push(data);\n\n    // Send XOFF to pause the pty process if the write buffer becomes too large so\n    // xterm.js can catch up before more data is sent. This is necessary in order\n    // to keep signals such as ^C responsive.\n    if (this.options.useFlowControl && !this._xoffSentToCatchUp && this.writeBuffer.length >= WRITE_BUFFER_PAUSE_THRESHOLD) {\n      // XOFF - stop pty pipe\n      // XON will be triggered by emulator before processing data chunk\n      this.handler(C0.DC3);\n      this._xoffSentToCatchUp = true;\n    }\n\n    if (!this._writeInProgress && this.writeBuffer.length > 0) {\n      // Kick off a write which will write all data in sequence recursively\n      this._writeInProgress = true;\n      // Kick off an async innerWrite so more writes can come in while processing data\n      setTimeout(() => {\n        this._innerWrite();\n      });\n    }\n  }\n\n  protected _innerWrite(): void {\n    // Ensure the terminal isn't disposed\n    if (this._isDisposed) {\n      this.writeBuffer = [];\n    }\n\n    const writeBatch = this.writeBuffer.splice(0, WRITE_BATCH_SIZE);\n    while (writeBatch.length > 0) {\n      const data = writeBatch.shift();\n\n      // If XOFF was sent in order to catch up with the pty process, resume it if\n      // the writeBuffer is empty to allow more data to come in.\n      if (this._xoffSentToCatchUp && writeBatch.length === 0 && this.writeBuffer.length === 0) {\n        this.handler(C0.DC1);\n        this._xoffSentToCatchUp = false;\n      }\n\n      this._refreshStart = this.buffer.y;\n      this._refreshEnd = this.buffer.y;\n\n      // HACK: Set the parser state based on it's state at the time of return.\n      // This works around the bug #662 which saw the parser state reset in the\n      // middle of parsing escape sequence in two chunks. For some reason the\n      // state of the parser resets to 0 after exiting parser.parse. This change\n      // just sets the state back based on the correct return statement.\n\n      this._inputHandler.parse(data);\n\n      this.updateRange(this.buffer.y);\n      this.refresh(this._refreshStart, this._refreshEnd);\n    }\n    if (this.writeBuffer.length > 0) {\n      // Allow renderer to catch up before processing the next batch\n      setTimeout(() => this._innerWrite(), 0);\n    } else {\n      this._writeInProgress = false;\n    }\n  }\n\n  /**\n   * Writes text to the terminal, followed by a break line character (\\n).\n   * @param data The text to write to the terminal.\n   */\n  public writeln(data: string): void {\n    this.write(data + '\\r\\n');\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propogation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    const joinerId = this.renderer.registerCharacterJoiner(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (this.renderer.deregisterCharacterJoiner(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this.selectionManager ? this.selectionManager.hasSelection : false;\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this.selectionManager ? this.selectionManager.selectionText : '';\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    if (this.selectionManager) {\n      this.selectionManager.clearSelection();\n    }\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    if (this.selectionManager) {\n      this.selectionManager.selectAll();\n    }\n  }\n\n  public selectLines(start: number, end: number): void {\n    if (this.selectionManager) {\n      this.selectionManager.selectLines(start, end);\n    }\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean {\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    if (!this._compositionHelper.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.applicationCursor, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    // if (result.key === C0.DC3) { // XOFF\n    //   this._writeStopped = true;\n    // } else if (result.key === C0.DC1) { // XON\n    //   this._writeStopped = false;\n    // }\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    this.emit('keydown', event);\n    this.emit('key', result.key, event);\n    this.showCursor();\n    this.handler(result.key);\n\n    return this.cancel(event, true);\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: IKeyboardEvent): boolean {\n    const thirdLevelKey =\n        (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n        (browser.isMSWindows && ev.altKey && ev.ctrlKey && !ev.metaKey);\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  /**\n   * Set the G level of the terminal\n   * @param g\n   */\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this.charsets[g];\n  }\n\n  /**\n   * Set the charset for the given G level of the terminal\n   * @param g\n   * @param charset\n   */\n  public setgCharset(g: number, charset: ICharset): void {\n    this.charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this.updateCursorStyle(ev);\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this.emit('keypress', key, ev);\n    this.emit('key', key, ev);\n    this.showCursor();\n    this.handler(key);\n\n    return true;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    this.emit('bell');\n    if (this._soundBell()) {\n      this.soundManager.playBellSound();\n    }\n\n    if (this._visualBell()) {\n      this.element.classList.add('visual-bell-active');\n      clearTimeout(this._visualBellTimer);\n      this._visualBellTimer = window.setTimeout(() => {\n        this.element.classList.remove('visual-bell-active');\n      }, 200);\n    }\n  }\n\n  /**\n   * Log the current state to the console.\n   */\n  public log(text: string, data?: any): void {\n    if (!this.options.debug) return;\n    if (!this._context.console || !this._context.console.log) return;\n    this._context.console.log(text, data);\n  }\n\n  /**\n   * Log the current state as error to the console.\n   */\n  public error(text: string, data?: any): void {\n    if (!this.options.debug) return;\n    if (!this._context.console || !this._context.console.error) return;\n    this._context.console.error(text, data);\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this.charMeasure && (!this.charMeasure.width || !this.charMeasure.height)) {\n        this.charMeasure.measure(this.options);\n      }\n      return;\n    }\n\n    if (x < 1) x = 1;\n    if (y < 1) y = 1;\n\n    this.buffers.resize(x, y);\n\n    this.cols = x;\n    this.rows = y;\n    this.buffers.setupTabStops(this.cols);\n\n    if (this.charMeasure) {\n      this.charMeasure.measure(this.options);\n    }\n\n    this.refresh(0, this.rows - 1);\n    this.emit('resize', {cols: x, rows: y});\n  }\n\n  /**\n   * Updates the range of rows to refresh\n   * @param y The number of rows to refresh next.\n   */\n  public updateRange(y: number): void {\n    if (y < this._refreshStart) this._refreshStart = y;\n    if (y > this._refreshEnd) this._refreshEnd = y;\n    // if (y > this.refreshEnd) {\n    //   this.refreshEnd = y;\n    //   if (y > this.rows - 1) {\n    //     this.refreshEnd = this.rows - 1;\n    //   }\n    // }\n  }\n\n  /**\n   * Set the range of refreshing to the maximum value\n   */\n  public maxRange(): void {\n    this._refreshStart = 0;\n    this._refreshEnd = this.rows - 1;\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y));\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(BufferLine.blankLine(this.cols, DEFAULT_ATTR));\n    }\n    this.refresh(0, this.rows - 1);\n    this.emit('scroll', this.buffer.ydisp);\n  }\n\n  /**\n   * If cur return the back color xterm feature attribute. Else return default attribute.\n   * @param cur\n   */\n  public ch(cur?: boolean): CharData {\n    if (cur) {\n      return [this.eraseAttr(), NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE];\n    }\n    return [DEFAULT_ATTR, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE];\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  public is(term: string): boolean {\n    return (this.options.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * Emit the 'data' event and populate the given data.\n   * @param data The data to populate in the event.\n   */\n  public handler(data: string): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this.options.disableStdin) {\n      return;\n    }\n\n    // Clear the selection if the selection manager is available and has an active selection\n    if (this.selectionManager && this.selectionManager.hasSelection) {\n      this.selectionManager.clearSelection();\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    if (this.buffer.ybase !== this.buffer.ydisp) {\n      this.scrollToBottom();\n    }\n    this.emit('data', data);\n  }\n\n  /**\n   * Emit the 'title' event and populate the given title.\n   * @param title The title to populate in the event.\n   */\n  public handleTitle(title: string): void {\n    /**\n     * This event is emitted when the title of the terminal is changed\n     * from inside the terminal. The parameter is the new title.\n     *\n     * @event title\n     */\n    this.emit('title', title);\n  }\n\n  /**\n   * ESC\n   */\n\n  /**\n   * ESC D Index (IND is 0x84).\n   */\n  public index(): void {\n    this.buffer.y++;\n    if (this.buffer.y > this.buffer.scrollBottom) {\n      this.buffer.y--;\n      this.scroll();\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this.buffer.x >= this.cols) {\n      this.buffer.x--;\n    }\n  }\n\n  /**\n   * ESC M Reverse Index (RI is 0x8d).\n   *\n   * Move the cursor up one row, inserting a new blank line if necessary.\n   */\n  public reverseIndex(): void {\n    if (this.buffer.y === this.buffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this.buffer.scrollBottom - this.buffer.scrollTop;\n      this.buffer.lines.shiftElements(this.buffer.y + this.buffer.ybase, scrollRegionHeight, 1);\n      this.buffer.lines.set(this.buffer.y + this.buffer.ybase, BufferLine.blankLine(this.cols, this.eraseAttr()));\n      this.updateRange(this.buffer.scrollTop);\n      this.updateRange(this.buffer.scrollBottom);\n    } else {\n      this.buffer.y--;\n    }\n  }\n\n  /**\n   * ESC c Full Reset (RIS).\n   */\n  public reset(): void {\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n    const inputHandler = this._inputHandler;\n    const cursorState = this.cursorState;\n    this._setup();\n    this._customKeyEventHandler = customKeyEventHandler;\n    this._inputHandler = inputHandler;\n    this.cursorState = cursorState;\n    this.refresh(0, this.rows - 1);\n    if (this.viewport) {\n      this.viewport.syncScrollArea();\n    }\n  }\n\n\n  /**\n   * ESC H Tab Set (HTS is 0x88).\n   */\n  public tabSet(): void {\n    this.buffer.tabs[this.buffer.x] = true;\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  // TODO: Remove when true color is implemented\n  public matchColor(r1: number, g1: number, b1: number): number {\n    const hash = (r1 << 16) | (g1 << 8) | b1;\n\n    if (matchColorCache[hash] !== null && matchColorCache[hash] !== undefined) {\n      return matchColorCache[hash];\n    }\n\n    let ldiff = Infinity;\n    let li = -1;\n    let i = 0;\n    let c: number;\n    let r2: number;\n    let g2: number;\n    let b2: number;\n    let diff: number;\n\n    for (; i < DEFAULT_ANSI_COLORS.length; i++) {\n      c = DEFAULT_ANSI_COLORS[i].rgba;\n      r2 = c >>> 24;\n      g2 = c >>> 16 & 0xFF;\n      b2 = c >>> 8 & 0xFF;\n      // assume that alpha is 0xFF\n\n      diff = matchColorDistance(r1, g1, b1, r2, g2, b2);\n\n      if (diff === 0) {\n        li = i;\n        break;\n      }\n\n      if (diff < ldiff) {\n        ldiff = diff;\n        li = i;\n      }\n    }\n\n    return matchColorCache[hash] = li;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n\n/**\n * TODO:\n * The below color-related code can be removed when true color is implemented.\n * It's only purpose is to match true color requests with the closest matching\n * ANSI color code.\n */\n\nconst matchColorCache: {[colorRGBHash: number]: number} = {};\n\n// http://stackoverflow.com/questions/1633828\nfunction matchColorDistance(r1: number, g1: number, b1: number, r2: number, g2: number, b2: number): number {\n  return Math.pow(30 * (r1 - r2), 2)\n    + Math.pow(59 * (g1 - g2), 2)\n    + Math.pow(11 * (b1 - b2), 2);\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, ITerminalOptions, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings } from 'xterm';\nimport { ITerminal } from '../Types';\nimport { Terminal as TerminalCore } from '../Terminal';\nimport * as Strings from '../Strings';\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n  }\n\n  public get element(): HTMLElement { return this._core.element; }\n  public get textarea(): HTMLTextAreaElement { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get markers(): IMarker[] { return this._core.markers; }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public on(type: 'blur' | 'focus' | 'linefeed' | 'selection', listener: () => void): void;\n  public on(type: 'data', listener: (...args: any[]) => void): void;\n  public on(type: 'key', listener: (key?: string, event?: KeyboardEvent) => void): void;\n  public on(type: 'keypress' | 'keydown', listener: (event?: KeyboardEvent) => void): void;\n  public on(type: 'refresh', listener: (data?: { start: number; end: number; }) => void): void;\n  public on(type: 'resize', listener: (data?: { cols: number; rows: number; }) => void): void;\n  public on(type: 'scroll', listener: (ydisp?: number) => void): void;\n  public on(type: 'title', listener: (title?: string) => void): void;\n  public on(type: string, listener: (...args: any[]) => void): void;\n  public on(type: any, listener: any): void {\n    this._core.on(type, listener);\n  }\n  public off(type: string, listener: (...args: any[]) => void): void {\n    this._core.off(type, listener);\n  }\n  public emit(type: string, data?: any): void {\n    this._core.emit(type, data);\n  }\n  public addDisposableListener(type: string, handler: (...args: any[]) => void): IDisposable {\n    return this._core.addDisposableListener(type, handler);\n  }\n  public resize(columns: number, rows: number): void {\n    this._core.resize(columns, rows);\n  }\n  public writeln(data: string): void {\n    this._core.writeln(data);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public addMarker(cursorYOffset: number): IMarker {\n    return this._core.addMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._core.dispose();\n  }\n  public destroy(): void {\n    this._core.destroy();\n  }\n  public scrollLines(amount: number): void {\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string): void {\n    this._core.write(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'fontWeight' | 'fontWeightBold' | 'rendererType' | 'termName'): string;\n  public getOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'debug' | 'disableStdin' | 'enableBold' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'screenKeys' | 'useFlowControl' | 'visualBell'): boolean;\n  public getOption(key: 'colors'): string[];\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: 'handler'): (data: string) => void;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'debug' | 'disableStdin' | 'enableBold' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'screenKeys' | 'useFlowControl' | 'visualBell', value: boolean): void;\n  public setOption(key: 'colors', value: string[]): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'handler', value: (data: string) => void): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._core.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public static applyAddon(addon: any): void {\n    addon.apply(Terminal);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This file is the entry point for browserify.\n */\n\nimport { Terminal } from './public/Terminal';\n\nmodule.exports = Terminal;\n","var _Symbol$iterator = require(\"../core-js/symbol/iterator\");\n\nvar _Symbol = require(\"../core-js/symbol\");\n\nfunction _typeof2(obj) { if (typeof _Symbol === \"function\" && typeof _Symbol$iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof _Symbol === \"function\" && _typeof2(_Symbol$iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This module provides methods for attaching a terminal to a terminado\n * WebSocket stream.\n */\n\nimport { Terminal } from \"xterm\";\nimport { ITerminadoAddonTerminal } from \"./Interfaces\";\n\n/**\n * Attaches the given terminal to the given socket.\n *\n * @param term The terminal to be attached to the given socket.\n * @param socket The socket to attach the current terminal.\n * @param bidirectional Whether the terminal should send data to the socket as well.\n * @param buffered Whether the rendering of incoming data should happen instantly or at a maximum\n * frequency of 1 rendering per 10ms.\n */\nexport function terminadoAttach(\n  term: Terminal,\n  socket: WebSocket,\n  bidirectional: boolean,\n  buffered: boolean\n): void {\n  const addonTerminal = <ITerminadoAddonTerminal>term;\n  bidirectional = typeof bidirectional === \"undefined\" ? true : bidirectional;\n  addonTerminal.__socket = socket;\n\n  addonTerminal.__flushBuffer = () => {\n    addonTerminal.write(addonTerminal.__attachSocketBuffer);\n    addonTerminal.__attachSocketBuffer = null;\n  };\n\n  addonTerminal.__pushToBuffer = (data: string) => {\n    if (addonTerminal.__attachSocketBuffer) {\n      addonTerminal.__attachSocketBuffer += data;\n    } else {\n      addonTerminal.__attachSocketBuffer = data;\n      setTimeout(addonTerminal.__flushBuffer, 10);\n    }\n  };\n\n  let myTextDecoder: any;\n  addonTerminal.__getMessage = (ev: MessageEvent) => {\n    let str: string;\n\n    if (typeof ev.data === \"object\") {\n      if (!myTextDecoder) {\n        myTextDecoder = new TextDecoder();\n      }\n      if (ev.data instanceof ArrayBuffer) {\n        str = myTextDecoder.decode(ev.data);\n        displayData(str);\n      } else {\n        const fileReader = new FileReader();\n\n        fileReader.addEventListener(\"load\", () => {\n          str = myTextDecoder.decode(fileReader.result);\n          displayData(str);\n        });\n        fileReader.readAsArrayBuffer(ev.data);\n      }\n    } else if (typeof ev.data === \"string\") {\n      displayData(ev.data);\n    } else {\n      throw Error(`Cannot handle \"${typeof ev.data}\" websocket message.`);\n    }\n  };\n\n  /**\n   * Push data to buffer or write it in the terminal.\n   * This is used as a callback for FileReader.onload.\n   *\n   * @param str String decoded by FileReader.\n   * @param data The data of the EventMessage.\n   */\n  function displayData(str?: string, data?: string): void {\n    if (buffered) {\n      addonTerminal.__pushToBuffer(str || data);\n    } else {\n      addonTerminal.write(str || data);\n    }\n  }\n\n  addonTerminal.__sendData = (data: string) => {\n    socket.send(JSON.stringify([\"stdin\", data]));\n  };\n\n  addonTerminal.__setSize = (size: { rows: number; cols: number }) => {\n    socket.send(JSON.stringify([\"set_size\", size.rows, size.cols]));\n  };\n\n  socket.addEventListener(\"message\", addonTerminal.__getMessage);\n\n  if (bidirectional) {\n    addonTerminal.on(\"data\", addonTerminal.__sendData);\n  }\n  addonTerminal.on(\"resize\", addonTerminal.__setSize);\n\n  socket.addEventListener(\"close\", () =>\n    terminadoDetach(addonTerminal, socket)\n  );\n  socket.addEventListener(\"error\", () =>\n    terminadoDetach(addonTerminal, socket)\n  );\n}\n\n/**\n * Detaches the given terminal from the given socket\n *\n * @param term The terminal to be detached from the given socket.\n * @param socket The socket from which to detach the current terminal.\n */\nexport function terminadoDetach(term: Terminal, socket: WebSocket): void {\n  const addonTerminal = <ITerminadoAddonTerminal>term;\n  addonTerminal.off(\"data\", addonTerminal.__sendData);\n\n  socket = typeof socket === \"undefined\" ? addonTerminal.__socket : socket;\n\n  if (socket) {\n    socket.removeEventListener(\"message\", addonTerminal.__getMessage);\n  }\n\n  delete addonTerminal.__socket;\n}\n\nexport function apply(terminalConstructor: typeof Terminal): void {\n  /**\n   * Attaches the current terminal to the given socket\n   *\n   * @param socket - The socket to attach the current terminal.\n   * @param bidirectional - Whether the terminal should send data to the socket as well.\n   * @param buffered - Whether the rendering of incoming data should happen instantly or at a\n   * maximum frequency of 1 rendering per 10ms.\n   */\n  (<any>terminalConstructor.prototype).terminadoAttach = function(\n    socket: WebSocket,\n    bidirectional: boolean,\n    buffered: boolean\n  ): void {\n    return terminadoAttach(this, socket, bidirectional, buffered);\n  };\n\n  /**\n   * Detaches the current terminal from the given socket.\n   *\n   * @param socket The socket from which to detach the current terminal.\n   */\n  (<any>terminalConstructor.prototype).terminadoDetach = function(\n    socket: WebSocket\n  ): void {\n    return terminadoDetach(this, socket);\n  };\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal } from 'xterm';\n\n/**\n * Toggle the given terminal's fullscreen mode.\n * @param term The terminal to toggle full screen mode\n * @param fullscreen Toggle fullscreen on (true) or off (false)\n */\nexport function toggleFullScreen(term: Terminal, fullscreen: boolean): void {\n  let fn: string;\n\n  if (typeof fullscreen === 'undefined') {\n    fn = (term.element.classList.contains('fullscreen')) ? 'remove' : 'add';\n  } else if (!fullscreen) {\n    fn = 'remove';\n  } else {\n    fn = 'add';\n  }\n\n  term.element.classList[fn]('fullscreen');\n}\n\nexport function apply(terminalConstructor: typeof Terminal): void {\n  (<any>terminalConstructor.prototype).toggleFullScreen = function (fullscreen: boolean): void {\n    toggleFullScreen(this, fullscreen);\n  };\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * Fit terminal columns and rows to the dimensions of its DOM element.\n *\n * ## Approach\n *\n *    Rows: Truncate the division of the terminal parent element height by the\n *          terminal row height.\n * Columns: Truncate the division of the terminal parent element width by the\n *          terminal character width (apply display: inline at the terminal\n *          row and truncate its width with the current number of columns).\n */\n\nimport { Terminal } from 'xterm';\n\nexport interface IGeometry {\n  rows: number;\n  cols: number;\n}\n\nexport function proposeGeometry(term: Terminal): IGeometry {\n  if (!term.element.parentElement) {\n    return null;\n  }\n  const parentElementStyle = window.getComputedStyle(term.element.parentElement);\n  const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n  const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n  const elementStyle = window.getComputedStyle(term.element);\n  const elementPadding = {\n    top: parseInt(elementStyle.getPropertyValue('padding-top')),\n    bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n    right: parseInt(elementStyle.getPropertyValue('padding-right')),\n    left: parseInt(elementStyle.getPropertyValue('padding-left'))\n  };\n  const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n  const elementPaddingHor = elementPadding.right + elementPadding.left;\n  const availableHeight = parentElementHeight - elementPaddingVer;\n  const availableWidth = parentElementWidth - elementPaddingHor - (<any>term)._core.viewport.scrollBarWidth;\n  const geometry = {\n    cols: Math.floor(availableWidth / (<any>term)._core.renderer.dimensions.actualCellWidth),\n    rows: Math.floor(availableHeight / (<any>term)._core.renderer.dimensions.actualCellHeight)\n  };\n  return geometry;\n}\n\nexport function fit(term: Terminal): void {\n  const geometry = proposeGeometry(term);\n  if (geometry) {\n    // Force a full render\n    if (term.rows !== geometry.rows || term.cols !== geometry.cols) {\n      (<any>term)._core.renderer.clear();\n      term.resize(geometry.cols, geometry.rows);\n    }\n  }\n}\n\nexport function apply(terminalConstructor: typeof Terminal): void {\n  (<any>terminalConstructor.prototype).proposeGeometry = function (): IGeometry {\n    return proposeGeometry(this);\n  };\n\n  (<any>terminalConstructor.prototype).fit = function (): void {\n    fit(this);\n  };\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","module.exports = require(\"regenerator-runtime\");\n","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","require('../../modules/es6.object.keys');\nmodule.exports = require('../../modules/_core').Object.keys;\n","module.exports = require(\"core-js/library/fn/object/keys\");","var _Promise = require(\"../core-js/promise\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","var $parseInt = require('./_global').parseInt;\nvar $trim = require('./_string-trim').trim;\nvar ws = require('./_string-ws');\nvar hex = /^[-+]?0[xX]/;\n\nmodule.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {\n  var string = $trim(String(str), 3);\n  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));\n} : $parseInt;\n","var $export = require('./_export');\nvar $parseInt = require('./_parse-int');\n// 18.2.5 parseInt(string, radix)\n$export($export.G + $export.F * (parseInt != $parseInt), { parseInt: $parseInt });\n","require('../modules/es6.parse-int');\nmodule.exports = require('../modules/_core').parseInt;\n","module.exports = require(\"core-js/library/fn/parse-int\");","'use strict';\nvar aFunction = require('./_a-function');\nvar isObject = require('./_is-object');\nvar invoke = require('./_invoke');\nvar arraySlice = [].slice;\nvar factories = {};\n\nvar construct = function (F, len, args) {\n  if (!(len in factories)) {\n    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';\n    // eslint-disable-next-line no-new-func\n    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');\n  } return factories[len](F, args);\n};\n\nmodule.exports = Function.bind || function bind(that /* , ...args */) {\n  var fn = aFunction(this);\n  var partArgs = arraySlice.call(arguments, 1);\n  var bound = function (/* args... */) {\n    var args = partArgs.concat(arraySlice.call(arguments));\n    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);\n  };\n  if (isObject(fn.prototype)) bound.prototype = fn.prototype;\n  return bound;\n};\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","require('../../modules/es6.reflect.construct');\nmodule.exports = require('../../modules/_core').Reflect.construct;\n","module.exports = require(\"core-js/library/fn/reflect/construct\");","// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar rApply = (require('./_global').Reflect || {}).apply;\nvar fApply = Function.apply;\n// MS Edge argumentsList argument is optional\n$export($export.S + $export.F * !require('./_fails')(function () {\n  rApply(function () { /* empty */ });\n}), 'Reflect', {\n  apply: function apply(target, thisArgument, argumentsList) {\n    var T = aFunction(target);\n    var L = anObject(argumentsList);\n    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);\n  }\n});\n","require('../../modules/es6.reflect.apply');\nmodule.exports = require('../../modules/_core').Reflect.apply;\n","module.exports = require(\"core-js/library/fn/reflect/apply\");","// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])\nvar dP = require('./_object-dp');\nvar gOPD = require('./_object-gopd');\nvar getPrototypeOf = require('./_object-gpo');\nvar has = require('./_has');\nvar $export = require('./_export');\nvar createDesc = require('./_property-desc');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\n\nfunction set(target, propertyKey, V /* , receiver */) {\n  var receiver = arguments.length < 4 ? target : arguments[3];\n  var ownDesc = gOPD.f(anObject(target), propertyKey);\n  var existingDescriptor, proto;\n  if (!ownDesc) {\n    if (isObject(proto = getPrototypeOf(target))) {\n      return set(proto, propertyKey, V, receiver);\n    }\n    ownDesc = createDesc(0);\n  }\n  if (has(ownDesc, 'value')) {\n    if (ownDesc.writable === false || !isObject(receiver)) return false;\n    if (existingDescriptor = gOPD.f(receiver, propertyKey)) {\n      if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;\n      existingDescriptor.value = V;\n      dP.f(receiver, propertyKey, existingDescriptor);\n    } else dP.f(receiver, propertyKey, createDesc(0, V));\n    return true;\n  }\n  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);\n}\n\n$export($export.S, 'Reflect', { set: set });\n","require('../../modules/es6.reflect.set');\nmodule.exports = require('../../modules/_core').Reflect.set;\n","module.exports = require(\"core-js/library/fn/reflect/set\");","// 26.1.6 Reflect.get(target, propertyKey [, receiver])\nvar gOPD = require('./_object-gopd');\nvar getPrototypeOf = require('./_object-gpo');\nvar has = require('./_has');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar anObject = require('./_an-object');\n\nfunction get(target, propertyKey /* , receiver */) {\n  var receiver = arguments.length < 3 ? target : arguments[2];\n  var desc, proto;\n  if (anObject(target) === receiver) return target[propertyKey];\n  if (desc = gOPD.f(target, propertyKey)) return has(desc, 'value')\n    ? desc.value\n    : desc.get !== undefined\n      ? desc.get.call(receiver)\n      : undefined;\n  if (isObject(proto = getPrototypeOf(target))) return get(proto, propertyKey, receiver);\n}\n\n$export($export.S, 'Reflect', { get: get });\n","require('../../modules/es6.reflect.get');\nmodule.exports = require('../../modules/_core').Reflect.get;\n","module.exports = require(\"core-js/library/fn/reflect/get\");","// 20.3.3.1 / 15.9.4.4 Date.now()\nvar $export = require('./_export');\n\n$export($export.S, 'Date', { now: function () { return new Date().getTime(); } });\n","require('../../modules/es6.date.now');\nmodule.exports = require('../../modules/_core').Date.now;\n","module.exports = require(\"core-js/library/fn/date/now\");","var isObject = require('./_is-object');\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n","'use strict';\nvar dP = require('./_object-dp').f;\nvar create = require('./_object-create');\nvar redefineAll = require('./_redefine-all');\nvar ctx = require('./_ctx');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar $iterDefine = require('./_iter-define');\nvar step = require('./_iter-step');\nvar setSpecies = require('./_set-species');\nvar DESCRIPTORS = require('./_descriptors');\nvar fastKey = require('./_meta').fastKey;\nvar validate = require('./_validate-collection');\nvar SIZE = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function (that, key) {\n  // fast case\n  var index = fastKey(key);\n  var entry;\n  if (index !== 'F') return that._i[index];\n  // frozen object case\n  for (entry = that._f; entry; entry = entry.n) {\n    if (entry.k == key) return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;         // collection type\n      that._i = create(null); // index\n      that._f = undefined;    // first entry\n      that._l = undefined;    // last entry\n      that[SIZE] = 0;         // size\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {\n          entry.r = true;\n          if (entry.p) entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = validate(this, NAME);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.n;\n          var prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if (prev) prev.n = next;\n          if (next) next.p = prev;\n          if (that._f == entry) that._f = next;\n          if (that._l == entry) that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        validate(this, NAME);\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.n : this._f) {\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while (entry && entry.r) entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(validate(this, NAME), key);\n      }\n    });\n    if (DESCRIPTORS) dP(C.prototype, 'size', {\n      get: function () {\n        return validate(this, NAME)[SIZE];\n      }\n    });\n    return C;\n  },\n  def: function (that, key, value) {\n    var entry = getEntry(that, key);\n    var prev, index;\n    // change existing entry\n    if (entry) {\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if (!that._f) that._f = entry;\n      if (prev) prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if (index !== 'F') that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function (C, NAME, IS_MAP) {\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function (iterated, kind) {\n      this._t = validate(iterated, NAME); // target\n      this._k = kind;                     // kind\n      this._l = undefined;                // previous\n    }, function () {\n      var that = this;\n      var kind = that._k;\n      var entry = that._l;\n      // revert to the last existing entry\n      while (entry && entry.r) entry = entry.p;\n      // get next entry\n      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if (kind == 'keys') return step(0, entry.k);\n      if (kind == 'values') return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n","var isObject = require('./_is-object');\nvar isArray = require('./_is-array');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n","// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = require('./_ctx');\nvar IObject = require('./_iobject');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar asc = require('./_array-species-create');\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n","'use strict';\nvar global = require('./_global');\nvar $export = require('./_export');\nvar meta = require('./_meta');\nvar fails = require('./_fails');\nvar hide = require('./_hide');\nvar redefineAll = require('./_redefine-all');\nvar forOf = require('./_for-of');\nvar anInstance = require('./_an-instance');\nvar isObject = require('./_is-object');\nvar setToStringTag = require('./_set-to-string-tag');\nvar dP = require('./_object-dp').f;\nvar each = require('./_array-methods')(0);\nvar DESCRIPTORS = require('./_descriptors');\n\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  if (!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    C = wrapper(function (target, iterable) {\n      anInstance(target, C, NAME, '_c');\n      target._c = new Base();\n      if (iterable != undefined) forOf(iterable, IS_MAP, target[ADDER], target);\n    });\n    each('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','), function (KEY) {\n      var IS_ADDER = KEY == 'add' || KEY == 'set';\n      if (KEY in proto && !(IS_WEAK && KEY == 'clear')) hide(C.prototype, KEY, function (a, b) {\n        anInstance(this, C, KEY);\n        if (!IS_ADDER && IS_WEAK && !isObject(a)) return KEY == 'get' ? undefined : false;\n        var result = this._c[KEY](a === 0 ? 0 : a, b);\n        return IS_ADDER ? this : result;\n      });\n    });\n    IS_WEAK || dP(C.prototype, 'size', {\n      get: function () {\n        return this._c.size;\n      }\n    });\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F, O);\n\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};\n","'use strict';\nvar strong = require('./_collection-strong');\nvar validate = require('./_validate-collection');\nvar MAP = 'Map';\n\n// 23.1 Map Objects\nmodule.exports = require('./_collection')(MAP, function (get) {\n  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key) {\n    var entry = strong.getEntry(validate(this, MAP), key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value) {\n    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);\n  }\n}, strong, true);\n","var forOf = require('./_for-of');\n\nmodule.exports = function (iter, ITERATOR) {\n  var result = [];\n  forOf(iter, false, result.push, result, ITERATOR);\n  return result;\n};\n","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar classof = require('./_classof');\nvar from = require('./_array-from-iterable');\nmodule.exports = function (NAME) {\n  return function toJSON() {\n    if (classof(this) != NAME) throw TypeError(NAME + \"#toJSON isn't generic\");\n    return from(this);\n  };\n};\n","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export = require('./_export');\n\n$export($export.P + $export.R, 'Map', { toJSON: require('./_collection-to-json')('Map') });\n","'use strict';\n// https://tc39.github.io/proposal-setmap-offrom/\nvar $export = require('./_export');\n\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, { of: function of() {\n    var length = arguments.length;\n    var A = new Array(length);\n    while (length--) A[length] = arguments[length];\n    return new this(A);\n  } });\n};\n","// https://tc39.github.io/proposal-setmap-offrom/#sec-map.of\nrequire('./_set-collection-of')('Map');\n","'use strict';\n// https://tc39.github.io/proposal-setmap-offrom/\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar ctx = require('./_ctx');\nvar forOf = require('./_for-of');\n\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {\n    var mapFn = arguments[1];\n    var mapping, A, n, cb;\n    aFunction(this);\n    mapping = mapFn !== undefined;\n    if (mapping) aFunction(mapFn);\n    if (source == undefined) return new this();\n    A = [];\n    if (mapping) {\n      n = 0;\n      cb = ctx(mapFn, arguments[2], 2);\n      forOf(source, false, function (nextItem) {\n        A.push(cb(nextItem, n++));\n      });\n    } else {\n      forOf(source, false, A.push, A);\n    }\n    return new this(A);\n  } });\n};\n","// https://tc39.github.io/proposal-setmap-offrom/#sec-map.from\nrequire('./_set-collection-from')('Map');\n","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.map');\nrequire('../modules/es7.map.to-json');\nrequire('../modules/es7.map.of');\nrequire('../modules/es7.map.from');\nmodule.exports = require('../modules/_core').Map;\n","module.exports = require(\"core-js/library/fn/map\");","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n","module.exports = require(\"core-js/library/fn/object/define-property\");","var _Object$defineProperty = require(\"../core-js/object/define-property\");\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n\n    _Object$defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","// Copyright 2018 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n(() => {\n\t// Map web browser API and Node.js API to a single common API (preferring web standards over Node.js API).\n\n\tif (typeof window !== \"undefined\") {\n\t\twindow.global = window;\n\t} else if (typeof self !== \"undefined\") {\n\t\tself.global = self;\n\t} else {\n\t\tthrow new Error(\n\t\t\t\"cannot export Go (neither window nor self is defined)\"\n\t\t);\n\t}\n\n\tlet outputBuf = \"\";\n\tglobal.fs = {\n\t\tconstants: {\n\t\t\tO_WRONLY: -1,\n\t\t\tO_RDWR: -1,\n\t\t\tO_CREAT: -1,\n\t\t\tO_TRUNC: -1,\n\t\t\tO_APPEND: -1,\n\t\t\tO_EXCL: -1\n\t\t}, // unused\n\t\twriteSync(fd, buf) {\n\t\t\toutputBuf += decoder.decode(buf);\n\t\t\tconst nl = outputBuf.lastIndexOf(\"\\n\");\n\t\t\tif (nl != -1) {\n\t\t\t\tconsole.log(outputBuf.substr(0, nl));\n\t\t\t\toutputBuf = outputBuf.substr(nl + 1);\n\t\t\t}\n\t\t\treturn buf.length;\n\t\t},\n\t\topenSync(path, flags, mode) {\n\t\t\tconst err = new Error(\"not implemented\");\n\t\t\terr.code = \"ENOSYS\";\n\t\t\tthrow err;\n\t\t}\n\t};\n\n\tconst encoder = new TextEncoder(\"utf-8\");\n\tconst decoder = new TextDecoder(\"utf-8\");\n\n\tglobal.Go = class {\n\t\tconstructor() {\n\t\t\tthis.argv = [\"js\"];\n\t\t\tthis.env = {};\n\t\t\tthis.exit = code => {\n\t\t\t\tif (code !== 0) {\n\t\t\t\t\tconsole.warn(\"exit code:\", code);\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis._callbackTimeouts = new Map();\n\t\t\tthis._nextCallbackTimeoutID = 1;\n\n\t\t\tconst mem = () => {\n\t\t\t\t// The buffer may change when requesting more memory.\n\t\t\t\treturn new DataView(this._inst.exports.mem.buffer);\n\t\t\t};\n\n\t\t\tconst setInt64 = (addr, v) => {\n\t\t\t\tmem().setUint32(addr + 0, v, true);\n\t\t\t\tmem().setUint32(addr + 4, Math.floor(v / 4294967296), true);\n\t\t\t};\n\n\t\t\tconst getInt64 = addr => {\n\t\t\t\tconst low = mem().getUint32(addr + 0, true);\n\t\t\t\tconst high = mem().getInt32(addr + 4, true);\n\t\t\t\treturn low + high * 4294967296;\n\t\t\t};\n\n\t\t\tconst loadValue = addr => {\n\t\t\t\tconst f = mem().getFloat64(addr, true);\n\t\t\t\tif (!isNaN(f)) {\n\t\t\t\t\treturn f;\n\t\t\t\t}\n\n\t\t\t\tconst id = mem().getUint32(addr, true);\n\t\t\t\treturn this._values[id];\n\t\t\t};\n\n\t\t\tconst storeValue = (addr, v) => {\n\t\t\t\tconst nanHead = 0x7ff80000;\n\n\t\t\t\tif (typeof v === \"number\") {\n\t\t\t\t\tif (isNaN(v)) {\n\t\t\t\t\t\tmem().setUint32(addr + 4, nanHead, true);\n\t\t\t\t\t\tmem().setUint32(addr, 0, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tmem().setFloat64(addr, v, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tswitch (v) {\n\t\t\t\t\tcase undefined:\n\t\t\t\t\t\tmem().setUint32(addr + 4, nanHead, true);\n\t\t\t\t\t\tmem().setUint32(addr, 1, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase null:\n\t\t\t\t\t\tmem().setUint32(addr + 4, nanHead, true);\n\t\t\t\t\t\tmem().setUint32(addr, 2, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase true:\n\t\t\t\t\t\tmem().setUint32(addr + 4, nanHead, true);\n\t\t\t\t\t\tmem().setUint32(addr, 3, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase false:\n\t\t\t\t\t\tmem().setUint32(addr + 4, nanHead, true);\n\t\t\t\t\t\tmem().setUint32(addr, 4, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet ref = this._refs.get(v);\n\t\t\t\tif (ref === undefined) {\n\t\t\t\t\tref = this._values.length;\n\t\t\t\t\tthis._values.push(v);\n\t\t\t\t\tthis._refs.set(v, ref);\n\t\t\t\t}\n\t\t\t\tlet typeFlag = 0;\n\t\t\t\tswitch (typeof v) {\n\t\t\t\t\tcase \"string\":\n\t\t\t\t\t\ttypeFlag = 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"symbol\":\n\t\t\t\t\t\ttypeFlag = 2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"function\":\n\t\t\t\t\t\ttypeFlag = 3;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tmem().setUint32(addr + 4, nanHead | typeFlag, true);\n\t\t\t\tmem().setUint32(addr, ref, true);\n\t\t\t};\n\n\t\t\tconst loadSlice = addr => {\n\t\t\t\tconst array = getInt64(addr + 0);\n\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\treturn new Uint8Array(\n\t\t\t\t\tthis._inst.exports.mem.buffer,\n\t\t\t\t\tarray,\n\t\t\t\t\tlen\n\t\t\t\t);\n\t\t\t};\n\n\t\t\tconst loadSliceOfValues = addr => {\n\t\t\t\tconst array = getInt64(addr + 0);\n\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\tconst a = new Array(len);\n\t\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\t\ta[i] = loadValue(array + i * 8);\n\t\t\t\t}\n\t\t\t\treturn a;\n\t\t\t};\n\n\t\t\tconst loadString = addr => {\n\t\t\t\tconst saddr = getInt64(addr + 0);\n\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\treturn decoder.decode(\n\t\t\t\t\tnew DataView(this._inst.exports.mem.buffer, saddr, len)\n\t\t\t\t);\n\t\t\t};\n\n\t\t\tconst timeOrigin = Date.now() - performance.now();\n\t\t\tthis.importObject = {\n\t\t\t\tgo: {\n\t\t\t\t\t// func wasmExit(code int32)\n\t\t\t\t\t\"runtime.wasmExit\": sp => {\n\t\t\t\t\t\tconst code = mem().getInt32(sp + 8, true);\n\t\t\t\t\t\tthis.exited = true;\n\t\t\t\t\t\tdelete this._inst;\n\t\t\t\t\t\tdelete this._values;\n\t\t\t\t\t\tdelete this._refs;\n\t\t\t\t\t\tthis.exit(code);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func wasmWrite(fd uintptr, p unsafe.Pointer, n int32)\n\t\t\t\t\t\"runtime.wasmWrite\": sp => {\n\t\t\t\t\t\tconst fd = getInt64(sp + 8);\n\t\t\t\t\t\tconst p = getInt64(sp + 16);\n\t\t\t\t\t\tconst n = mem().getInt32(sp + 24, true);\n\t\t\t\t\t\tfs.writeSync(\n\t\t\t\t\t\t\tfd,\n\t\t\t\t\t\t\tnew Uint8Array(this._inst.exports.mem.buffer, p, n)\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func nanotime() int64\n\t\t\t\t\t\"runtime.nanotime\": sp => {\n\t\t\t\t\t\tsetInt64(\n\t\t\t\t\t\t\tsp + 8,\n\t\t\t\t\t\t\t(timeOrigin + performance.now()) * 1000000\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func walltime() (sec int64, nsec int32)\n\t\t\t\t\t\"runtime.walltime\": sp => {\n\t\t\t\t\t\tconst msec = new Date().getTime();\n\t\t\t\t\t\tsetInt64(sp + 8, msec / 1000);\n\t\t\t\t\t\tmem().setInt32(sp + 16, (msec % 1000) * 1000000, true);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func scheduleCallback(delay int64) int32\n\t\t\t\t\t\"runtime.scheduleCallback\": sp => {\n\t\t\t\t\t\tconst id = this._nextCallbackTimeoutID;\n\t\t\t\t\t\tthis._nextCallbackTimeoutID++;\n\t\t\t\t\t\tthis._callbackTimeouts.set(\n\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\tsetTimeout(\n\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\tthis._resolveCallbackPromise();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tgetInt64(sp + 8) + 1 // setTimeout has been seen to fire up to 1 millisecond early\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tmem().setInt32(sp + 16, id, true);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func clearScheduledCallback(id int32)\n\t\t\t\t\t\"runtime.clearScheduledCallback\": sp => {\n\t\t\t\t\t\tconst id = mem().getInt32(sp + 8, true);\n\t\t\t\t\t\tclearTimeout(this._callbackTimeouts.get(id));\n\t\t\t\t\t\tthis._callbackTimeouts.delete(id);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func getRandomData(r []byte)\n\t\t\t\t\t\"runtime.getRandomData\": sp => {\n\t\t\t\t\t\tcrypto.getRandomValues(loadSlice(sp + 8));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func stringVal(value string) ref\n\t\t\t\t\t\"syscall/js.stringVal\": sp => {\n\t\t\t\t\t\tstoreValue(sp + 24, loadString(sp + 8));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueGet(v ref, p string) ref\n\t\t\t\t\t\"syscall/js.valueGet\": sp => {\n\t\t\t\t\t\tstoreValue(\n\t\t\t\t\t\t\tsp + 32,\n\t\t\t\t\t\t\tReflect.get(loadValue(sp + 8), loadString(sp + 16))\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueSet(v ref, p string, x ref)\n\t\t\t\t\t\"syscall/js.valueSet\": sp => {\n\t\t\t\t\t\tReflect.set(\n\t\t\t\t\t\t\tloadValue(sp + 8),\n\t\t\t\t\t\t\tloadString(sp + 16),\n\t\t\t\t\t\t\tloadValue(sp + 32)\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueIndex(v ref, i int) ref\n\t\t\t\t\t\"syscall/js.valueIndex\": sp => {\n\t\t\t\t\t\tstoreValue(\n\t\t\t\t\t\t\tsp + 24,\n\t\t\t\t\t\t\tReflect.get(loadValue(sp + 8), getInt64(sp + 16))\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\n\t\t\t\t\t// valueSetIndex(v ref, i int, x ref)\n\t\t\t\t\t\"syscall/js.valueSetIndex\": sp => {\n\t\t\t\t\t\tReflect.set(\n\t\t\t\t\t\t\tloadValue(sp + 8),\n\t\t\t\t\t\t\tgetInt64(sp + 16),\n\t\t\t\t\t\t\tloadValue(sp + 24)\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueCall(v ref, m string, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueCall\": sp => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\tconst m = Reflect.get(v, loadString(sp + 16));\n\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 32);\n\t\t\t\t\t\t\tstoreValue(sp + 56, Reflect.apply(m, v, args));\n\t\t\t\t\t\t\tmem().setUint8(sp + 64, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tstoreValue(sp + 56, err);\n\t\t\t\t\t\t\tmem().setUint8(sp + 64, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueInvoke(v ref, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueInvoke\": sp => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 16);\n\t\t\t\t\t\t\tstoreValue(\n\t\t\t\t\t\t\t\tsp + 40,\n\t\t\t\t\t\t\t\tReflect.apply(v, undefined, args)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tmem().setUint8(sp + 48, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tstoreValue(sp + 40, err);\n\t\t\t\t\t\t\tmem().setUint8(sp + 48, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueNew(v ref, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueNew\": sp => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 16);\n\t\t\t\t\t\t\tstoreValue(sp + 40, Reflect.construct(v, args));\n\t\t\t\t\t\t\tmem().setUint8(sp + 48, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tstoreValue(sp + 40, err);\n\t\t\t\t\t\t\tmem().setUint8(sp + 48, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueLength(v ref) int\n\t\t\t\t\t\"syscall/js.valueLength\": sp => {\n\t\t\t\t\t\tsetInt64(sp + 16, parseInt(loadValue(sp + 8).length));\n\t\t\t\t\t},\n\n\t\t\t\t\t// valuePrepareString(v ref) (ref, int)\n\t\t\t\t\t\"syscall/js.valuePrepareString\": sp => {\n\t\t\t\t\t\tconst str = encoder.encode(String(loadValue(sp + 8)));\n\t\t\t\t\t\tstoreValue(sp + 16, str);\n\t\t\t\t\t\tsetInt64(sp + 24, str.length);\n\t\t\t\t\t},\n\n\t\t\t\t\t// valueLoadString(v ref, b []byte)\n\t\t\t\t\t\"syscall/js.valueLoadString\": sp => {\n\t\t\t\t\t\tconst str = loadValue(sp + 8);\n\t\t\t\t\t\tloadSlice(sp + 16).set(str);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueInstanceOf(v ref, t ref) bool\n\t\t\t\t\t\"syscall/js.valueInstanceOf\": sp => {\n\t\t\t\t\t\tmem().setUint8(\n\t\t\t\t\t\t\tsp + 24,\n\t\t\t\t\t\t\tloadValue(sp + 8) instanceof loadValue(sp + 16)\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\n\t\t\t\t\tdebug: value => {\n\t\t\t\t\t\tconsole.log(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tasync run(instance) {\n\t\t\tthis._inst = instance;\n\t\t\tthis._values = [\n\t\t\t\t// TODO: garbage collection\n\t\t\t\tNaN,\n\t\t\t\tundefined,\n\t\t\t\tnull,\n\t\t\t\ttrue,\n\t\t\t\tfalse,\n\t\t\t\tglobal,\n\t\t\t\tthis._inst.exports.mem,\n\t\t\t\tthis\n\t\t\t];\n\t\t\tthis._refs = new Map();\n\t\t\tthis._callbackShutdown = false;\n\t\t\tthis.exited = false;\n\n\t\t\tconst mem = new DataView(this._inst.exports.mem.buffer);\n\n\t\t\t// Pass command line arguments and environment variables to WebAssembly by writing them to the linear memory.\n\t\t\tlet offset = 4096;\n\n\t\t\tconst strPtr = str => {\n\t\t\t\tlet ptr = offset;\n\t\t\t\tnew Uint8Array(mem.buffer, offset, str.length + 1).set(\n\t\t\t\t\tencoder.encode(str + \"\\0\")\n\t\t\t\t);\n\t\t\t\toffset += str.length + (8 - str.length % 8);\n\t\t\t\treturn ptr;\n\t\t\t};\n\n\t\t\tconst argc = this.argv.length;\n\n\t\t\tconst argvPtrs = [];\n\t\t\tthis.argv.forEach(arg => {\n\t\t\t\targvPtrs.push(strPtr(arg));\n\t\t\t});\n\n\t\t\tconst keys = Object.keys(this.env).sort();\n\t\t\targvPtrs.push(keys.length);\n\t\t\tkeys.forEach(key => {\n\t\t\t\targvPtrs.push(strPtr(`${key}=${this.env[key]}`));\n\t\t\t});\n\n\t\t\tconst argv = offset;\n\t\t\targvPtrs.forEach(ptr => {\n\t\t\t\tmem.setUint32(offset, ptr, true);\n\t\t\t\tmem.setUint32(offset + 4, 0, true);\n\t\t\t\toffset += 8;\n\t\t\t});\n\n\t\t\twhile (true) {\n\t\t\t\tconst callbackPromise = new Promise(resolve => {\n\t\t\t\t\tthis._resolveCallbackPromise = () => {\n\t\t\t\t\t\tif (this.exited) {\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\"bad callback: Go program has already exited\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsetTimeout(resolve, 0); // make sure it is asynchronous\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tthis._inst.exports.run(argc, argv);\n\t\t\t\tif (this.exited) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tawait callbackPromise;\n\t\t\t}\n\t\t}\n\n\t\tstatic _makeCallbackHelper(id, pendingCallbacks, go) {\n\t\t\treturn function() {\n\t\t\t\tpendingCallbacks.push({ id: id, args: arguments });\n\t\t\t\tgo._resolveCallbackPromise();\n\t\t\t};\n\t\t}\n\n\t\tstatic _makeEventCallbackHelper(\n\t\t\tpreventDefault,\n\t\t\tstopPropagation,\n\t\t\tstopImmediatePropagation,\n\t\t\tfn\n\t\t) {\n\t\t\treturn function(event) {\n\t\t\t\tif (preventDefault) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tif (stopPropagation) {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t}\n\t\t\t\tif (stopImmediatePropagation) {\n\t\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\t}\n\t\t\t\tfn(event);\n\t\t\t};\n\t\t}\n\t};\n})();\n","import Terminal from \"xterm/src/xterm.ts\";\nimport * as attach from \"./attach.ts\";\nimport * as fullscreen from \"xterm/src/addons/fullscreen/fullscreen.ts\";\nimport * as fit from \"xterm/src/addons/fit/fit.ts\";\n\nimport \"xterm/dist/xterm.css\";\nimport \"xterm/dist/addons/fullscreen/fullscreen.css\";\n\n// imports \"Go\"\nimport \"./wasm_exec.js\";\n\nTerminal.applyAddon(attach);\nTerminal.applyAddon(fullscreen);\nTerminal.applyAddon(fit);\n\n// Polyfill for WebAssembly on Safari\nif (!WebAssembly.instantiateStreaming) {\n  WebAssembly.instantiateStreaming = async (resp, importObject) => {\n    const source = await (await resp).arrayBuffer();\n    return await WebAssembly.instantiate(source, importObject);\n  };\n}\n\nconst go = new Go();\nWebAssembly.instantiateStreaming(fetch(\"main.wasm\"), go.importObject).then(\n  result => {\n    let mod = result.module;\n    let inst = result.instance;\n    go.run(inst);\n  }\n);\n\nconst create10kbFile = (path: string, body: string): void =>\n  fetch(\"https://up.10kb.site/\" + path, {\n    method: \"POST\",\n    body: body\n  })\n    .then(resp => resp.text())\n    .then(resp => {});\n\nconst startSession = (data: string) => {\n  decode(data, (Sdp, tenKbSiteLoc, err) => {\n    if (err != \"\") {\n      console.log(err);\n    }\n    if (tenKbSiteLoc != \"\") {\n      TenKbSiteLoc = tenKbSiteLoc;\n    }\n    pc\n      .setRemoteDescription(\n        new RTCSessionDescription({\n          type: \"offer\",\n          sdp: Sdp\n        })\n      )\n      .catch(log);\n    pc\n      .createAnswer()\n      .then(d => pc.setLocalDescription(d))\n      .catch(log);\n  });\n};\n\nlet TenKbSiteLoc = null;\n\nconst term = new Terminal();\nterm.open(document.getElementById(\"terminal\"));\nterm.toggleFullScreen();\nterm.fit();\nwindow.onresize = () => {\n  term.fit();\n};\nterm.write(\"Welcome to the WebTTY web client.\\n\\r\");\n\nlet pc = new RTCPeerConnection({\n  iceServers: [\n    {\n      urls: \"stun:stun.l.google.com:19302\"\n    }\n  ]\n});\n\nlet log = msg => {\n  term.write(msg + \"\\n\\r\");\n};\n\nlet sendChannel = pc.createDataChannel(\"data\");\nsendChannel.onclose = () => console.log(\"sendChannel has closed\");\nsendChannel.onopen = () => {\n  term.reset();\n  term.terminadoAttach(sendChannel);\n  sendChannel.send(JSON.stringify([\"set_size\", term.rows, term.cols]));\n  console.log(\"sendChannel has opened\");\n};\n// sendChannel.onmessage = e => {}\n\npc.onsignalingstatechange = e => log(pc.signalingState);\npc.oniceconnectionstatechange = e => log(pc.iceConnectionState);\npc.onicecandidate = event => {\n  if (event.candidate === null) {\n    if (TenKbSiteLoc == null) {\n      term.write(\n        \"Answer created. Send the following answer to the host:\\n\\r\\n\\r\"\n      );\n      encode(pc.localDescription.sdp, (encoded, err) => {\n        if (err != \"\") {\n          console.log(err);\n        }\n        term.write(encoded);\n      });\n    } else {\n      term.write(\"Waiting for connection...\");\n      encode(pc.localDescription.sdp, (encoded, err) => {\n        if (err != \"\") {\n          console.log(err);\n        }\n        create10kbFile(TenKbSiteLoc, encoded);\n      });\n    }\n  }\n};\n\npc.onnegotiationneeded = e => console.log(e);\n\nwindow.sendMessage = () => {\n  let message = document.getElementById(\"message\").value;\n  if (message === \"\") {\n    return alert(\"Message must not be empty\");\n  }\n\n  sendChannel.send(message);\n};\n\nlet firstInput: boolean = false;\nconst urlData = window.location.hash.substr(1);\nconsole.log(urlData);\nif (urlData != \"\") {\n  try {\n    startSession(urlData);\n    firstInput = true;\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nif (firstInput == false) {\n  term.write(\"Run webtty and paste the offer message below:\\n\\r\");\n}\n\nterm.on(\"data\", data => {\n  if (!firstInput) {\n    term.reset();\n    try {\n      startSession(data);\n    } catch (err) {\n      console.log(err);\n      term.write(`There was an error with the offer: ${data}\\n\\r`);\n      term.write(\"Try entering the message again: \");\n      return;\n    }\n    firstInput = true;\n  }\n});\n"]}